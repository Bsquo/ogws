.include "macros.inc"

.section .bss, "wa"
.balign 0x8
gTRKFramingState:
	.skip 0x18

.section .text, "ax"
.global TRKTerminateSerialHandler
TRKTerminateSerialHandler:
/* 800C1DE0 000BCCE0  38 60 00 00 */	li r3, 0
/* 800C1DE4 000BCCE4  4E 80 00 20 */	blr 

.global TRKInitializeSerialHandler
TRKInitializeSerialHandler:
/* 800C1DE8 000BCCE8  3C 60 80 41 */	lis r3, gTRKFramingState@ha
/* 800C1DEC 000BCCEC  38 A0 FF FF */	li r5, -1
/* 800C1DF0 000BCCF0  38 83 D6 78 */	addi r4, r3, gTRKFramingState@l
/* 800C1DF4 000BCCF4  38 00 00 00 */	li r0, 0
/* 800C1DF8 000BCCF8  90 A4 00 00 */	stw r5, 0(r4)
/* 800C1DFC 000BCCFC  38 60 00 00 */	li r3, 0
/* 800C1E00 000BCD00  90 04 00 08 */	stw r0, 8(r4)
/* 800C1E04 000BCD04  90 04 00 0C */	stw r0, 0xc(r4)
/* 800C1E08 000BCD08  4E 80 00 20 */	blr 

.global TRKProcessInput
TRKProcessInput:
/* 800C1E0C 000BCD0C  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800C1E10 000BCD10  7C 08 02 A6 */	mflr r0
/* 800C1E14 000BCD14  38 80 00 02 */	li r4, 2
/* 800C1E18 000BCD18  90 01 00 24 */	stw r0, 0x24(r1)
/* 800C1E1C 000BCD1C  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 800C1E20 000BCD20  7C 7F 1B 78 */	mr r31, r3
/* 800C1E24 000BCD24  38 61 00 08 */	addi r3, r1, 8
/* 800C1E28 000BCD28  4B FF F3 C9 */	bl TRKConstructEvent
/* 800C1E2C 000BCD2C  3C 60 80 41 */	lis r3, gTRKFramingState@ha
/* 800C1E30 000BCD30  38 00 FF FF */	li r0, -1
/* 800C1E34 000BCD34  38 83 D6 78 */	addi r4, r3, gTRKFramingState@l
/* 800C1E38 000BCD38  93 E1 00 10 */	stw r31, 0x10(r1)
/* 800C1E3C 000BCD3C  38 61 00 08 */	addi r3, r1, 8
/* 800C1E40 000BCD40  90 04 00 00 */	stw r0, 0(r4)
/* 800C1E44 000BCD44  4B FF F3 C5 */	bl TRKPostEvent
/* 800C1E48 000BCD48  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800C1E4C 000BCD4C  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 800C1E50 000BCD50  7C 08 03 A6 */	mtlr r0
/* 800C1E54 000BCD54  38 21 00 20 */	addi r1, r1, 0x20
/* 800C1E58 000BCD58  4E 80 00 20 */	blr 

.global TRKGetInput
TRKGetInput:
/* 800C1E5C 000BCD5C  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800C1E60 000BCD60  7C 08 02 A6 */	mflr r0
/* 800C1E64 000BCD64  90 01 00 24 */	stw r0, 0x24(r1)
/* 800C1E68 000BCD68  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 800C1E6C 000BCD6C  48 00 00 51 */	bl TRKTestForPacket
/* 800C1E70 000BCD70  7C 7F 1B 78 */	mr r31, r3
/* 800C1E74 000BCD74  2C 1F FF FF */	cmpwi r31, -1
/* 800C1E78 000BCD78  41 82 00 30 */	beq lbl_800C1EA8
/* 800C1E7C 000BCD7C  4B FF FD FD */	bl TRKGetBuffer
/* 800C1E80 000BCD80  38 61 00 08 */	addi r3, r1, 8
/* 800C1E84 000BCD84  38 80 00 02 */	li r4, 2
/* 800C1E88 000BCD88  4B FF F3 69 */	bl TRKConstructEvent
/* 800C1E8C 000BCD8C  3C 60 80 41 */	lis r3, gTRKFramingState@ha
/* 800C1E90 000BCD90  38 00 FF FF */	li r0, -1
/* 800C1E94 000BCD94  38 83 D6 78 */	addi r4, r3, gTRKFramingState@l
/* 800C1E98 000BCD98  93 E1 00 10 */	stw r31, 0x10(r1)
/* 800C1E9C 000BCD9C  38 61 00 08 */	addi r3, r1, 8
/* 800C1EA0 000BCDA0  90 04 00 00 */	stw r0, 0(r4)
/* 800C1EA4 000BCDA4  4B FF F3 65 */	bl TRKPostEvent
lbl_800C1EA8:
/* 800C1EA8 000BCDA8  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800C1EAC 000BCDAC  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 800C1EB0 000BCDB0  7C 08 03 A6 */	mtlr r0
/* 800C1EB4 000BCDB4  38 21 00 20 */	addi r1, r1, 0x20
/* 800C1EB8 000BCDB8  4E 80 00 20 */	blr 

.global TRKTestForPacket
TRKTestForPacket:
/* 800C1EBC 000BCDBC  94 21 F7 20 */	stwu r1, -0x8e0(r1)
/* 800C1EC0 000BCDC0  7C 08 02 A6 */	mflr r0
/* 800C1EC4 000BCDC4  90 01 08 E4 */	stw r0, 0x8e4(r1)
/* 800C1EC8 000BCDC8  93 E1 08 DC */	stw r31, 0x8dc(r1)
/* 800C1ECC 000BCDCC  48 00 40 59 */	bl func_800C5F24
/* 800C1ED0 000BCDD0  2C 03 00 00 */	cmpwi r3, 0
/* 800C1ED4 000BCDD4  41 81 00 0C */	bgt lbl_800C1EE0
/* 800C1ED8 000BCDD8  38 60 FF FF */	li r3, -1
/* 800C1EDC 000BCDDC  48 00 00 9C */	b lbl_800C1F78
lbl_800C1EE0:
/* 800C1EE0 000BCDE0  38 61 00 0C */	addi r3, r1, 0xc
/* 800C1EE4 000BCDE4  38 81 00 08 */	addi r4, r1, 8
/* 800C1EE8 000BCDE8  4B FF FD BD */	bl TRKGetFreeBuffer
/* 800C1EEC 000BCDEC  7C 60 1B 78 */	mr r0, r3
/* 800C1EF0 000BCDF0  80 61 00 08 */	lwz r3, 8(r1)
/* 800C1EF4 000BCDF4  7C 1F 03 78 */	mr r31, r0
/* 800C1EF8 000BCDF8  38 80 00 00 */	li r4, 0
/* 800C1EFC 000BCDFC  4B FF FC A9 */	bl TRKSetBufferPosition
/* 800C1F00 000BCE00  38 61 00 10 */	addi r3, r1, 0x10
/* 800C1F04 000BCE04  38 80 00 40 */	li r4, 0x40
/* 800C1F08 000BCE08  48 00 3F E1 */	bl func_800C5EE8
/* 800C1F0C 000BCE0C  2C 03 00 00 */	cmpwi r3, 0
/* 800C1F10 000BCE10  40 82 00 58 */	bne lbl_800C1F68
/* 800C1F14 000BCE14  80 61 00 08 */	lwz r3, 8(r1)
/* 800C1F18 000BCE18  38 81 00 10 */	addi r4, r1, 0x10
/* 800C1F1C 000BCE1C  38 A0 00 40 */	li r5, 0x40
/* 800C1F20 000BCE20  4B FF F9 F1 */	bl TRKAppendBuffer_ui8
/* 800C1F24 000BCE24  80 61 00 10 */	lwz r3, 0x10(r1)
/* 800C1F28 000BCE28  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 800C1F2C 000BCE2C  34 83 FF C0 */	addic. r4, r3, -64
/* 800C1F30 000BCE30  40 81 00 44 */	ble lbl_800C1F74
/* 800C1F34 000BCE34  38 61 00 50 */	addi r3, r1, 0x50
/* 800C1F38 000BCE38  48 00 3F B1 */	bl func_800C5EE8
/* 800C1F3C 000BCE3C  2C 03 00 00 */	cmpwi r3, 0
/* 800C1F40 000BCE40  40 82 00 18 */	bne lbl_800C1F58
/* 800C1F44 000BCE44  80 61 00 08 */	lwz r3, 8(r1)
/* 800C1F48 000BCE48  38 81 00 50 */	addi r4, r1, 0x50
/* 800C1F4C 000BCE4C  80 A1 00 10 */	lwz r5, 0x10(r1)
/* 800C1F50 000BCE50  4B FF F9 C1 */	bl TRKAppendBuffer_ui8
/* 800C1F54 000BCE54  48 00 00 20 */	b lbl_800C1F74
lbl_800C1F58:
/* 800C1F58 000BCE58  7F E3 FB 78 */	mr r3, r31
/* 800C1F5C 000BCE5C  4B FF FC B9 */	bl TRKReleaseBuffer
/* 800C1F60 000BCE60  3B E0 FF FF */	li r31, -1
/* 800C1F64 000BCE64  48 00 00 10 */	b lbl_800C1F74
lbl_800C1F68:
/* 800C1F68 000BCE68  7F E3 FB 78 */	mr r3, r31
/* 800C1F6C 000BCE6C  4B FF FC A9 */	bl TRKReleaseBuffer
/* 800C1F70 000BCE70  3B E0 FF FF */	li r31, -1
lbl_800C1F74:
/* 800C1F74 000BCE74  7F E3 FB 78 */	mr r3, r31
lbl_800C1F78:
/* 800C1F78 000BCE78  80 01 08 E4 */	lwz r0, 0x8e4(r1)
/* 800C1F7C 000BCE7C  83 E1 08 DC */	lwz r31, 0x8dc(r1)
/* 800C1F80 000BCE80  7C 08 03 A6 */	mtlr r0
/* 800C1F84 000BCE84  38 21 08 E0 */	addi r1, r1, 0x8e0
/* 800C1F88 000BCE88  4E 80 00 20 */	blr 
