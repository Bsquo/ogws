.include "macros.inc"

.section .text, "ax"
.global CircleBufferReadBytes
CircleBufferReadBytes:
/* 800C6550 000C1450  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800C6554 000C1454  7C 08 02 A6 */	mflr r0
/* 800C6558 000C1458  90 01 00 24 */	stw r0, 0x24(r1)
/* 800C655C 000C145C  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 800C6560 000C1460  7C BF 2B 78 */	mr r31, r5
/* 800C6564 000C1464  93 C1 00 18 */	stw r30, 0x18(r1)
/* 800C6568 000C1468  7C 7E 1B 78 */	mr r30, r3
/* 800C656C 000C146C  93 A1 00 14 */	stw r29, 0x14(r1)
/* 800C6570 000C1470  93 81 00 10 */	stw r28, 0x10(r1)
/* 800C6574 000C1474  7C 9C 23 78 */	mr r28, r4
/* 800C6578 000C1478  80 03 00 10 */	lwz r0, 0x10(r3)
/* 800C657C 000C147C  7C 1F 00 40 */	cmplw r31, r0
/* 800C6580 000C1480  40 81 00 0C */	ble lbl_800C658C
/* 800C6584 000C1484  38 60 FF FF */	li r3, -1
/* 800C6588 000C1488  48 00 00 B0 */	b lbl_800C6638
lbl_800C658C:
/* 800C658C 000C148C  38 7E 00 18 */	addi r3, r30, 0x18
/* 800C6590 000C1490  48 00 02 4D */	bl func_800C67DC
/* 800C6594 000C1494  80 7E 00 08 */	lwz r3, 8(r30)
/* 800C6598 000C1498  80 9E 00 00 */	lwz r4, 0(r30)
/* 800C659C 000C149C  80 1E 00 0C */	lwz r0, 0xc(r30)
/* 800C65A0 000C14A0  7C 63 20 50 */	subf r3, r3, r4
/* 800C65A4 000C14A4  7F A3 00 50 */	subf r29, r3, r0
/* 800C65A8 000C14A8  7C 1F E8 40 */	cmplw r31, r29
/* 800C65AC 000C14AC  40 80 00 20 */	bge lbl_800C65CC
/* 800C65B0 000C14B0  7F 83 E3 78 */	mr r3, r28
/* 800C65B4 000C14B4  7F E5 FB 78 */	mr r5, r31
/* 800C65B8 000C14B8  4B F3 DA 49 */	bl memcpy
/* 800C65BC 000C14BC  80 1E 00 00 */	lwz r0, 0(r30)
/* 800C65C0 000C14C0  7C 00 FA 14 */	add r0, r0, r31
/* 800C65C4 000C14C4  90 1E 00 00 */	stw r0, 0(r30)
/* 800C65C8 000C14C8  48 00 00 30 */	b lbl_800C65F8
lbl_800C65CC:
/* 800C65CC 000C14CC  7F 83 E3 78 */	mr r3, r28
/* 800C65D0 000C14D0  7F A5 EB 78 */	mr r5, r29
/* 800C65D4 000C14D4  4B F3 DA 2D */	bl memcpy
/* 800C65D8 000C14D8  80 9E 00 08 */	lwz r4, 8(r30)
/* 800C65DC 000C14DC  7C 7C EA 14 */	add r3, r28, r29
/* 800C65E0 000C14E0  7C BD F8 50 */	subf r5, r29, r31
/* 800C65E4 000C14E4  4B F3 DA 1D */	bl memcpy
/* 800C65E8 000C14E8  80 1E 00 08 */	lwz r0, 8(r30)
/* 800C65EC 000C14EC  7C 00 FA 14 */	add r0, r0, r31
/* 800C65F0 000C14F0  7C 1D 00 50 */	subf r0, r29, r0
/* 800C65F4 000C14F4  90 1E 00 00 */	stw r0, 0(r30)
lbl_800C65F8:
/* 800C65F8 000C14F8  80 9E 00 08 */	lwz r4, 8(r30)
/* 800C65FC 000C14FC  80 1E 00 00 */	lwz r0, 0(r30)
/* 800C6600 000C1500  80 7E 00 0C */	lwz r3, 0xc(r30)
/* 800C6604 000C1504  7C 04 00 50 */	subf r0, r4, r0
/* 800C6608 000C1508  7C 03 00 40 */	cmplw r3, r0
/* 800C660C 000C150C  40 82 00 08 */	bne lbl_800C6614
/* 800C6610 000C1510  90 9E 00 00 */	stw r4, 0(r30)
lbl_800C6614:
/* 800C6614 000C1514  80 1E 00 14 */	lwz r0, 0x14(r30)
/* 800C6618 000C1518  38 7E 00 18 */	addi r3, r30, 0x18
/* 800C661C 000C151C  7C 00 FA 14 */	add r0, r0, r31
/* 800C6620 000C1520  90 1E 00 14 */	stw r0, 0x14(r30)
/* 800C6624 000C1524  80 1E 00 10 */	lwz r0, 0x10(r30)
/* 800C6628 000C1528  7C 1F 00 50 */	subf r0, r31, r0
/* 800C662C 000C152C  90 1E 00 10 */	stw r0, 0x10(r30)
/* 800C6630 000C1530  48 00 01 89 */	bl func_800C67B8
/* 800C6634 000C1534  38 60 00 00 */	li r3, 0
lbl_800C6638:
/* 800C6638 000C1538  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800C663C 000C153C  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 800C6640 000C1540  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 800C6644 000C1544  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 800C6648 000C1548  83 81 00 10 */	lwz r28, 0x10(r1)
/* 800C664C 000C154C  7C 08 03 A6 */	mtlr r0
/* 800C6650 000C1550  38 21 00 20 */	addi r1, r1, 0x20
/* 800C6654 000C1554  4E 80 00 20 */	blr 

.global CircleBufferWriteBytes
CircleBufferWriteBytes:
/* 800C6658 000C1558  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800C665C 000C155C  7C 08 02 A6 */	mflr r0
/* 800C6660 000C1560  90 01 00 24 */	stw r0, 0x24(r1)
/* 800C6664 000C1564  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 800C6668 000C1568  7C BF 2B 78 */	mr r31, r5
/* 800C666C 000C156C  93 C1 00 18 */	stw r30, 0x18(r1)
/* 800C6670 000C1570  7C 7E 1B 78 */	mr r30, r3
/* 800C6674 000C1574  93 A1 00 14 */	stw r29, 0x14(r1)
/* 800C6678 000C1578  93 81 00 10 */	stw r28, 0x10(r1)
/* 800C667C 000C157C  7C 9C 23 78 */	mr r28, r4
/* 800C6680 000C1580  80 03 00 14 */	lwz r0, 0x14(r3)
/* 800C6684 000C1584  7C 1F 00 40 */	cmplw r31, r0
/* 800C6688 000C1588  40 81 00 0C */	ble lbl_800C6694
/* 800C668C 000C158C  38 60 FF FF */	li r3, -1
/* 800C6690 000C1590  48 00 00 B0 */	b lbl_800C6740
lbl_800C6694:
/* 800C6694 000C1594  38 7E 00 18 */	addi r3, r30, 0x18
/* 800C6698 000C1598  48 00 01 45 */	bl func_800C67DC
/* 800C669C 000C159C  80 9E 00 08 */	lwz r4, 8(r30)
/* 800C66A0 000C15A0  80 7E 00 04 */	lwz r3, 4(r30)
/* 800C66A4 000C15A4  80 1E 00 0C */	lwz r0, 0xc(r30)
/* 800C66A8 000C15A8  7C 84 18 50 */	subf r4, r4, r3
/* 800C66AC 000C15AC  7F A4 00 50 */	subf r29, r4, r0
/* 800C66B0 000C15B0  7C 1D F8 40 */	cmplw r29, r31
/* 800C66B4 000C15B4  41 80 00 20 */	blt lbl_800C66D4
/* 800C66B8 000C15B8  7F 84 E3 78 */	mr r4, r28
/* 800C66BC 000C15BC  7F E5 FB 78 */	mr r5, r31
/* 800C66C0 000C15C0  4B F3 D9 41 */	bl memcpy
/* 800C66C4 000C15C4  80 1E 00 04 */	lwz r0, 4(r30)
/* 800C66C8 000C15C8  7C 00 FA 14 */	add r0, r0, r31
/* 800C66CC 000C15CC  90 1E 00 04 */	stw r0, 4(r30)
/* 800C66D0 000C15D0  48 00 00 30 */	b lbl_800C6700
lbl_800C66D4:
/* 800C66D4 000C15D4  7F 84 E3 78 */	mr r4, r28
/* 800C66D8 000C15D8  7F A5 EB 78 */	mr r5, r29
/* 800C66DC 000C15DC  4B F3 D9 25 */	bl memcpy
/* 800C66E0 000C15E0  80 7E 00 08 */	lwz r3, 8(r30)
/* 800C66E4 000C15E4  7C 9C EA 14 */	add r4, r28, r29
/* 800C66E8 000C15E8  7C BD F8 50 */	subf r5, r29, r31
/* 800C66EC 000C15EC  4B F3 D9 15 */	bl memcpy
/* 800C66F0 000C15F0  80 1E 00 08 */	lwz r0, 8(r30)
/* 800C66F4 000C15F4  7C 00 FA 14 */	add r0, r0, r31
/* 800C66F8 000C15F8  7C 1D 00 50 */	subf r0, r29, r0
/* 800C66FC 000C15FC  90 1E 00 04 */	stw r0, 4(r30)
lbl_800C6700:
/* 800C6700 000C1600  80 9E 00 08 */	lwz r4, 8(r30)
/* 800C6704 000C1604  80 1E 00 04 */	lwz r0, 4(r30)
/* 800C6708 000C1608  80 7E 00 0C */	lwz r3, 0xc(r30)
/* 800C670C 000C160C  7C 04 00 50 */	subf r0, r4, r0
/* 800C6710 000C1610  7C 03 00 40 */	cmplw r3, r0
/* 800C6714 000C1614  40 82 00 08 */	bne lbl_800C671C
/* 800C6718 000C1618  90 9E 00 04 */	stw r4, 4(r30)
lbl_800C671C:
/* 800C671C 000C161C  80 1E 00 14 */	lwz r0, 0x14(r30)
/* 800C6720 000C1620  38 7E 00 18 */	addi r3, r30, 0x18
/* 800C6724 000C1624  7C 1F 00 50 */	subf r0, r31, r0
/* 800C6728 000C1628  90 1E 00 14 */	stw r0, 0x14(r30)
/* 800C672C 000C162C  80 1E 00 10 */	lwz r0, 0x10(r30)
/* 800C6730 000C1630  7C 00 FA 14 */	add r0, r0, r31
/* 800C6734 000C1634  90 1E 00 10 */	stw r0, 0x10(r30)
/* 800C6738 000C1638  48 00 00 81 */	bl func_800C67B8
/* 800C673C 000C163C  38 60 00 00 */	li r3, 0
lbl_800C6740:
/* 800C6740 000C1640  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800C6744 000C1644  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 800C6748 000C1648  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 800C674C 000C164C  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 800C6750 000C1650  83 81 00 10 */	lwz r28, 0x10(r1)
/* 800C6754 000C1654  7C 08 03 A6 */	mtlr r0
/* 800C6758 000C1658  38 21 00 20 */	addi r1, r1, 0x20
/* 800C675C 000C165C  4E 80 00 20 */	blr 

.global CircleBufferInitialize
CircleBufferInitialize:
/* 800C6760 000C1660  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800C6764 000C1664  7C 08 02 A6 */	mflr r0
/* 800C6768 000C1668  7C 66 1B 78 */	mr r6, r3
/* 800C676C 000C166C  90 01 00 14 */	stw r0, 0x14(r1)
/* 800C6770 000C1670  38 00 00 00 */	li r0, 0
/* 800C6774 000C1674  90 83 00 08 */	stw r4, 8(r3)
/* 800C6778 000C1678  38 66 00 18 */	addi r3, r6, 0x18
/* 800C677C 000C167C  90 A6 00 0C */	stw r5, 0xc(r6)
/* 800C6780 000C1680  80 86 00 08 */	lwz r4, 8(r6)
/* 800C6784 000C1684  90 86 00 00 */	stw r4, 0(r6)
/* 800C6788 000C1688  80 86 00 08 */	lwz r4, 8(r6)
/* 800C678C 000C168C  90 86 00 04 */	stw r4, 4(r6)
/* 800C6790 000C1690  90 06 00 10 */	stw r0, 0x10(r6)
/* 800C6794 000C1694  80 06 00 0C */	lwz r0, 0xc(r6)
/* 800C6798 000C1698  90 06 00 14 */	stw r0, 0x14(r6)
/* 800C679C 000C169C  48 00 00 71 */	bl func_800C680C
/* 800C67A0 000C16A0  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800C67A4 000C16A4  7C 08 03 A6 */	mtlr r0
/* 800C67A8 000C16A8  38 21 00 10 */	addi r1, r1, 0x10
/* 800C67AC 000C16AC  4E 80 00 20 */	blr 

.global CBGetBytesAvailableForRead
CBGetBytesAvailableForRead:
/* 800C67B0 000C16B0  80 63 00 10 */	lwz r3, 0x10(r3)
/* 800C67B4 000C16B4  4E 80 00 20 */	blr 
