.include "macros.inc"

.section .sbss, "wa"
.balign 0x8
CPUFifoReady:
	.skip 0x1
GPFifoReady:
	.skip 0x3 # Real size=0x1
# Actually local, but GXOverflowHandler is inlined
.global __GXOverflowCount
__GXOverflowCount:
	.skip 0x4
.global __GXCurrentBP
__GXCurrentBP:
	.skip 0x4
BreakPointCB:
	.skip 0x4
GXOverflowSuspendInProgress:
	.skip 0x4
__GXCurrentThread:
	.skip 0x4
CPGPLinked:
	.skip 0x1

.section .data, "wa"
.balign 0x8
.global lbl_8039B1A0
lbl_8039B1A0:
    .string "CPUFifo: %08X - %08X\n"
    .balign 4
.global lbl_8039B1B8
lbl_8039B1B8:
    .string "GP Fifo: %08X - %08X\n"
    .balign 4

.section .bss, "wa"
.balign 0x8
.global CPUFifo
CPUFifo:
	.skip 0x24
.global GPFifo
GPFifo:
	.skip 0x24

.section .text, "ax"
.global GXCPInterruptHandler
GXCPInterruptHandler:
/* 800DC048 000D6F48  94 21 FD 20 */	stwu r1, -0x2e0(r1)
/* 800DC04C 000D6F4C  7C 08 02 A6 */	mflr r0
/* 800DC050 000D6F50  90 01 02 E4 */	stw r0, 0x2e4(r1)
/* 800DC054 000D6F54  93 E1 02 DC */	stw r31, 0x2dc(r1)
/* 800DC058 000D6F58  83 E2 96 48 */	lwz r31, __GXData-_SDA2_BASE_(r2)
/* 800DC05C 000D6F5C  93 C1 02 D8 */	stw r30, 0x2d8(r1)
/* 800DC060 000D6F60  7C 9E 23 78 */	mr r30, r4
/* 800DC064 000D6F64  80 6D 9A E4 */	lwz r3, __cpReg-_SDA_BASE_(r13)
/* 800DC068 000D6F68  A0 03 00 00 */	lhz r0, 0(r3)
/* 800DC06C 000D6F6C  90 1F 00 0C */	stw r0, 0xc(r31)
/* 800DC070 000D6F70  80 1F 00 08 */	lwz r0, 8(r31)
/* 800DC074 000D6F74  54 00 EF FF */	rlwinm. r0, r0, 0x1d, 0x1f, 0x1f
/* 800DC078 000D6F78  41 82 00 50 */	beq lbl_800DC0C8
/* 800DC07C 000D6F7C  80 1F 00 0C */	lwz r0, 0xc(r31)
/* 800DC080 000D6F80  54 00 FF FF */	rlwinm. r0, r0, 0x1f, 0x1f, 0x1f
/* 800DC084 000D6F84  41 82 00 44 */	beq lbl_800DC0C8
/* 800DC088 000D6F88  80 6D 9B 1C */	lwz r3, __GXCurrentThread-_SDA_BASE_(r13)
/* 800DC08C 000D6F8C  48 01 8D A9 */	bl OSResumeThread
/* 800DC090 000D6F90  38 00 00 00 */	li r0, 0
/* 800DC094 000D6F94  80 62 96 48 */	lwz r3, __GXData-_SDA2_BASE_(r2)
/* 800DC098 000D6F98  90 0D 9B 18 */	stw r0, GXOverflowSuspendInProgress-_SDA_BASE_(r13)
/* 800DC09C 000D6F9C  80 03 00 10 */	lwz r0, 0x10(r3)
/* 800DC0A0 000D6FA0  60 00 00 03 */	ori r0, r0, 3
/* 800DC0A4 000D6FA4  90 03 00 10 */	stw r0, 0x10(r3)
/* 800DC0A8 000D6FA8  80 6D 9A E4 */	lwz r3, __cpReg-_SDA_BASE_(r13)
/* 800DC0AC 000D6FAC  B0 03 00 04 */	sth r0, 4(r3)
/* 800DC0B0 000D6FB0  80 1F 00 08 */	lwz r0, 8(r31)
/* 800DC0B4 000D6FB4  60 00 00 04 */	ori r0, r0, 4
/* 800DC0B8 000D6FB8  54 00 07 76 */	rlwinm r0, r0, 0, 0x1d, 0x1b
/* 800DC0BC 000D6FBC  90 1F 00 08 */	stw r0, 8(r31)
/* 800DC0C0 000D6FC0  80 6D 9A E4 */	lwz r3, __cpReg-_SDA_BASE_(r13)
/* 800DC0C4 000D6FC4  B0 03 00 02 */	sth r0, 2(r3)
lbl_800DC0C8:
/* 800DC0C8 000D6FC8  80 1F 00 08 */	lwz r0, 8(r31)
/* 800DC0CC 000D6FCC  54 00 F7 FF */	rlwinm. r0, r0, 0x1e, 0x1f, 0x1f
/* 800DC0D0 000D6FD0  41 82 00 60 */	beq lbl_800DC130
/* 800DC0D4 000D6FD4  80 1F 00 0C */	lwz r0, 0xc(r31)
/* 800DC0D8 000D6FD8  54 00 07 FF */	clrlwi. r0, r0, 0x1f
/* 800DC0DC 000D6FDC  41 82 00 54 */	beq lbl_800DC130
/* 800DC0E0 000D6FE0  80 6D 9B 0C */	lwz r3, __GXOverflowCount-_SDA_BASE_(r13)
/* 800DC0E4 000D6FE4  38 00 00 01 */	li r0, 1
/* 800DC0E8 000D6FE8  80 A2 96 48 */	lwz r5, __GXData-_SDA2_BASE_(r2)
/* 800DC0EC 000D6FEC  38 63 00 01 */	addi r3, r3, 1
/* 800DC0F0 000D6FF0  90 6D 9B 0C */	stw r3, __GXOverflowCount-_SDA_BASE_(r13)
/* 800DC0F4 000D6FF4  80 7F 00 08 */	lwz r3, 8(r31)
/* 800DC0F8 000D6FF8  54 64 07 B8 */	rlwinm r4, r3, 0, 0x1e, 0x1c
/* 800DC0FC 000D6FFC  60 84 00 08 */	ori r4, r4, 8
/* 800DC100 000D7000  90 9F 00 08 */	stw r4, 8(r31)
/* 800DC104 000D7004  80 6D 9A E4 */	lwz r3, __cpReg-_SDA_BASE_(r13)
/* 800DC108 000D7008  B0 83 00 02 */	sth r4, 2(r3)
/* 800DC10C 000D700C  80 65 00 10 */	lwz r3, 0x10(r5)
/* 800DC110 000D7010  60 63 00 01 */	ori r3, r3, 1
/* 800DC114 000D7014  54 64 07 FA */	rlwinm r4, r3, 0, 0x1f, 0x1d
/* 800DC118 000D7018  90 85 00 10 */	stw r4, 0x10(r5)
/* 800DC11C 000D701C  80 6D 9A E4 */	lwz r3, __cpReg-_SDA_BASE_(r13)
/* 800DC120 000D7020  B0 83 00 04 */	sth r4, 4(r3)
/* 800DC124 000D7024  90 0D 9B 18 */	stw r0, GXOverflowSuspendInProgress-_SDA_BASE_(r13)
/* 800DC128 000D7028  80 6D 9B 1C */	lwz r3, __GXCurrentThread-_SDA_BASE_(r13)
/* 800DC12C 000D702C  48 01 8F A1 */	bl func_800F50CC
lbl_800DC130:
/* 800DC130 000D7030  80 7F 00 08 */	lwz r3, 8(r31)
/* 800DC134 000D7034  54 60 DF FF */	rlwinm. r0, r3, 0x1b, 0x1f, 0x1f
/* 800DC138 000D7038  41 82 00 58 */	beq lbl_800DC190
/* 800DC13C 000D703C  80 1F 00 0C */	lwz r0, 0xc(r31)
/* 800DC140 000D7040  54 00 E7 FF */	rlwinm. r0, r0, 0x1c, 0x1f, 0x1f
/* 800DC144 000D7044  41 82 00 4C */	beq lbl_800DC190
/* 800DC148 000D7048  54 60 06 F2 */	rlwinm r0, r3, 0, 0x1b, 0x19
/* 800DC14C 000D704C  90 1F 00 08 */	stw r0, 8(r31)
/* 800DC150 000D7050  80 6D 9A E4 */	lwz r3, __cpReg-_SDA_BASE_(r13)
/* 800DC154 000D7054  B0 03 00 02 */	sth r0, 2(r3)
/* 800DC158 000D7058  80 0D 9B 14 */	lwz r0, BreakPointCB-_SDA_BASE_(r13)
/* 800DC15C 000D705C  2C 00 00 00 */	cmpwi r0, 0
/* 800DC160 000D7060  41 82 00 30 */	beq lbl_800DC190
/* 800DC164 000D7064  38 61 00 08 */	addi r3, r1, 8
/* 800DC168 000D7068  48 01 2A 35 */	bl func_800EEB9C
/* 800DC16C 000D706C  38 61 00 08 */	addi r3, r1, 8
/* 800DC170 000D7070  48 01 28 05 */	bl func_800EE974
/* 800DC174 000D7074  81 8D 9B 14 */	lwz r12, BreakPointCB-_SDA_BASE_(r13)
/* 800DC178 000D7078  7D 89 03 A6 */	mtctr r12
/* 800DC17C 000D707C  4E 80 04 21 */	bctrl 
/* 800DC180 000D7080  38 61 00 08 */	addi r3, r1, 8
/* 800DC184 000D7084  48 01 2A 19 */	bl func_800EEB9C
/* 800DC188 000D7088  7F C3 F3 78 */	mr r3, r30
/* 800DC18C 000D708C  48 01 27 E9 */	bl func_800EE974
lbl_800DC190:
/* 800DC190 000D7090  80 01 02 E4 */	lwz r0, 0x2e4(r1)
/* 800DC194 000D7094  83 E1 02 DC */	lwz r31, 0x2dc(r1)
/* 800DC198 000D7098  83 C1 02 D8 */	lwz r30, 0x2d8(r1)
/* 800DC19C 000D709C  7C 08 03 A6 */	mtlr r0
/* 800DC1A0 000D70A0  38 21 02 E0 */	addi r1, r1, 0x2e0
/* 800DC1A4 000D70A4  4E 80 00 20 */	blr 

.global GXInitFifoBase
GXInitFifoBase:
/* 800DC1A8 000D70A8  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800DC1AC 000D70AC  7C 08 02 A6 */	mflr r0
/* 800DC1B0 000D70B0  7C E4 2A 14 */	add r7, r4, r5
/* 800DC1B4 000D70B4  38 C5 C0 00 */	addi r6, r5, -16384
/* 800DC1B8 000D70B8  90 01 00 24 */	stw r0, 0x24(r1)
/* 800DC1BC 000D70BC  38 E7 FF FC */	addi r7, r7, -4
/* 800DC1C0 000D70C0  54 A0 F8 74 */	rlwinm r0, r5, 0x1f, 1, 0x1a
/* 800DC1C4 000D70C4  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 800DC1C8 000D70C8  3B E0 00 00 */	li r31, 0
/* 800DC1CC 000D70CC  93 C1 00 18 */	stw r30, 0x18(r1)
/* 800DC1D0 000D70D0  7C 9E 23 78 */	mr r30, r4
/* 800DC1D4 000D70D4  93 A1 00 14 */	stw r29, 0x14(r1)
/* 800DC1D8 000D70D8  7C 7D 1B 78 */	mr r29, r3
/* 800DC1DC 000D70DC  90 83 00 00 */	stw r4, 0(r3)
/* 800DC1E0 000D70E0  90 E3 00 04 */	stw r7, 4(r3)
/* 800DC1E4 000D70E4  90 A3 00 08 */	stw r5, 8(r3)
/* 800DC1E8 000D70E8  93 E3 00 1C */	stw r31, 0x1c(r3)
/* 800DC1EC 000D70EC  90 C3 00 0C */	stw r6, 0xc(r3)
/* 800DC1F0 000D70F0  90 03 00 10 */	stw r0, 0x10(r3)
/* 800DC1F4 000D70F4  48 01 56 CD */	bl OSDisableInterrupts
/* 800DC1F8 000D70F8  2C 1F 00 00 */	cmpwi r31, 0
/* 800DC1FC 000D70FC  93 DD 00 14 */	stw r30, 0x14(r29)
/* 800DC200 000D7100  93 DD 00 18 */	stw r30, 0x18(r29)
/* 800DC204 000D7104  93 FD 00 1C */	stw r31, 0x1c(r29)
/* 800DC208 000D7108  40 80 00 0C */	bge lbl_800DC214
/* 800DC20C 000D710C  80 1D 00 08 */	lwz r0, 8(r29)
/* 800DC210 000D7110  90 1D 00 1C */	stw r0, 0x1c(r29)
lbl_800DC214:
/* 800DC214 000D7114  48 01 56 D5 */	bl OSRestoreInterrupts
/* 800DC218 000D7118  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800DC21C 000D711C  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 800DC220 000D7120  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 800DC224 000D7124  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 800DC228 000D7128  7C 08 03 A6 */	mtlr r0
/* 800DC22C 000D712C  38 21 00 20 */	addi r1, r1, 0x20
/* 800DC230 000D7130  4E 80 00 20 */	blr 

.global CPGPLinkCheck
CPGPLinkCheck:
/* 800DC234 000D7134  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800DC238 000D7138  7C 08 02 A6 */	mflr r0
/* 800DC23C 000D713C  38 E0 00 00 */	li r7, 0
/* 800DC240 000D7140  90 01 00 14 */	stw r0, 0x14(r1)
/* 800DC244 000D7144  88 0D 9B 08 */	lbz r0, CPUFifoReady-_SDA_BASE_(r13)
/* 800DC248 000D7148  2C 00 00 00 */	cmpwi r0, 0
/* 800DC24C 000D714C  41 82 00 10 */	beq lbl_800DC25C
/* 800DC250 000D7150  88 0D 9B 09 */	lbz r0, GPFifoReady-_SDA_BASE_(r13)
/* 800DC254 000D7154  2C 00 00 00 */	cmpwi r0, 0
/* 800DC258 000D7158  40 82 00 0C */	bne lbl_800DC264
lbl_800DC25C:
/* 800DC25C 000D715C  38 60 00 00 */	li r3, 0
/* 800DC260 000D7160  48 00 00 BC */	b lbl_800DC31C
lbl_800DC264:
/* 800DC264 000D7164  3C 80 80 41 */	lis r4, CPUFifo@ha
/* 800DC268 000D7168  3C 60 80 41 */	lis r3, GPFifo@ha
/* 800DC26C 000D716C  80 C4 34 D0 */	lwz r6, CPUFifo@l(r4)
/* 800DC270 000D7170  80 83 34 F4 */	lwz r4, GPFifo@l(r3)
/* 800DC274 000D7174  7C 04 30 40 */	cmplw r4, r6
/* 800DC278 000D7178  40 82 00 08 */	bne lbl_800DC280
/* 800DC27C 000D717C  38 E0 00 01 */	li r7, 1
lbl_800DC280:
/* 800DC280 000D7180  3C A0 80 41 */	lis r5, CPUFifo@ha
/* 800DC284 000D7184  3C 60 80 41 */	lis r3, GPFifo@ha
/* 800DC288 000D7188  38 A5 34 D0 */	addi r5, r5, CPUFifo@l
/* 800DC28C 000D718C  38 63 34 F4 */	addi r3, r3, GPFifo@l
/* 800DC290 000D7190  80 05 00 04 */	lwz r0, 4(r5)
/* 800DC294 000D7194  80 A3 00 04 */	lwz r5, 4(r3)
/* 800DC298 000D7198  7C 05 00 40 */	cmplw r5, r0
/* 800DC29C 000D719C  40 82 00 08 */	bne lbl_800DC2A4
/* 800DC2A0 000D71A0  38 E7 00 01 */	addi r7, r7, 1
lbl_800DC2A4:
/* 800DC2A4 000D71A4  28 07 00 02 */	cmplwi r7, 2
/* 800DC2A8 000D71A8  40 82 00 0C */	bne lbl_800DC2B4
/* 800DC2AC 000D71AC  38 60 00 01 */	li r3, 1
/* 800DC2B0 000D71B0  48 00 00 6C */	b lbl_800DC31C
lbl_800DC2B4:
/* 800DC2B4 000D71B4  7C 66 28 51 */	subf. r3, r6, r5
/* 800DC2B8 000D71B8  7C C4 00 50 */	subf r6, r4, r0
/* 800DC2BC 000D71BC  38 00 00 00 */	li r0, 0
/* 800DC2C0 000D71C0  40 81 00 0C */	ble lbl_800DC2CC
/* 800DC2C4 000D71C4  2C 06 00 00 */	cmpwi r6, 0
/* 800DC2C8 000D71C8  41 81 00 14 */	bgt lbl_800DC2DC
lbl_800DC2CC:
/* 800DC2CC 000D71CC  2C 03 00 00 */	cmpwi r3, 0
/* 800DC2D0 000D71D0  40 80 00 10 */	bge lbl_800DC2E0
/* 800DC2D4 000D71D4  2C 06 00 00 */	cmpwi r6, 0
/* 800DC2D8 000D71D8  40 80 00 08 */	bge lbl_800DC2E0
lbl_800DC2DC:
/* 800DC2DC 000D71DC  38 00 00 01 */	li r0, 1
lbl_800DC2E0:
/* 800DC2E0 000D71E0  2C 00 00 00 */	cmpwi r0, 0
/* 800DC2E4 000D71E4  41 82 00 34 */	beq lbl_800DC318
/* 800DC2E8 000D71E8  3C 60 80 3A */	lis r3, lbl_8039B1A0@ha
/* 800DC2EC 000D71EC  38 63 B1 A0 */	addi r3, r3, lbl_8039B1A0@l
/* 800DC2F0 000D71F0  4C C6 31 82 */	crclr 6
/* 800DC2F4 000D71F4  48 0A 7C 25 */	bl OSReport
/* 800DC2F8 000D71F8  3C 80 80 41 */	lis r4, CPUFifo@ha
/* 800DC2FC 000D71FC  3C 60 80 3A */	lis r3, lbl_8039B1B8@ha
/* 800DC300 000D7200  38 A4 34 D0 */	addi r5, r4, CPUFifo@l
/* 800DC304 000D7204  80 84 34 D0 */	lwz r4, 0x34d0(r4)
/* 800DC308 000D7208  80 A5 00 04 */	lwz r5, 4(r5)
/* 800DC30C 000D720C  38 63 B1 B8 */	addi r3, r3, lbl_8039B1B8@l
/* 800DC310 000D7210  4C C6 31 82 */	crclr 6
/* 800DC314 000D7214  48 0A 7C 05 */	bl OSReport
lbl_800DC318:
/* 800DC318 000D7218  38 60 00 00 */	li r3, 0
lbl_800DC31C:
/* 800DC31C 000D721C  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800DC320 000D7220  7C 08 03 A6 */	mtlr r0
/* 800DC324 000D7224  38 21 00 10 */	addi r1, r1, 0x10
/* 800DC328 000D7228  4E 80 00 20 */	blr 

.global GXSetCPUFifo
GXSetCPUFifo:
/* 800DC32C 000D722C  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800DC330 000D7230  7C 08 02 A6 */	mflr r0
/* 800DC334 000D7234  90 01 00 24 */	stw r0, 0x24(r1)
/* 800DC338 000D7238  39 61 00 20 */	addi r11, r1, 0x20
/* 800DC33C 000D723C  4B FD 5A 09 */	bl _savegpr_27
/* 800DC340 000D7240  7C 7B 1B 78 */	mr r27, r3
/* 800DC344 000D7244  48 01 55 7D */	bl OSDisableInterrupts
/* 800DC348 000D7248  2C 1B 00 00 */	cmpwi r27, 0
/* 800DC34C 000D724C  7C 7E 1B 78 */	mr r30, r3
/* 800DC350 000D7250  40 82 00 28 */	bne lbl_800DC378
/* 800DC354 000D7254  3C 80 80 41 */	lis r4, GPFifo@ha
/* 800DC358 000D7258  38 00 00 00 */	li r0, 0
/* 800DC35C 000D725C  38 84 34 F4 */	addi r4, r4, GPFifo@l
/* 800DC360 000D7260  98 0D 9B 08 */	stb r0, CPUFifoReady-_SDA_BASE_(r13)
/* 800DC364 000D7264  98 0D 9B 20 */	stb r0, CPGPLinked-_SDA_BASE_(r13)
/* 800DC368 000D7268  98 04 00 22 */	stb r0, 0x22(r4)
/* 800DC36C 000D726C  98 04 00 21 */	stb r0, 0x21(r4)
/* 800DC370 000D7270  48 01 55 79 */	bl OSRestoreInterrupts
/* 800DC374 000D7274  48 00 01 80 */	b lbl_800DC4F4
lbl_800DC378:
/* 800DC378 000D7278  3F 80 80 41 */	lis r28, GPFifo@ha
/* 800DC37C 000D727C  80 7B 00 00 */	lwz r3, 0(r27)
/* 800DC380 000D7280  80 1B 00 04 */	lwz r0, 4(r27)
/* 800DC384 000D7284  3B FC 34 F4 */	addi r31, r28, GPFifo@l
/* 800DC388 000D7288  3B A0 00 01 */	li r29, 1
/* 800DC38C 000D728C  90 7F 00 00 */	stw r3, 0(r31)
/* 800DC390 000D7290  90 1F 00 04 */	stw r0, 4(r31)
/* 800DC394 000D7294  80 7B 00 08 */	lwz r3, 8(r27)
/* 800DC398 000D7298  80 1B 00 0C */	lwz r0, 0xc(r27)
/* 800DC39C 000D729C  90 7F 00 08 */	stw r3, 8(r31)
/* 800DC3A0 000D72A0  90 1F 00 0C */	stw r0, 0xc(r31)
/* 800DC3A4 000D72A4  80 7B 00 10 */	lwz r3, 0x10(r27)
/* 800DC3A8 000D72A8  80 1B 00 14 */	lwz r0, 0x14(r27)
/* 800DC3AC 000D72AC  90 7F 00 10 */	stw r3, 0x10(r31)
/* 800DC3B0 000D72B0  90 1F 00 14 */	stw r0, 0x14(r31)
/* 800DC3B4 000D72B4  80 7B 00 18 */	lwz r3, 0x18(r27)
/* 800DC3B8 000D72B8  80 1B 00 1C */	lwz r0, 0x1c(r27)
/* 800DC3BC 000D72BC  90 7F 00 18 */	stw r3, 0x18(r31)
/* 800DC3C0 000D72C0  90 1F 00 1C */	stw r0, 0x1c(r31)
/* 800DC3C4 000D72C4  80 1B 00 20 */	lwz r0, 0x20(r27)
/* 800DC3C8 000D72C8  90 1F 00 20 */	stw r0, 0x20(r31)
/* 800DC3CC 000D72CC  9B AD 9B 08 */	stb r29, CPUFifoReady-_SDA_BASE_(r13)
/* 800DC3D0 000D72D0  9B BF 00 21 */	stb r29, 0x21(r31)
/* 800DC3D4 000D72D4  4B FF FE 61 */	bl CPGPLinkCheck
/* 800DC3D8 000D72D8  54 60 06 3F */	clrlwi. r0, r3, 0x18
/* 800DC3DC 000D72DC  41 82 00 88 */	beq lbl_800DC464
/* 800DC3E0 000D72E0  80 9C 34 F4 */	lwz r4, 0x34f4(r28)
/* 800DC3E4 000D72E4  38 00 00 00 */	li r0, 0
/* 800DC3E8 000D72E8  9B AD 9B 20 */	stb r29, CPGPLinked-_SDA_BASE_(r13)
/* 800DC3EC 000D72EC  80 6D 9A E0 */	lwz r3, __piReg-_SDA_BASE_(r13)
/* 800DC3F0 000D72F0  54 84 00 BE */	clrlwi r4, r4, 2
/* 800DC3F4 000D72F4  9B BF 00 22 */	stb r29, 0x22(r31)
/* 800DC3F8 000D72F8  80 A2 96 48 */	lwz r5, __GXData-_SDA2_BASE_(r2)
/* 800DC3FC 000D72FC  90 83 00 0C */	stw r4, 0xc(r3)
/* 800DC400 000D7300  80 9F 00 04 */	lwz r4, 4(r31)
/* 800DC404 000D7304  80 6D 9A E0 */	lwz r3, __piReg-_SDA_BASE_(r13)
/* 800DC408 000D7308  54 84 00 BE */	clrlwi r4, r4, 2
/* 800DC40C 000D730C  90 83 00 10 */	stw r4, 0x10(r3)
/* 800DC410 000D7310  80 9F 00 18 */	lwz r4, 0x18(r31)
/* 800DC414 000D7314  80 6D 9A E0 */	lwz r3, __piReg-_SDA_BASE_(r13)
/* 800DC418 000D7318  50 80 00 F4 */	rlwimi r0, r4, 0, 3, 0x1a
/* 800DC41C 000D731C  90 03 00 14 */	stw r0, 0x14(r3)
/* 800DC420 000D7320  80 05 00 10 */	lwz r0, 0x10(r5)
/* 800DC424 000D7324  60 00 00 03 */	ori r0, r0, 3
/* 800DC428 000D7328  90 05 00 10 */	stw r0, 0x10(r5)
/* 800DC42C 000D732C  80 6D 9A E4 */	lwz r3, __cpReg-_SDA_BASE_(r13)
/* 800DC430 000D7330  B0 03 00 04 */	sth r0, 4(r3)
/* 800DC434 000D7334  80 05 00 08 */	lwz r0, 8(r5)
/* 800DC438 000D7338  60 00 00 04 */	ori r0, r0, 4
/* 800DC43C 000D733C  54 00 07 76 */	rlwinm r0, r0, 0, 0x1d, 0x1b
/* 800DC440 000D7340  90 05 00 08 */	stw r0, 8(r5)
/* 800DC444 000D7344  80 6D 9A E4 */	lwz r3, __cpReg-_SDA_BASE_(r13)
/* 800DC448 000D7348  B0 03 00 02 */	sth r0, 2(r3)
/* 800DC44C 000D734C  80 05 00 08 */	lwz r0, 8(r5)
/* 800DC450 000D7350  60 00 00 10 */	ori r0, r0, 0x10
/* 800DC454 000D7354  90 05 00 08 */	stw r0, 8(r5)
/* 800DC458 000D7358  80 6D 9A E4 */	lwz r3, __cpReg-_SDA_BASE_(r13)
/* 800DC45C 000D735C  B0 03 00 02 */	sth r0, 2(r3)
/* 800DC460 000D7360  48 00 00 88 */	b lbl_800DC4E8
lbl_800DC464:
/* 800DC464 000D7364  88 0D 9B 20 */	lbz r0, CPGPLinked-_SDA_BASE_(r13)
/* 800DC468 000D7368  38 80 00 00 */	li r4, 0
/* 800DC46C 000D736C  98 9F 00 22 */	stb r4, 0x22(r31)
/* 800DC470 000D7370  2C 00 00 00 */	cmpwi r0, 0
/* 800DC474 000D7374  41 82 00 20 */	beq lbl_800DC494
/* 800DC478 000D7378  80 62 96 48 */	lwz r3, __GXData-_SDA2_BASE_(r2)
/* 800DC47C 000D737C  80 03 00 08 */	lwz r0, 8(r3)
/* 800DC480 000D7380  54 00 07 34 */	rlwinm r0, r0, 0, 0x1c, 0x1a
/* 800DC484 000D7384  90 03 00 08 */	stw r0, 8(r3)
/* 800DC488 000D7388  80 6D 9A E4 */	lwz r3, __cpReg-_SDA_BASE_(r13)
/* 800DC48C 000D738C  B0 03 00 02 */	sth r0, 2(r3)
/* 800DC490 000D7390  98 8D 9B 20 */	stb r4, CPGPLinked-_SDA_BASE_(r13)
lbl_800DC494:
/* 800DC494 000D7394  80 E2 96 48 */	lwz r7, __GXData-_SDA2_BASE_(r2)
/* 800DC498 000D7398  3C 60 80 41 */	lis r3, GPFifo@ha
/* 800DC49C 000D739C  38 A3 34 F4 */	addi r5, r3, GPFifo@l
/* 800DC4A0 000D73A0  38 00 00 00 */	li r0, 0
/* 800DC4A4 000D73A4  80 87 00 08 */	lwz r4, 8(r7)
/* 800DC4A8 000D73A8  54 86 07 B6 */	rlwinm r6, r4, 0, 0x1e, 0x1b
/* 800DC4AC 000D73AC  90 C7 00 08 */	stw r6, 8(r7)
/* 800DC4B0 000D73B0  80 8D 9A E4 */	lwz r4, __cpReg-_SDA_BASE_(r13)
/* 800DC4B4 000D73B4  B0 C4 00 02 */	sth r6, 2(r4)
/* 800DC4B8 000D73B8  80 83 34 F4 */	lwz r4, 0x34f4(r3)
/* 800DC4BC 000D73BC  80 6D 9A E0 */	lwz r3, __piReg-_SDA_BASE_(r13)
/* 800DC4C0 000D73C0  54 84 00 BE */	clrlwi r4, r4, 2
/* 800DC4C4 000D73C4  90 83 00 0C */	stw r4, 0xc(r3)
/* 800DC4C8 000D73C8  80 85 00 04 */	lwz r4, 4(r5)
/* 800DC4CC 000D73CC  80 6D 9A E0 */	lwz r3, __piReg-_SDA_BASE_(r13)
/* 800DC4D0 000D73D0  54 84 00 BE */	clrlwi r4, r4, 2
/* 800DC4D4 000D73D4  90 83 00 10 */	stw r4, 0x10(r3)
/* 800DC4D8 000D73D8  80 85 00 18 */	lwz r4, 0x18(r5)
/* 800DC4DC 000D73DC  80 6D 9A E0 */	lwz r3, __piReg-_SDA_BASE_(r13)
/* 800DC4E0 000D73E0  50 80 00 F4 */	rlwimi r0, r4, 0, 3, 0x1a
/* 800DC4E4 000D73E4  90 03 00 14 */	stw r0, 0x14(r3)
lbl_800DC4E8:
/* 800DC4E8 000D73E8  48 02 E5 69 */	bl PPCSync
/* 800DC4EC 000D73EC  7F C3 F3 78 */	mr r3, r30
/* 800DC4F0 000D73F0  48 01 53 F9 */	bl OSRestoreInterrupts
lbl_800DC4F4:
/* 800DC4F4 000D73F4  39 61 00 20 */	addi r11, r1, 0x20
/* 800DC4F8 000D73F8  4B FD 58 99 */	bl _restgpr_27
/* 800DC4FC 000D73FC  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800DC500 000D7400  7C 08 03 A6 */	mtlr r0
/* 800DC504 000D7404  38 21 00 20 */	addi r1, r1, 0x20
/* 800DC508 000D7408  4E 80 00 20 */	blr 

.global GXSetGPFifo
GXSetGPFifo:
/* 800DC50C 000D740C  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800DC510 000D7410  7C 08 02 A6 */	mflr r0
/* 800DC514 000D7414  90 01 00 24 */	stw r0, 0x24(r1)
/* 800DC518 000D7418  39 61 00 20 */	addi r11, r1, 0x20
/* 800DC51C 000D741C  4B FD 58 29 */	bl _savegpr_27
/* 800DC520 000D7420  7C 7B 1B 78 */	mr r27, r3
/* 800DC524 000D7424  48 01 53 9D */	bl OSDisableInterrupts
/* 800DC528 000D7428  83 A2 96 48 */	lwz r29, __GXData-_SDA2_BASE_(r2)
/* 800DC52C 000D742C  2C 1B 00 00 */	cmpwi r27, 0
/* 800DC530 000D7430  7C 7C 1B 78 */	mr r28, r3
/* 800DC534 000D7434  80 1D 00 08 */	lwz r0, 8(r29)
/* 800DC538 000D7438  54 00 00 3C */	rlwinm r0, r0, 0, 0, 0x1e
/* 800DC53C 000D743C  90 1D 00 08 */	stw r0, 8(r29)
/* 800DC540 000D7440  80 8D 9A E4 */	lwz r4, __cpReg-_SDA_BASE_(r13)
/* 800DC544 000D7444  B0 04 00 02 */	sth r0, 2(r4)
/* 800DC548 000D7448  80 1D 00 08 */	lwz r0, 8(r29)
/* 800DC54C 000D744C  54 00 07 B6 */	rlwinm r0, r0, 0, 0x1e, 0x1b
/* 800DC550 000D7450  90 1D 00 08 */	stw r0, 8(r29)
/* 800DC554 000D7454  80 8D 9A E4 */	lwz r4, __cpReg-_SDA_BASE_(r13)
/* 800DC558 000D7458  B0 04 00 02 */	sth r0, 2(r4)
/* 800DC55C 000D745C  40 82 00 3C */	bne lbl_800DC598
/* 800DC560 000D7460  38 C0 00 00 */	li r6, 0
/* 800DC564 000D7464  3C 80 80 41 */	lis r4, CPUFifo@ha
/* 800DC568 000D7468  98 CD 9B 09 */	stb r6, GPFifoReady-_SDA_BASE_(r13)
/* 800DC56C 000D746C  38 84 34 D0 */	addi r4, r4, CPUFifo@l
/* 800DC570 000D7470  98 CD 9B 20 */	stb r6, CPGPLinked-_SDA_BASE_(r13)
/* 800DC574 000D7474  80 1D 00 08 */	lwz r0, 8(r29)
/* 800DC578 000D7478  54 00 07 34 */	rlwinm r0, r0, 0, 0x1c, 0x1a
/* 800DC57C 000D747C  90 1D 00 08 */	stw r0, 8(r29)
/* 800DC580 000D7480  80 AD 9A E4 */	lwz r5, __cpReg-_SDA_BASE_(r13)
/* 800DC584 000D7484  B0 05 00 02 */	sth r0, 2(r5)
/* 800DC588 000D7488  98 C4 00 21 */	stb r6, 0x21(r4)
/* 800DC58C 000D748C  98 C4 00 22 */	stb r6, 0x22(r4)
/* 800DC590 000D7490  48 01 53 59 */	bl OSRestoreInterrupts
/* 800DC594 000D7494  48 00 01 F0 */	b lbl_800DC784
lbl_800DC598:
/* 800DC598 000D7498  3C 60 80 41 */	lis r3, CPUFifo@ha
/* 800DC59C 000D749C  80 DB 00 00 */	lwz r6, 0(r27)
/* 800DC5A0 000D74A0  80 1B 00 04 */	lwz r0, 4(r27)
/* 800DC5A4 000D74A4  3B C3 34 D0 */	addi r30, r3, CPUFifo@l
/* 800DC5A8 000D74A8  3B E0 00 01 */	li r31, 1
/* 800DC5AC 000D74AC  80 8D 9A E4 */	lwz r4, __cpReg-_SDA_BASE_(r13)
/* 800DC5B0 000D74B0  90 DE 00 00 */	stw r6, 0(r30)
/* 800DC5B4 000D74B4  90 1E 00 04 */	stw r0, 4(r30)
/* 800DC5B8 000D74B8  80 BB 00 08 */	lwz r5, 8(r27)
/* 800DC5BC 000D74BC  80 1B 00 0C */	lwz r0, 0xc(r27)
/* 800DC5C0 000D74C0  90 BE 00 08 */	stw r5, 8(r30)
/* 800DC5C4 000D74C4  90 1E 00 0C */	stw r0, 0xc(r30)
/* 800DC5C8 000D74C8  80 BB 00 10 */	lwz r5, 0x10(r27)
/* 800DC5CC 000D74CC  80 1B 00 14 */	lwz r0, 0x14(r27)
/* 800DC5D0 000D74D0  90 BE 00 10 */	stw r5, 0x10(r30)
/* 800DC5D4 000D74D4  90 1E 00 14 */	stw r0, 0x14(r30)
/* 800DC5D8 000D74D8  80 BB 00 18 */	lwz r5, 0x18(r27)
/* 800DC5DC 000D74DC  80 1B 00 1C */	lwz r0, 0x1c(r27)
/* 800DC5E0 000D74E0  90 BE 00 18 */	stw r5, 0x18(r30)
/* 800DC5E4 000D74E4  90 1E 00 1C */	stw r0, 0x1c(r30)
/* 800DC5E8 000D74E8  80 1B 00 20 */	lwz r0, 0x20(r27)
/* 800DC5EC 000D74EC  90 1E 00 20 */	stw r0, 0x20(r30)
/* 800DC5F0 000D74F0  9B ED 9B 09 */	stb r31, GPFifoReady-_SDA_BASE_(r13)
/* 800DC5F4 000D74F4  9B FE 00 22 */	stb r31, 0x22(r30)
/* 800DC5F8 000D74F8  B0 C4 00 20 */	sth r6, 0x20(r4)
/* 800DC5FC 000D74FC  80 1E 00 04 */	lwz r0, 4(r30)
/* 800DC600 000D7500  80 8D 9A E4 */	lwz r4, __cpReg-_SDA_BASE_(r13)
/* 800DC604 000D7504  B0 04 00 24 */	sth r0, 0x24(r4)
/* 800DC608 000D7508  80 1E 00 1C */	lwz r0, 0x1c(r30)
/* 800DC60C 000D750C  80 8D 9A E4 */	lwz r4, __cpReg-_SDA_BASE_(r13)
/* 800DC610 000D7510  B0 04 00 30 */	sth r0, 0x30(r4)
/* 800DC614 000D7514  80 1E 00 18 */	lwz r0, 0x18(r30)
/* 800DC618 000D7518  80 8D 9A E4 */	lwz r4, __cpReg-_SDA_BASE_(r13)
/* 800DC61C 000D751C  B0 04 00 34 */	sth r0, 0x34(r4)
/* 800DC620 000D7520  80 1E 00 14 */	lwz r0, 0x14(r30)
/* 800DC624 000D7524  80 8D 9A E4 */	lwz r4, __cpReg-_SDA_BASE_(r13)
/* 800DC628 000D7528  B0 04 00 38 */	sth r0, 0x38(r4)
/* 800DC62C 000D752C  80 1E 00 0C */	lwz r0, 0xc(r30)
/* 800DC630 000D7530  80 8D 9A E4 */	lwz r4, __cpReg-_SDA_BASE_(r13)
/* 800DC634 000D7534  B0 04 00 28 */	sth r0, 0x28(r4)
/* 800DC638 000D7538  80 1E 00 10 */	lwz r0, 0x10(r30)
/* 800DC63C 000D753C  80 8D 9A E4 */	lwz r4, __cpReg-_SDA_BASE_(r13)
/* 800DC640 000D7540  B0 04 00 2C */	sth r0, 0x2c(r4)
/* 800DC644 000D7544  80 03 34 D0 */	lwz r0, 0x34d0(r3)
/* 800DC648 000D7548  80 6D 9A E4 */	lwz r3, __cpReg-_SDA_BASE_(r13)
/* 800DC64C 000D754C  54 00 84 BE */	rlwinm r0, r0, 0x10, 0x12, 0x1f
/* 800DC650 000D7550  B0 03 00 22 */	sth r0, 0x22(r3)
/* 800DC654 000D7554  80 1E 00 04 */	lwz r0, 4(r30)
/* 800DC658 000D7558  80 6D 9A E4 */	lwz r3, __cpReg-_SDA_BASE_(r13)
/* 800DC65C 000D755C  54 00 84 BE */	rlwinm r0, r0, 0x10, 0x12, 0x1f
/* 800DC660 000D7560  B0 03 00 26 */	sth r0, 0x26(r3)
/* 800DC664 000D7564  80 1E 00 1C */	lwz r0, 0x1c(r30)
/* 800DC668 000D7568  80 6D 9A E4 */	lwz r3, __cpReg-_SDA_BASE_(r13)
/* 800DC66C 000D756C  7C 00 86 70 */	srawi r0, r0, 0x10
/* 800DC670 000D7570  B0 03 00 32 */	sth r0, 0x32(r3)
/* 800DC674 000D7574  80 1E 00 18 */	lwz r0, 0x18(r30)
/* 800DC678 000D7578  80 6D 9A E4 */	lwz r3, __cpReg-_SDA_BASE_(r13)
/* 800DC67C 000D757C  54 00 84 BE */	rlwinm r0, r0, 0x10, 0x12, 0x1f
/* 800DC680 000D7580  B0 03 00 36 */	sth r0, 0x36(r3)
/* 800DC684 000D7584  80 1E 00 14 */	lwz r0, 0x14(r30)
/* 800DC688 000D7588  80 6D 9A E4 */	lwz r3, __cpReg-_SDA_BASE_(r13)
/* 800DC68C 000D758C  54 00 84 BE */	rlwinm r0, r0, 0x10, 0x12, 0x1f
/* 800DC690 000D7590  B0 03 00 3A */	sth r0, 0x3a(r3)
/* 800DC694 000D7594  80 1E 00 0C */	lwz r0, 0xc(r30)
/* 800DC698 000D7598  80 6D 9A E4 */	lwz r3, __cpReg-_SDA_BASE_(r13)
/* 800DC69C 000D759C  54 00 84 3E */	srwi r0, r0, 0x10
/* 800DC6A0 000D75A0  B0 03 00 2A */	sth r0, 0x2a(r3)
/* 800DC6A4 000D75A4  80 1E 00 10 */	lwz r0, 0x10(r30)
/* 800DC6A8 000D75A8  80 6D 9A E4 */	lwz r3, __cpReg-_SDA_BASE_(r13)
/* 800DC6AC 000D75AC  54 00 84 3E */	srwi r0, r0, 0x10
/* 800DC6B0 000D75B0  B0 03 00 2E */	sth r0, 0x2e(r3)
/* 800DC6B4 000D75B4  48 02 E3 9D */	bl PPCSync
/* 800DC6B8 000D75B8  4B FF FB 7D */	bl CPGPLinkCheck
/* 800DC6BC 000D75BC  54 60 06 3F */	clrlwi. r0, r3, 0x18
/* 800DC6C0 000D75C0  41 82 00 3C */	beq lbl_800DC6FC
/* 800DC6C4 000D75C4  9B ED 9B 20 */	stb r31, CPGPLinked-_SDA_BASE_(r13)
/* 800DC6C8 000D75C8  9B FE 00 21 */	stb r31, 0x21(r30)
/* 800DC6CC 000D75CC  80 1D 00 08 */	lwz r0, 8(r29)
/* 800DC6D0 000D75D0  60 00 00 04 */	ori r0, r0, 4
/* 800DC6D4 000D75D4  54 00 07 76 */	rlwinm r0, r0, 0, 0x1d, 0x1b
/* 800DC6D8 000D75D8  90 1D 00 08 */	stw r0, 8(r29)
/* 800DC6DC 000D75DC  80 6D 9A E4 */	lwz r3, __cpReg-_SDA_BASE_(r13)
/* 800DC6E0 000D75E0  B0 03 00 02 */	sth r0, 2(r3)
/* 800DC6E4 000D75E4  80 1D 00 08 */	lwz r0, 8(r29)
/* 800DC6E8 000D75E8  60 00 00 10 */	ori r0, r0, 0x10
/* 800DC6EC 000D75EC  90 1D 00 08 */	stw r0, 8(r29)
/* 800DC6F0 000D75F0  80 6D 9A E4 */	lwz r3, __cpReg-_SDA_BASE_(r13)
/* 800DC6F4 000D75F4  B0 03 00 02 */	sth r0, 2(r3)
/* 800DC6F8 000D75F8  48 00 00 38 */	b lbl_800DC730
lbl_800DC6FC:
/* 800DC6FC 000D75FC  38 00 00 00 */	li r0, 0
/* 800DC700 000D7600  98 0D 9B 20 */	stb r0, CPGPLinked-_SDA_BASE_(r13)
/* 800DC704 000D7604  98 1E 00 21 */	stb r0, 0x21(r30)
/* 800DC708 000D7608  80 1D 00 08 */	lwz r0, 8(r29)
/* 800DC70C 000D760C  54 00 07 B6 */	rlwinm r0, r0, 0, 0x1e, 0x1b
/* 800DC710 000D7610  90 1D 00 08 */	stw r0, 8(r29)
/* 800DC714 000D7614  80 6D 9A E4 */	lwz r3, __cpReg-_SDA_BASE_(r13)
/* 800DC718 000D7618  B0 03 00 02 */	sth r0, 2(r3)
/* 800DC71C 000D761C  80 1D 00 08 */	lwz r0, 8(r29)
/* 800DC720 000D7620  54 00 07 34 */	rlwinm r0, r0, 0, 0x1c, 0x1a
/* 800DC724 000D7624  90 1D 00 08 */	stw r0, 8(r29)
/* 800DC728 000D7628  80 6D 9A E4 */	lwz r3, __cpReg-_SDA_BASE_(r13)
/* 800DC72C 000D762C  B0 03 00 02 */	sth r0, 2(r3)
lbl_800DC730:
/* 800DC730 000D7630  80 1D 00 08 */	lwz r0, 8(r29)
/* 800DC734 000D7634  7F 83 E3 78 */	mr r3, r28
/* 800DC738 000D7638  80 8D 9A E4 */	lwz r4, __cpReg-_SDA_BASE_(r13)
/* 800DC73C 000D763C  54 00 07 FA */	rlwinm r0, r0, 0, 0x1f, 0x1d
/* 800DC740 000D7640  80 A2 96 48 */	lwz r5, __GXData-_SDA2_BASE_(r2)
/* 800DC744 000D7644  54 00 06 F2 */	rlwinm r0, r0, 0, 0x1b, 0x19
/* 800DC748 000D7648  B0 04 00 02 */	sth r0, 2(r4)
/* 800DC74C 000D764C  80 1D 00 08 */	lwz r0, 8(r29)
/* 800DC750 000D7650  80 8D 9A E4 */	lwz r4, __cpReg-_SDA_BASE_(r13)
/* 800DC754 000D7654  B0 04 00 02 */	sth r0, 2(r4)
/* 800DC758 000D7658  80 05 00 10 */	lwz r0, 0x10(r5)
/* 800DC75C 000D765C  60 00 00 03 */	ori r0, r0, 3
/* 800DC760 000D7660  90 05 00 10 */	stw r0, 0x10(r5)
/* 800DC764 000D7664  80 8D 9A E4 */	lwz r4, __cpReg-_SDA_BASE_(r13)
/* 800DC768 000D7668  B0 04 00 04 */	sth r0, 4(r4)
/* 800DC76C 000D766C  80 1D 00 08 */	lwz r0, 8(r29)
/* 800DC770 000D7670  60 00 00 01 */	ori r0, r0, 1
/* 800DC774 000D7674  90 1D 00 08 */	stw r0, 8(r29)
/* 800DC778 000D7678  80 8D 9A E4 */	lwz r4, __cpReg-_SDA_BASE_(r13)
/* 800DC77C 000D767C  B0 04 00 02 */	sth r0, 2(r4)
/* 800DC780 000D7680  48 01 51 69 */	bl OSRestoreInterrupts
lbl_800DC784:
/* 800DC784 000D7684  39 61 00 20 */	addi r11, r1, 0x20
/* 800DC788 000D7688  4B FD 56 09 */	bl _restgpr_27
/* 800DC78C 000D768C  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800DC790 000D7690  7C 08 03 A6 */	mtlr r0
/* 800DC794 000D7694  38 21 00 20 */	addi r1, r1, 0x20
/* 800DC798 000D7698  4E 80 00 20 */	blr 

.global __GXSaveFifo
__GXSaveFifo:
/* 800DC79C 000D769C  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800DC7A0 000D76A0  7C 08 02 A6 */	mflr r0
/* 800DC7A4 000D76A4  90 01 00 14 */	stw r0, 0x14(r1)
/* 800DC7A8 000D76A8  48 01 51 19 */	bl OSDisableInterrupts
/* 800DC7AC 000D76AC  88 CD 9B 08 */	lbz r6, CPUFifoReady-_SDA_BASE_(r13)
/* 800DC7B0 000D76B0  2C 06 00 00 */	cmpwi r6, 0
/* 800DC7B4 000D76B4  41 82 00 28 */	beq lbl_800DC7DC
/* 800DC7B8 000D76B8  80 AD 9A E0 */	lwz r5, __piReg-_SDA_BASE_(r13)
/* 800DC7BC 000D76BC  3C 80 80 41 */	lis r4, GPFifo@ha
/* 800DC7C0 000D76C0  38 84 34 F4 */	addi r4, r4, GPFifo@l
/* 800DC7C4 000D76C4  80 05 00 14 */	lwz r0, 0x14(r5)
/* 800DC7C8 000D76C8  54 05 00 F4 */	rlwinm r5, r0, 0, 3, 0x1a
/* 800DC7CC 000D76CC  54 00 1F FE */	rlwinm r0, r0, 3, 0x1f, 0x1f
/* 800DC7D0 000D76D0  3C A5 80 00 */	addis r5, r5, 0x8000
/* 800DC7D4 000D76D4  98 04 00 20 */	stb r0, 0x20(r4)
/* 800DC7D8 000D76D8  90 A4 00 18 */	stw r5, 0x18(r4)
lbl_800DC7DC:
/* 800DC7DC 000D76DC  88 0D 9B 09 */	lbz r0, GPFifoReady-_SDA_BASE_(r13)
/* 800DC7E0 000D76E0  2C 00 00 00 */	cmpwi r0, 0
/* 800DC7E4 000D76E4  41 82 00 34 */	beq lbl_800DC818
/* 800DC7E8 000D76E8  80 ED 9A E4 */	lwz r7, __cpReg-_SDA_BASE_(r13)
/* 800DC7EC 000D76EC  3C 80 80 41 */	lis r4, CPUFifo@ha
/* 800DC7F0 000D76F0  38 84 34 D0 */	addi r4, r4, CPUFifo@l
/* 800DC7F4 000D76F4  A0 07 00 3A */	lhz r0, 0x3a(r7)
/* 800DC7F8 000D76F8  A0 A7 00 38 */	lhz r5, 0x38(r7)
/* 800DC7FC 000D76FC  50 05 80 1E */	rlwimi r5, r0, 0x10, 0, 0xf
/* 800DC800 000D7700  3C 05 80 00 */	addis r0, r5, 0x8000
/* 800DC804 000D7704  90 04 00 14 */	stw r0, 0x14(r4)
/* 800DC808 000D7708  A0 07 00 32 */	lhz r0, 0x32(r7)
/* 800DC80C 000D770C  A0 A7 00 30 */	lhz r5, 0x30(r7)
/* 800DC810 000D7710  50 05 80 1E */	rlwimi r5, r0, 0x10, 0, 0xf
/* 800DC814 000D7714  90 A4 00 1C */	stw r5, 0x1c(r4)
lbl_800DC818:
/* 800DC818 000D7718  88 0D 9B 20 */	lbz r0, CPGPLinked-_SDA_BASE_(r13)
/* 800DC81C 000D771C  2C 00 00 00 */	cmpwi r0, 0
/* 800DC820 000D7720  41 82 00 38 */	beq lbl_800DC858
/* 800DC824 000D7724  3D 00 80 41 */	lis r8, CPUFifo@ha
/* 800DC828 000D7728  3C C0 80 41 */	lis r6, GPFifo@ha
/* 800DC82C 000D772C  39 08 34 D0 */	addi r8, r8, CPUFifo@l
/* 800DC830 000D7730  38 C6 34 F4 */	addi r6, r6, GPFifo@l
/* 800DC834 000D7734  80 E8 00 14 */	lwz r7, 0x14(r8)
/* 800DC838 000D7738  80 A8 00 1C */	lwz r5, 0x1c(r8)
/* 800DC83C 000D773C  80 86 00 18 */	lwz r4, 0x18(r6)
/* 800DC840 000D7740  88 06 00 20 */	lbz r0, 0x20(r6)
/* 800DC844 000D7744  90 E6 00 14 */	stw r7, 0x14(r6)
/* 800DC848 000D7748  90 A6 00 1C */	stw r5, 0x1c(r6)
/* 800DC84C 000D774C  90 88 00 18 */	stw r4, 0x18(r8)
/* 800DC850 000D7750  98 08 00 20 */	stb r0, 0x20(r8)
/* 800DC854 000D7754  48 00 00 34 */	b lbl_800DC888
lbl_800DC858:
/* 800DC858 000D7758  2C 06 00 00 */	cmpwi r6, 0
/* 800DC85C 000D775C  41 82 00 2C */	beq lbl_800DC888
/* 800DC860 000D7760  3C A0 80 41 */	lis r5, GPFifo@ha
/* 800DC864 000D7764  38 A5 34 F4 */	addi r5, r5, GPFifo@l
/* 800DC868 000D7768  80 85 00 14 */	lwz r4, 0x14(r5)
/* 800DC86C 000D776C  80 05 00 18 */	lwz r0, 0x18(r5)
/* 800DC870 000D7770  7C 84 00 51 */	subf. r4, r4, r0
/* 800DC874 000D7774  90 85 00 1C */	stw r4, 0x1c(r5)
/* 800DC878 000D7778  40 80 00 10 */	bge lbl_800DC888
/* 800DC87C 000D777C  80 05 00 08 */	lwz r0, 8(r5)
/* 800DC880 000D7780  7C 04 02 14 */	add r0, r4, r0
/* 800DC884 000D7784  90 05 00 1C */	stw r0, 0x1c(r5)
lbl_800DC888:
/* 800DC888 000D7788  48 01 50 61 */	bl OSRestoreInterrupts
/* 800DC88C 000D778C  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800DC890 000D7790  7C 08 03 A6 */	mtlr r0
/* 800DC894 000D7794  38 21 00 10 */	addi r1, r1, 0x10
/* 800DC898 000D7798  4E 80 00 20 */	blr 

.global __GXIs__GXOverflowCount
__GXIs__GXOverflowCount:
/* 800DC89C 000D779C  88 6D 9B 09 */	lbz r3, GPFifoReady-_SDA_BASE_(r13)
/* 800DC8A0 000D77A0  4E 80 00 20 */	blr 

.global GXGetGPStatus
GXGetGPStatus:
/* 800DC8A4 000D77A4  81 0D 9A E4 */	lwz r8, __cpReg-_SDA_BASE_(r13)
/* 800DC8A8 000D77A8  81 22 96 48 */	lwz r9, __GXData-_SDA2_BASE_(r2)
/* 800DC8AC 000D77AC  A0 08 00 00 */	lhz r0, 0(r8)
/* 800DC8B0 000D77B0  90 09 00 0C */	stw r0, 0xc(r9)
/* 800DC8B4 000D77B4  54 00 07 FE */	clrlwi r0, r0, 0x1f
/* 800DC8B8 000D77B8  98 03 00 00 */	stb r0, 0(r3)
/* 800DC8BC 000D77BC  80 09 00 0C */	lwz r0, 0xc(r9)
/* 800DC8C0 000D77C0  54 00 FF FE */	rlwinm r0, r0, 0x1f, 0x1f, 0x1f
/* 800DC8C4 000D77C4  98 04 00 00 */	stb r0, 0(r4)
/* 800DC8C8 000D77C8  80 09 00 0C */	lwz r0, 0xc(r9)
/* 800DC8CC 000D77CC  54 00 F7 FE */	rlwinm r0, r0, 0x1e, 0x1f, 0x1f
/* 800DC8D0 000D77D0  98 05 00 00 */	stb r0, 0(r5)
/* 800DC8D4 000D77D4  80 09 00 0C */	lwz r0, 0xc(r9)
/* 800DC8D8 000D77D8  54 00 EF FE */	rlwinm r0, r0, 0x1d, 0x1f, 0x1f
/* 800DC8DC 000D77DC  98 06 00 00 */	stb r0, 0(r6)
/* 800DC8E0 000D77E0  80 09 00 0C */	lwz r0, 0xc(r9)
/* 800DC8E4 000D77E4  54 00 E7 FE */	rlwinm r0, r0, 0x1c, 0x1f, 0x1f
/* 800DC8E8 000D77E8  98 07 00 00 */	stb r0, 0(r7)
/* 800DC8EC 000D77EC  4E 80 00 20 */	blr 

.global GXGetCPUFifo
GXGetCPUFifo:
/* 800DC8F0 000D77F0  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800DC8F4 000D77F4  7C 08 02 A6 */	mflr r0
/* 800DC8F8 000D77F8  90 01 00 14 */	stw r0, 0x14(r1)
/* 800DC8FC 000D77FC  93 E1 00 0C */	stw r31, 0xc(r1)
/* 800DC900 000D7800  7C 7F 1B 78 */	mr r31, r3
/* 800DC904 000D7804  88 0D 9B 08 */	lbz r0, CPUFifoReady-_SDA_BASE_(r13)
/* 800DC908 000D7808  2C 00 00 00 */	cmpwi r0, 0
/* 800DC90C 000D780C  40 82 00 0C */	bne lbl_800DC918
/* 800DC910 000D7810  38 60 00 00 */	li r3, 0
/* 800DC914 000D7814  48 00 00 5C */	b lbl_800DC970
lbl_800DC918:
/* 800DC918 000D7818  48 00 17 21 */	bl GXFlush
/* 800DC91C 000D781C  4B FF FE 81 */	bl __GXSaveFifo
/* 800DC920 000D7820  3C A0 80 41 */	lis r5, 0x80410004@ha
/* 800DC924 000D7824  84 85 34 F4 */	lwzu r4, 0x34f4(r5)
/* 800DC928 000D7828  38 60 00 01 */	li r3, 1
/* 800DC92C 000D782C  80 05 00 04 */	lwz r0, 0x80410004@l(r5)
/* 800DC930 000D7830  90 9F 00 00 */	stw r4, 0(r31)
/* 800DC934 000D7834  90 1F 00 04 */	stw r0, 4(r31)
/* 800DC938 000D7838  80 85 00 08 */	lwz r4, 8(r5)
/* 800DC93C 000D783C  80 05 00 0C */	lwz r0, 0xc(r5)
/* 800DC940 000D7840  90 9F 00 08 */	stw r4, 8(r31)
/* 800DC944 000D7844  90 1F 00 0C */	stw r0, 0xc(r31)
/* 800DC948 000D7848  80 85 00 10 */	lwz r4, 0x10(r5)
/* 800DC94C 000D784C  80 05 00 14 */	lwz r0, 0x14(r5)
/* 800DC950 000D7850  90 9F 00 10 */	stw r4, 0x10(r31)
/* 800DC954 000D7854  90 1F 00 14 */	stw r0, 0x14(r31)
/* 800DC958 000D7858  80 85 00 18 */	lwz r4, 0x18(r5)
/* 800DC95C 000D785C  80 05 00 1C */	lwz r0, 0x1c(r5)
/* 800DC960 000D7860  90 9F 00 18 */	stw r4, 0x18(r31)
/* 800DC964 000D7864  90 1F 00 1C */	stw r0, 0x1c(r31)
/* 800DC968 000D7868  80 05 00 20 */	lwz r0, 0x20(r5)
/* 800DC96C 000D786C  90 1F 00 20 */	stw r0, 0x20(r31)
lbl_800DC970:
/* 800DC970 000D7870  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800DC974 000D7874  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 800DC978 000D7878  7C 08 03 A6 */	mtlr r0
/* 800DC97C 000D787C  38 21 00 10 */	addi r1, r1, 0x10
/* 800DC980 000D7880  4E 80 00 20 */	blr 

.global GXGetGPFifo
GXGetGPFifo:
/* 800DC984 000D7884  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800DC988 000D7888  7C 08 02 A6 */	mflr r0
/* 800DC98C 000D788C  90 01 00 14 */	stw r0, 0x14(r1)
/* 800DC990 000D7890  93 E1 00 0C */	stw r31, 0xc(r1)
/* 800DC994 000D7894  7C 7F 1B 78 */	mr r31, r3
/* 800DC998 000D7898  88 0D 9B 09 */	lbz r0, GPFifoReady-_SDA_BASE_(r13)
/* 800DC99C 000D789C  2C 00 00 00 */	cmpwi r0, 0
/* 800DC9A0 000D78A0  40 82 00 0C */	bne lbl_800DC9AC
/* 800DC9A4 000D78A4  38 60 00 00 */	li r3, 0
/* 800DC9A8 000D78A8  48 00 00 58 */	b lbl_800DCA00
lbl_800DC9AC:
/* 800DC9AC 000D78AC  4B FF FD F1 */	bl __GXSaveFifo
/* 800DC9B0 000D78B0  3C A0 80 41 */	lis r5, 0x80410004@ha
/* 800DC9B4 000D78B4  84 85 34 D0 */	lwzu r4, 0x34d0(r5)
/* 800DC9B8 000D78B8  38 60 00 01 */	li r3, 1
/* 800DC9BC 000D78BC  80 05 00 04 */	lwz r0, 0x80410004@l(r5)
/* 800DC9C0 000D78C0  90 9F 00 00 */	stw r4, 0(r31)
/* 800DC9C4 000D78C4  90 1F 00 04 */	stw r0, 4(r31)
/* 800DC9C8 000D78C8  80 85 00 08 */	lwz r4, 8(r5)
/* 800DC9CC 000D78CC  80 05 00 0C */	lwz r0, 0xc(r5)
/* 800DC9D0 000D78D0  90 9F 00 08 */	stw r4, 8(r31)
/* 800DC9D4 000D78D4  90 1F 00 0C */	stw r0, 0xc(r31)
/* 800DC9D8 000D78D8  80 85 00 10 */	lwz r4, 0x10(r5)
/* 800DC9DC 000D78DC  80 05 00 14 */	lwz r0, 0x14(r5)
/* 800DC9E0 000D78E0  90 9F 00 10 */	stw r4, 0x10(r31)
/* 800DC9E4 000D78E4  90 1F 00 14 */	stw r0, 0x14(r31)
/* 800DC9E8 000D78E8  80 85 00 18 */	lwz r4, 0x18(r5)
/* 800DC9EC 000D78EC  80 05 00 1C */	lwz r0, 0x1c(r5)
/* 800DC9F0 000D78F0  90 9F 00 18 */	stw r4, 0x18(r31)
/* 800DC9F4 000D78F4  90 1F 00 1C */	stw r0, 0x1c(r31)
/* 800DC9F8 000D78F8  80 05 00 20 */	lwz r0, 0x20(r5)
/* 800DC9FC 000D78FC  90 1F 00 20 */	stw r0, 0x20(r31)
lbl_800DCA00:
/* 800DCA00 000D7900  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800DCA04 000D7904  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 800DCA08 000D7908  7C 08 03 A6 */	mtlr r0
/* 800DCA0C 000D790C  38 21 00 10 */	addi r1, r1, 0x10
/* 800DCA10 000D7910  4E 80 00 20 */	blr 

.global GXGetFifoPtrs
GXGetFifoPtrs:
/* 800DCA14 000D7914  80 C3 00 14 */	lwz r6, 0x14(r3)
/* 800DCA18 000D7918  80 03 00 18 */	lwz r0, 0x18(r3)
/* 800DCA1C 000D791C  90 C4 00 00 */	stw r6, 0(r4)
/* 800DCA20 000D7920  90 05 00 00 */	stw r0, 0(r5)
/* 800DCA24 000D7924  4E 80 00 20 */	blr 

.global GXGetFifoCount
GXGetFifoCount:
/* 800DCA28 000D7928  80 63 00 1C */	lwz r3, 0x1c(r3)
/* 800DCA2C 000D792C  4E 80 00 20 */	blr 

.global GXGetFifoWrap
GXGetFifoWrap:
/* 800DCA30 000D7930  88 63 00 20 */	lbz r3, 0x20(r3)
/* 800DCA34 000D7934  4E 80 00 20 */	blr 

.global GXSetBreakPtCallback
GXSetBreakPtCallback:
/* 800DCA38 000D7938  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800DCA3C 000D793C  7C 08 02 A6 */	mflr r0
/* 800DCA40 000D7940  90 01 00 14 */	stw r0, 0x14(r1)
/* 800DCA44 000D7944  93 E1 00 0C */	stw r31, 0xc(r1)
/* 800DCA48 000D7948  93 C1 00 08 */	stw r30, 8(r1)
/* 800DCA4C 000D794C  7C 7E 1B 78 */	mr r30, r3
/* 800DCA50 000D7950  83 ED 9B 14 */	lwz r31, BreakPointCB-_SDA_BASE_(r13)
/* 800DCA54 000D7954  48 01 4E 6D */	bl OSDisableInterrupts
/* 800DCA58 000D7958  93 CD 9B 14 */	stw r30, BreakPointCB-_SDA_BASE_(r13)
/* 800DCA5C 000D795C  48 01 4E 8D */	bl OSRestoreInterrupts
/* 800DCA60 000D7960  7F E3 FB 78 */	mr r3, r31
/* 800DCA64 000D7964  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 800DCA68 000D7968  83 C1 00 08 */	lwz r30, 8(r1)
/* 800DCA6C 000D796C  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800DCA70 000D7970  7C 08 03 A6 */	mtlr r0
/* 800DCA74 000D7974  38 21 00 10 */	addi r1, r1, 0x10
/* 800DCA78 000D7978  4E 80 00 20 */	blr 

.global GXEnableBreakPt
GXEnableBreakPt:
/* 800DCA7C 000D797C  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800DCA80 000D7980  7C 08 02 A6 */	mflr r0
/* 800DCA84 000D7984  90 01 00 14 */	stw r0, 0x14(r1)
/* 800DCA88 000D7988  93 E1 00 0C */	stw r31, 0xc(r1)
/* 800DCA8C 000D798C  7C 7F 1B 78 */	mr r31, r3
/* 800DCA90 000D7990  48 01 4E 31 */	bl OSDisableInterrupts
/* 800DCA94 000D7994  80 C2 96 48 */	lwz r6, __GXData-_SDA2_BASE_(r2)
/* 800DCA98 000D7998  57 E0 84 BE */	rlwinm r0, r31, 0x10, 0x12, 0x1f
/* 800DCA9C 000D799C  80 86 00 08 */	lwz r4, 8(r6)
/* 800DCAA0 000D79A0  54 85 00 3C */	rlwinm r5, r4, 0, 0, 0x1e
/* 800DCAA4 000D79A4  90 A6 00 08 */	stw r5, 8(r6)
/* 800DCAA8 000D79A8  80 8D 9A E4 */	lwz r4, __cpReg-_SDA_BASE_(r13)
/* 800DCAAC 000D79AC  B0 A4 00 02 */	sth r5, 2(r4)
/* 800DCAB0 000D79B0  80 8D 9A E4 */	lwz r4, __cpReg-_SDA_BASE_(r13)
/* 800DCAB4 000D79B4  B3 E4 00 3C */	sth r31, 0x3c(r4)
/* 800DCAB8 000D79B8  80 8D 9A E4 */	lwz r4, __cpReg-_SDA_BASE_(r13)
/* 800DCABC 000D79BC  B0 04 00 3E */	sth r0, 0x3e(r4)
/* 800DCAC0 000D79C0  80 06 00 08 */	lwz r0, 8(r6)
/* 800DCAC4 000D79C4  54 00 07 FA */	rlwinm r0, r0, 0, 0x1f, 0x1d
/* 800DCAC8 000D79C8  54 00 06 F2 */	rlwinm r0, r0, 0, 0x1b, 0x19
/* 800DCACC 000D79CC  90 06 00 08 */	stw r0, 8(r6)
/* 800DCAD0 000D79D0  80 8D 9A E4 */	lwz r4, __cpReg-_SDA_BASE_(r13)
/* 800DCAD4 000D79D4  B0 04 00 02 */	sth r0, 2(r4)
/* 800DCAD8 000D79D8  80 06 00 08 */	lwz r0, 8(r6)
/* 800DCADC 000D79DC  60 00 00 22 */	ori r0, r0, 0x22
/* 800DCAE0 000D79E0  90 06 00 08 */	stw r0, 8(r6)
/* 800DCAE4 000D79E4  80 8D 9A E4 */	lwz r4, __cpReg-_SDA_BASE_(r13)
/* 800DCAE8 000D79E8  B0 04 00 02 */	sth r0, 2(r4)
/* 800DCAEC 000D79EC  93 ED 9B 10 */	stw r31, __GXCurrentBP-_SDA_BASE_(r13)
/* 800DCAF0 000D79F0  80 06 00 08 */	lwz r0, 8(r6)
/* 800DCAF4 000D79F4  60 00 00 01 */	ori r0, r0, 1
/* 800DCAF8 000D79F8  90 06 00 08 */	stw r0, 8(r6)
/* 800DCAFC 000D79FC  80 8D 9A E4 */	lwz r4, __cpReg-_SDA_BASE_(r13)
/* 800DCB00 000D7A00  B0 04 00 02 */	sth r0, 2(r4)
/* 800DCB04 000D7A04  48 01 4D E5 */	bl OSRestoreInterrupts
/* 800DCB08 000D7A08  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800DCB0C 000D7A0C  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 800DCB10 000D7A10  7C 08 03 A6 */	mtlr r0
/* 800DCB14 000D7A14  38 21 00 10 */	addi r1, r1, 0x10
/* 800DCB18 000D7A18  4E 80 00 20 */	blr 

.global GXDisableBreakPt
GXDisableBreakPt:
/* 800DCB1C 000D7A1C  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800DCB20 000D7A20  7C 08 02 A6 */	mflr r0
/* 800DCB24 000D7A24  90 01 00 14 */	stw r0, 0x14(r1)
/* 800DCB28 000D7A28  48 01 4D 99 */	bl OSDisableInterrupts
/* 800DCB2C 000D7A2C  80 C2 96 48 */	lwz r6, __GXData-_SDA2_BASE_(r2)
/* 800DCB30 000D7A30  38 00 00 00 */	li r0, 0
/* 800DCB34 000D7A34  80 86 00 08 */	lwz r4, 8(r6)
/* 800DCB38 000D7A38  54 84 07 FA */	rlwinm r4, r4, 0, 0x1f, 0x1d
/* 800DCB3C 000D7A3C  54 85 06 F2 */	rlwinm r5, r4, 0, 0x1b, 0x19
/* 800DCB40 000D7A40  90 A6 00 08 */	stw r5, 8(r6)
/* 800DCB44 000D7A44  80 8D 9A E4 */	lwz r4, __cpReg-_SDA_BASE_(r13)
/* 800DCB48 000D7A48  B0 A4 00 02 */	sth r5, 2(r4)
/* 800DCB4C 000D7A4C  90 0D 9B 10 */	stw r0, __GXCurrentBP-_SDA_BASE_(r13)
/* 800DCB50 000D7A50  48 01 4D 99 */	bl OSRestoreInterrupts
/* 800DCB54 000D7A54  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800DCB58 000D7A58  7C 08 03 A6 */	mtlr r0
/* 800DCB5C 000D7A5C  38 21 00 10 */	addi r1, r1, 0x10
/* 800DCB60 000D7A60  4E 80 00 20 */	blr 

.global __GXFifoInit
__GXFifoInit:
/* 800DCB64 000D7A64  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800DCB68 000D7A68  7C 08 02 A6 */	mflr r0
/* 800DCB6C 000D7A6C  3C 80 80 0E */	lis r4, GXCPInterruptHandler@ha
/* 800DCB70 000D7A70  38 60 00 11 */	li r3, 0x11
/* 800DCB74 000D7A74  90 01 00 14 */	stw r0, 0x14(r1)
/* 800DCB78 000D7A78  38 84 C0 48 */	addi r4, r4, GXCPInterruptHandler@l
/* 800DCB7C 000D7A7C  93 E1 00 0C */	stw r31, 0xc(r1)
/* 800DCB80 000D7A80  48 01 4D 8D */	bl func_800F190C
/* 800DCB84 000D7A84  38 60 40 00 */	li r3, 0x4000
/* 800DCB88 000D7A88  48 01 51 49 */	bl func_800F1CD0
/* 800DCB8C 000D7A8C  48 01 75 CD */	bl OSGetCurrentThread
/* 800DCB90 000D7A90  3B E0 00 00 */	li r31, 0
/* 800DCB94 000D7A94  90 6D 9B 1C */	stw r3, __GXCurrentThread-_SDA_BASE_(r13)
/* 800DCB98 000D7A98  3C 60 80 41 */	lis r3, GPFifo@ha
/* 800DCB9C 000D7A9C  38 80 00 00 */	li r4, 0
/* 800DCBA0 000D7AA0  93 ED 9B 18 */	stw r31, GXOverflowSuspendInProgress-_SDA_BASE_(r13)
/* 800DCBA4 000D7AA4  38 63 34 F4 */	addi r3, r3, GPFifo@l
/* 800DCBA8 000D7AA8  38 A0 00 24 */	li r5, 0x24
/* 800DCBAC 000D7AAC  4B F2 75 59 */	bl memset
/* 800DCBB0 000D7AB0  3C 60 80 41 */	lis r3, CPUFifo@ha
/* 800DCBB4 000D7AB4  38 80 00 00 */	li r4, 0
/* 800DCBB8 000D7AB8  38 63 34 D0 */	addi r3, r3, CPUFifo@l
/* 800DCBBC 000D7ABC  38 A0 00 24 */	li r5, 0x24
/* 800DCBC0 000D7AC0  4B F2 75 45 */	bl memset
/* 800DCBC4 000D7AC4  9B ED 9B 08 */	stb r31, CPUFifoReady-_SDA_BASE_(r13)
/* 800DCBC8 000D7AC8  9B ED 9B 09 */	stb r31, GPFifoReady-_SDA_BASE_(r13)
/* 800DCBCC 000D7ACC  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 800DCBD0 000D7AD0  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800DCBD4 000D7AD4  7C 08 03 A6 */	mtlr r0
/* 800DCBD8 000D7AD8  38 21 00 10 */	addi r1, r1, 0x10
/* 800DCBDC 000D7ADC  4E 80 00 20 */	blr 

.global __GXCleanGPFifo
__GXCleanGPFifo:
/* 800DCBE0 000D7AE0  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800DCBE4 000D7AE4  7C 08 02 A6 */	mflr r0
/* 800DCBE8 000D7AE8  90 01 00 24 */	stw r0, 0x24(r1)
/* 800DCBEC 000D7AEC  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 800DCBF0 000D7AF0  93 C1 00 18 */	stw r30, 0x18(r1)
/* 800DCBF4 000D7AF4  93 A1 00 14 */	stw r29, 0x14(r1)
/* 800DCBF8 000D7AF8  93 81 00 10 */	stw r28, 0x10(r1)
/* 800DCBFC 000D7AFC  88 0D 9B 09 */	lbz r0, GPFifoReady-_SDA_BASE_(r13)
/* 800DCC00 000D7B00  2C 00 00 00 */	cmpwi r0, 0
/* 800DCC04 000D7B04  41 82 01 5C */	beq lbl_800DCD60
/* 800DCC08 000D7B08  48 01 4C B9 */	bl OSDisableInterrupts
/* 800DCC0C 000D7B0C  83 A2 96 48 */	lwz r29, __GXData-_SDA2_BASE_(r2)
/* 800DCC10 000D7B10  3F C0 80 41 */	lis r30, CPUFifo@ha
/* 800DCC14 000D7B14  7C 7C 1B 78 */	mr r28, r3
/* 800DCC18 000D7B18  3B E0 00 00 */	li r31, 0
/* 800DCC1C 000D7B1C  80 1D 00 08 */	lwz r0, 8(r29)
/* 800DCC20 000D7B20  3B DE 34 D0 */	addi r30, r30, CPUFifo@l
/* 800DCC24 000D7B24  54 00 00 3C */	rlwinm r0, r0, 0, 0, 0x1e
/* 800DCC28 000D7B28  90 1D 00 08 */	stw r0, 8(r29)
/* 800DCC2C 000D7B2C  80 6D 9A E4 */	lwz r3, __cpReg-_SDA_BASE_(r13)
/* 800DCC30 000D7B30  B0 03 00 02 */	sth r0, 2(r3)
/* 800DCC34 000D7B34  80 1D 00 08 */	lwz r0, 8(r29)
/* 800DCC38 000D7B38  54 00 07 B6 */	rlwinm r0, r0, 0, 0x1e, 0x1b
/* 800DCC3C 000D7B3C  90 1D 00 08 */	stw r0, 8(r29)
/* 800DCC40 000D7B40  80 6D 9A E4 */	lwz r3, __cpReg-_SDA_BASE_(r13)
/* 800DCC44 000D7B44  B0 03 00 02 */	sth r0, 2(r3)
/* 800DCC48 000D7B48  80 1E 00 18 */	lwz r0, 0x18(r30)
/* 800DCC4C 000D7B4C  93 FE 00 1C */	stw r31, 0x1c(r30)
/* 800DCC50 000D7B50  80 6D 9A E4 */	lwz r3, __cpReg-_SDA_BASE_(r13)
/* 800DCC54 000D7B54  90 1E 00 14 */	stw r0, 0x14(r30)
/* 800DCC58 000D7B58  B3 E3 00 30 */	sth r31, 0x30(r3)
/* 800DCC5C 000D7B5C  80 1E 00 18 */	lwz r0, 0x18(r30)
/* 800DCC60 000D7B60  80 6D 9A E4 */	lwz r3, __cpReg-_SDA_BASE_(r13)
/* 800DCC64 000D7B64  B0 03 00 34 */	sth r0, 0x34(r3)
/* 800DCC68 000D7B68  80 1E 00 14 */	lwz r0, 0x14(r30)
/* 800DCC6C 000D7B6C  80 6D 9A E4 */	lwz r3, __cpReg-_SDA_BASE_(r13)
/* 800DCC70 000D7B70  B0 03 00 38 */	sth r0, 0x38(r3)
/* 800DCC74 000D7B74  80 1E 00 1C */	lwz r0, 0x1c(r30)
/* 800DCC78 000D7B78  80 6D 9A E4 */	lwz r3, __cpReg-_SDA_BASE_(r13)
/* 800DCC7C 000D7B7C  7C 00 86 70 */	srawi r0, r0, 0x10
/* 800DCC80 000D7B80  B0 03 00 32 */	sth r0, 0x32(r3)
/* 800DCC84 000D7B84  80 1E 00 18 */	lwz r0, 0x18(r30)
/* 800DCC88 000D7B88  80 6D 9A E4 */	lwz r3, __cpReg-_SDA_BASE_(r13)
/* 800DCC8C 000D7B8C  54 00 84 BE */	rlwinm r0, r0, 0x10, 0x12, 0x1f
/* 800DCC90 000D7B90  B0 03 00 36 */	sth r0, 0x36(r3)
/* 800DCC94 000D7B94  80 1E 00 14 */	lwz r0, 0x14(r30)
/* 800DCC98 000D7B98  80 6D 9A E4 */	lwz r3, __cpReg-_SDA_BASE_(r13)
/* 800DCC9C 000D7B9C  54 00 84 BE */	rlwinm r0, r0, 0x10, 0x12, 0x1f
/* 800DCCA0 000D7BA0  B0 03 00 3A */	sth r0, 0x3a(r3)
/* 800DCCA4 000D7BA4  48 02 DD AD */	bl PPCSync
/* 800DCCA8 000D7BA8  88 0D 9B 20 */	lbz r0, CPGPLinked-_SDA_BASE_(r13)
/* 800DCCAC 000D7BAC  2C 00 00 00 */	cmpwi r0, 0
/* 800DCCB0 000D7BB0  41 82 00 5C */	beq lbl_800DCD0C
/* 800DCCB4 000D7BB4  3C A0 80 41 */	lis r5, GPFifo@ha
/* 800DCCB8 000D7BB8  80 9E 00 18 */	lwz r4, 0x18(r30)
/* 800DCCBC 000D7BBC  38 A5 34 F4 */	addi r5, r5, GPFifo@l
/* 800DCCC0 000D7BC0  80 7E 00 14 */	lwz r3, 0x14(r30)
/* 800DCCC4 000D7BC4  80 1E 00 1C */	lwz r0, 0x1c(r30)
/* 800DCCC8 000D7BC8  50 9F 00 F4 */	rlwimi r31, r4, 0, 3, 0x1a
/* 800DCCCC 000D7BCC  90 65 00 14 */	stw r3, 0x14(r5)
/* 800DCCD0 000D7BD0  80 6D 9A E0 */	lwz r3, __piReg-_SDA_BASE_(r13)
/* 800DCCD4 000D7BD4  90 85 00 18 */	stw r4, 0x18(r5)
/* 800DCCD8 000D7BD8  90 05 00 1C */	stw r0, 0x1c(r5)
/* 800DCCDC 000D7BDC  93 E3 00 14 */	stw r31, 0x14(r3)
/* 800DCCE0 000D7BE0  80 1D 00 08 */	lwz r0, 8(r29)
/* 800DCCE4 000D7BE4  60 00 00 04 */	ori r0, r0, 4
/* 800DCCE8 000D7BE8  54 00 07 76 */	rlwinm r0, r0, 0, 0x1d, 0x1b
/* 800DCCEC 000D7BEC  90 1D 00 08 */	stw r0, 8(r29)
/* 800DCCF0 000D7BF0  80 6D 9A E4 */	lwz r3, __cpReg-_SDA_BASE_(r13)
/* 800DCCF4 000D7BF4  B0 03 00 02 */	sth r0, 2(r3)
/* 800DCCF8 000D7BF8  80 1D 00 08 */	lwz r0, 8(r29)
/* 800DCCFC 000D7BFC  60 00 00 10 */	ori r0, r0, 0x10
/* 800DCD00 000D7C00  90 1D 00 08 */	stw r0, 8(r29)
/* 800DCD04 000D7C04  80 6D 9A E4 */	lwz r3, __cpReg-_SDA_BASE_(r13)
/* 800DCD08 000D7C08  B0 03 00 02 */	sth r0, 2(r3)
lbl_800DCD0C:
/* 800DCD0C 000D7C0C  80 9D 00 08 */	lwz r4, 8(r29)
/* 800DCD10 000D7C10  38 00 00 00 */	li r0, 0
/* 800DCD14 000D7C14  80 C2 96 48 */	lwz r6, __GXData-_SDA2_BASE_(r2)
/* 800DCD18 000D7C18  7F 83 E3 78 */	mr r3, r28
/* 800DCD1C 000D7C1C  54 84 07 FA */	rlwinm r4, r4, 0, 0x1f, 0x1d
/* 800DCD20 000D7C20  54 85 06 F2 */	rlwinm r5, r4, 0, 0x1b, 0x19
/* 800DCD24 000D7C24  90 BD 00 08 */	stw r5, 8(r29)
/* 800DCD28 000D7C28  80 8D 9A E4 */	lwz r4, __cpReg-_SDA_BASE_(r13)
/* 800DCD2C 000D7C2C  B0 A4 00 02 */	sth r5, 2(r4)
/* 800DCD30 000D7C30  90 0D 9B 10 */	stw r0, __GXCurrentBP-_SDA_BASE_(r13)
/* 800DCD34 000D7C34  80 06 00 10 */	lwz r0, 0x10(r6)
/* 800DCD38 000D7C38  60 00 00 03 */	ori r0, r0, 3
/* 800DCD3C 000D7C3C  90 06 00 10 */	stw r0, 0x10(r6)
/* 800DCD40 000D7C40  80 8D 9A E4 */	lwz r4, __cpReg-_SDA_BASE_(r13)
/* 800DCD44 000D7C44  B0 04 00 04 */	sth r0, 4(r4)
/* 800DCD48 000D7C48  80 1D 00 08 */	lwz r0, 8(r29)
/* 800DCD4C 000D7C4C  60 00 00 01 */	ori r0, r0, 1
/* 800DCD50 000D7C50  90 1D 00 08 */	stw r0, 8(r29)
/* 800DCD54 000D7C54  80 8D 9A E4 */	lwz r4, __cpReg-_SDA_BASE_(r13)
/* 800DCD58 000D7C58  B0 04 00 02 */	sth r0, 2(r4)
/* 800DCD5C 000D7C5C  48 01 4B 8D */	bl OSRestoreInterrupts
lbl_800DCD60:
/* 800DCD60 000D7C60  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800DCD64 000D7C64  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 800DCD68 000D7C68  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 800DCD6C 000D7C6C  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 800DCD70 000D7C70  83 81 00 10 */	lwz r28, 0x10(r1)
/* 800DCD74 000D7C74  7C 08 03 A6 */	mtlr r0
/* 800DCD78 000D7C78  38 21 00 20 */	addi r1, r1, 0x20
/* 800DCD7C 000D7C7C  4E 80 00 20 */	blr 

.global GXGetCurrentGXThread
GXGetCurrentGXThread:
/* 800DCD80 000D7C80  80 6D 9B 1C */	lwz r3, __GXCurrentThread-_SDA_BASE_(r13)
/* 800DCD84 000D7C84  4E 80 00 20 */	blr 
