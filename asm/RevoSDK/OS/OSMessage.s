.include "macros.inc"

.section .text, "ax"
.global OSInitMessageQueue
OSInitMessageQueue:
/* 800F205C 000ECF5C  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800F2060 000ECF60  7C 08 02 A6 */	mflr r0
/* 800F2064 000ECF64  90 01 00 24 */	stw r0, 0x24(r1)
/* 800F2068 000ECF68  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 800F206C 000ECF6C  7C BF 2B 78 */	mr r31, r5
/* 800F2070 000ECF70  93 C1 00 18 */	stw r30, 0x18(r1)
/* 800F2074 000ECF74  7C 9E 23 78 */	mr r30, r4
/* 800F2078 000ECF78  93 A1 00 14 */	stw r29, 0x14(r1)
/* 800F207C 000ECF7C  7C 7D 1B 78 */	mr r29, r3
/* 800F2080 000ECF80  48 00 20 C9 */	bl OSInitThreadQueue
/* 800F2084 000ECF84  38 7D 00 08 */	addi r3, r29, 8
/* 800F2088 000ECF88  48 00 20 C1 */	bl OSInitThreadQueue
/* 800F208C 000ECF8C  38 00 00 00 */	li r0, 0
/* 800F2090 000ECF90  93 DD 00 10 */	stw r30, 0x10(r29)
/* 800F2094 000ECF94  93 FD 00 14 */	stw r31, 0x14(r29)
/* 800F2098 000ECF98  90 1D 00 18 */	stw r0, 0x18(r29)
/* 800F209C 000ECF9C  90 1D 00 1C */	stw r0, 0x1c(r29)
/* 800F20A0 000ECFA0  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 800F20A4 000ECFA4  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 800F20A8 000ECFA8  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 800F20AC 000ECFAC  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800F20B0 000ECFB0  7C 08 03 A6 */	mtlr r0
/* 800F20B4 000ECFB4  38 21 00 20 */	addi r1, r1, 0x20
/* 800F20B8 000ECFB8  4E 80 00 20 */	blr 

.global OSSendMessage
OSSendMessage:
/* 800F20BC 000ECFBC  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800F20C0 000ECFC0  7C 08 02 A6 */	mflr r0
/* 800F20C4 000ECFC4  90 01 00 24 */	stw r0, 0x24(r1)
/* 800F20C8 000ECFC8  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 800F20CC 000ECFCC  7C BF 2B 78 */	mr r31, r5
/* 800F20D0 000ECFD0  93 C1 00 18 */	stw r30, 0x18(r1)
/* 800F20D4 000ECFD4  93 A1 00 14 */	stw r29, 0x14(r1)
/* 800F20D8 000ECFD8  7C 9D 23 78 */	mr r29, r4
/* 800F20DC 000ECFDC  93 81 00 10 */	stw r28, 0x10(r1)
/* 800F20E0 000ECFE0  7C 7C 1B 78 */	mr r28, r3
/* 800F20E4 000ECFE4  4B FF F7 DD */	bl OSDisableInterrupts
/* 800F20E8 000ECFE8  7C 7E 1B 78 */	mr r30, r3
/* 800F20EC 000ECFEC  57 FF 07 FE */	clrlwi r31, r31, 0x1f
/* 800F20F0 000ECFF0  48 00 00 24 */	b lbl_800F2114
lbl_800F20F4:
/* 800F20F4 000ECFF4  2C 1F 00 00 */	cmpwi r31, 0
/* 800F20F8 000ECFF8  40 82 00 14 */	bne lbl_800F210C
/* 800F20FC 000ECFFC  7F C3 F3 78 */	mr r3, r30
/* 800F2100 000ED000  4B FF F7 E9 */	bl OSRestoreInterrupts
/* 800F2104 000ED004  38 60 00 00 */	li r3, 0
/* 800F2108 000ED008  48 00 00 5C */	b lbl_800F2164
lbl_800F210C:
/* 800F210C 000ED00C  7F 83 E3 78 */	mr r3, r28
/* 800F2110 000ED010  48 00 31 51 */	bl OSSleepThread
lbl_800F2114:
/* 800F2114 000ED014  80 9C 00 1C */	lwz r4, 0x1c(r28)
/* 800F2118 000ED018  80 DC 00 14 */	lwz r6, 0x14(r28)
/* 800F211C 000ED01C  7C 06 20 00 */	cmpw r6, r4
/* 800F2120 000ED020  40 81 FF D4 */	ble lbl_800F20F4
/* 800F2124 000ED024  80 1C 00 18 */	lwz r0, 0x18(r28)
/* 800F2128 000ED028  38 7C 00 08 */	addi r3, r28, 8
/* 800F212C 000ED02C  80 BC 00 10 */	lwz r5, 0x10(r28)
/* 800F2130 000ED030  7C 80 22 14 */	add r4, r0, r4
/* 800F2134 000ED034  7C 04 33 D6 */	divw r0, r4, r6
/* 800F2138 000ED038  7C 00 31 D6 */	mullw r0, r0, r6
/* 800F213C 000ED03C  7C 00 20 50 */	subf r0, r0, r4
/* 800F2140 000ED040  54 00 10 3A */	slwi r0, r0, 2
/* 800F2144 000ED044  7F A5 01 2E */	stwx r29, r5, r0
/* 800F2148 000ED048  80 9C 00 1C */	lwz r4, 0x1c(r28)
/* 800F214C 000ED04C  38 04 00 01 */	addi r0, r4, 1
/* 800F2150 000ED050  90 1C 00 1C */	stw r0, 0x1c(r28)
/* 800F2154 000ED054  48 00 31 F9 */	bl OSWakeupThread
/* 800F2158 000ED058  7F C3 F3 78 */	mr r3, r30
/* 800F215C 000ED05C  4B FF F7 8D */	bl OSRestoreInterrupts
/* 800F2160 000ED060  38 60 00 01 */	li r3, 1
lbl_800F2164:
/* 800F2164 000ED064  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800F2168 000ED068  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 800F216C 000ED06C  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 800F2170 000ED070  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 800F2174 000ED074  83 81 00 10 */	lwz r28, 0x10(r1)
/* 800F2178 000ED078  7C 08 03 A6 */	mtlr r0
/* 800F217C 000ED07C  38 21 00 20 */	addi r1, r1, 0x20
/* 800F2180 000ED080  4E 80 00 20 */	blr 

.global OSReceiveMessage
OSReceiveMessage:
/* 800F2184 000ED084  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800F2188 000ED088  7C 08 02 A6 */	mflr r0
/* 800F218C 000ED08C  90 01 00 24 */	stw r0, 0x24(r1)
/* 800F2190 000ED090  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 800F2194 000ED094  7C 7F 1B 78 */	mr r31, r3
/* 800F2198 000ED098  93 C1 00 18 */	stw r30, 0x18(r1)
/* 800F219C 000ED09C  7C BE 2B 78 */	mr r30, r5
/* 800F21A0 000ED0A0  93 A1 00 14 */	stw r29, 0x14(r1)
/* 800F21A4 000ED0A4  93 81 00 10 */	stw r28, 0x10(r1)
/* 800F21A8 000ED0A8  7C 9C 23 78 */	mr r28, r4
/* 800F21AC 000ED0AC  4B FF F7 15 */	bl OSDisableInterrupts
/* 800F21B0 000ED0B0  7C 7D 1B 78 */	mr r29, r3
/* 800F21B4 000ED0B4  57 DE 07 FE */	clrlwi r30, r30, 0x1f
/* 800F21B8 000ED0B8  48 00 00 24 */	b lbl_800F21DC
lbl_800F21BC:
/* 800F21BC 000ED0BC  2C 1E 00 00 */	cmpwi r30, 0
/* 800F21C0 000ED0C0  40 82 00 14 */	bne lbl_800F21D4
/* 800F21C4 000ED0C4  7F A3 EB 78 */	mr r3, r29
/* 800F21C8 000ED0C8  4B FF F7 21 */	bl OSRestoreInterrupts
/* 800F21CC 000ED0CC  38 60 00 00 */	li r3, 0
/* 800F21D0 000ED0D0  48 00 00 70 */	b lbl_800F2240
lbl_800F21D4:
/* 800F21D4 000ED0D4  38 7F 00 08 */	addi r3, r31, 8
/* 800F21D8 000ED0D8  48 00 30 89 */	bl OSSleepThread
lbl_800F21DC:
/* 800F21DC 000ED0DC  80 1F 00 1C */	lwz r0, 0x1c(r31)
/* 800F21E0 000ED0E0  2C 00 00 00 */	cmpwi r0, 0
/* 800F21E4 000ED0E4  41 82 FF D8 */	beq lbl_800F21BC
/* 800F21E8 000ED0E8  2C 1C 00 00 */	cmpwi r28, 0
/* 800F21EC 000ED0EC  41 82 00 18 */	beq lbl_800F2204
/* 800F21F0 000ED0F0  80 1F 00 18 */	lwz r0, 0x18(r31)
/* 800F21F4 000ED0F4  80 7F 00 10 */	lwz r3, 0x10(r31)
/* 800F21F8 000ED0F8  54 00 10 3A */	slwi r0, r0, 2
/* 800F21FC 000ED0FC  7C 03 00 2E */	lwzx r0, r3, r0
/* 800F2200 000ED100  90 1C 00 00 */	stw r0, 0(r28)
lbl_800F2204:
/* 800F2204 000ED104  80 9F 00 18 */	lwz r4, 0x18(r31)
/* 800F2208 000ED108  7F E3 FB 78 */	mr r3, r31
/* 800F220C 000ED10C  80 DF 00 14 */	lwz r6, 0x14(r31)
/* 800F2210 000ED110  38 E4 00 01 */	addi r7, r4, 1
/* 800F2214 000ED114  80 9F 00 1C */	lwz r4, 0x1c(r31)
/* 800F2218 000ED118  7C A7 33 D6 */	divw r5, r7, r6
/* 800F221C 000ED11C  38 04 FF FF */	addi r0, r4, -1
/* 800F2220 000ED120  90 1F 00 1C */	stw r0, 0x1c(r31)
/* 800F2224 000ED124  7C 05 31 D6 */	mullw r0, r5, r6
/* 800F2228 000ED128  7C 00 38 50 */	subf r0, r0, r7
/* 800F222C 000ED12C  90 1F 00 18 */	stw r0, 0x18(r31)
/* 800F2230 000ED130  48 00 31 1D */	bl OSWakeupThread
/* 800F2234 000ED134  7F A3 EB 78 */	mr r3, r29
/* 800F2238 000ED138  4B FF F6 B1 */	bl OSRestoreInterrupts
/* 800F223C 000ED13C  38 60 00 01 */	li r3, 1
lbl_800F2240:
/* 800F2240 000ED140  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800F2244 000ED144  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 800F2248 000ED148  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 800F224C 000ED14C  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 800F2250 000ED150  83 81 00 10 */	lwz r28, 0x10(r1)
/* 800F2254 000ED154  7C 08 03 A6 */	mtlr r0
/* 800F2258 000ED158  38 21 00 20 */	addi r1, r1, 0x20
/* 800F225C 000ED15C  4E 80 00 20 */	blr 

.global OSJamMessage
OSJamMessage:
/* 800F2260 000ED160  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800F2264 000ED164  7C 08 02 A6 */	mflr r0
/* 800F2268 000ED168  90 01 00 24 */	stw r0, 0x24(r1)
/* 800F226C 000ED16C  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 800F2270 000ED170  7C BF 2B 78 */	mr r31, r5
/* 800F2274 000ED174  93 C1 00 18 */	stw r30, 0x18(r1)
/* 800F2278 000ED178  93 A1 00 14 */	stw r29, 0x14(r1)
/* 800F227C 000ED17C  7C 9D 23 78 */	mr r29, r4
/* 800F2280 000ED180  93 81 00 10 */	stw r28, 0x10(r1)
/* 800F2284 000ED184  7C 7C 1B 78 */	mr r28, r3
/* 800F2288 000ED188  4B FF F6 39 */	bl OSDisableInterrupts
/* 800F228C 000ED18C  7C 7E 1B 78 */	mr r30, r3
/* 800F2290 000ED190  57 FF 07 FE */	clrlwi r31, r31, 0x1f
/* 800F2294 000ED194  48 00 00 24 */	b lbl_800F22B8
lbl_800F2298:
/* 800F2298 000ED198  2C 1F 00 00 */	cmpwi r31, 0
/* 800F229C 000ED19C  40 82 00 14 */	bne lbl_800F22B0
/* 800F22A0 000ED1A0  7F C3 F3 78 */	mr r3, r30
/* 800F22A4 000ED1A4  4B FF F6 45 */	bl OSRestoreInterrupts
/* 800F22A8 000ED1A8  38 60 00 00 */	li r3, 0
/* 800F22AC 000ED1AC  48 00 00 64 */	b lbl_800F2310
lbl_800F22B0:
/* 800F22B0 000ED1B0  7F 83 E3 78 */	mr r3, r28
/* 800F22B4 000ED1B4  48 00 2F AD */	bl OSSleepThread
lbl_800F22B8:
/* 800F22B8 000ED1B8  80 DC 00 14 */	lwz r6, 0x14(r28)
/* 800F22BC 000ED1BC  80 1C 00 1C */	lwz r0, 0x1c(r28)
/* 800F22C0 000ED1C0  7C 06 00 00 */	cmpw r6, r0
/* 800F22C4 000ED1C4  40 81 FF D4 */	ble lbl_800F2298
/* 800F22C8 000ED1C8  80 1C 00 18 */	lwz r0, 0x18(r28)
/* 800F22CC 000ED1CC  38 7C 00 08 */	addi r3, r28, 8
/* 800F22D0 000ED1D0  80 9C 00 10 */	lwz r4, 0x10(r28)
/* 800F22D4 000ED1D4  7C A6 02 14 */	add r5, r6, r0
/* 800F22D8 000ED1D8  38 A5 FF FF */	addi r5, r5, -1
/* 800F22DC 000ED1DC  7C 05 33 D6 */	divw r0, r5, r6
/* 800F22E0 000ED1E0  7C 00 31 D6 */	mullw r0, r0, r6
/* 800F22E4 000ED1E4  7C 00 28 50 */	subf r0, r0, r5
/* 800F22E8 000ED1E8  90 1C 00 18 */	stw r0, 0x18(r28)
/* 800F22EC 000ED1EC  54 00 10 3A */	slwi r0, r0, 2
/* 800F22F0 000ED1F0  7F A4 01 2E */	stwx r29, r4, r0
/* 800F22F4 000ED1F4  80 9C 00 1C */	lwz r4, 0x1c(r28)
/* 800F22F8 000ED1F8  38 04 00 01 */	addi r0, r4, 1
/* 800F22FC 000ED1FC  90 1C 00 1C */	stw r0, 0x1c(r28)
/* 800F2300 000ED200  48 00 30 4D */	bl OSWakeupThread
/* 800F2304 000ED204  7F C3 F3 78 */	mr r3, r30
/* 800F2308 000ED208  4B FF F5 E1 */	bl OSRestoreInterrupts
/* 800F230C 000ED20C  38 60 00 01 */	li r3, 1
lbl_800F2310:
/* 800F2310 000ED210  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800F2314 000ED214  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 800F2318 000ED218  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 800F231C 000ED21C  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 800F2320 000ED220  83 81 00 10 */	lwz r28, 0x10(r1)
/* 800F2324 000ED224  7C 08 03 A6 */	mtlr r0
/* 800F2328 000ED228  38 21 00 20 */	addi r1, r1, 0x20
/* 800F232C 000ED22C  4E 80 00 20 */	blr 
