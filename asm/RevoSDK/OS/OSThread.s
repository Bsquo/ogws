.include "macros.inc"

.section .sdata, "wa"
.balign 0x8
SwitchThreadCallback:
	.long DefaultSwitchThreadCallback

.section .sbss, "wa"
.balign 0x8
Reschedule:
	.skip 0x4
RunQueueHint:
	.skip 0x4
RunQueueBits:
	.skip 0x4

.section .bss, "wa"
.balign 0x8
DefaultThread:
	.skip 0x318
RunQueue:
	.skip 0x100
IdleContext:
	.skip 0x2C8
IdleThread:
    .skip 0x318

.section .text, "ax"
DefaultSwitchThreadCallback:
/* 800F3E50 000EED50  4E 80 00 20 */	blr 

.global OSSetSwitchThreadCallback
OSSetSwitchThreadCallback:
/* 800F3E54 000EED54  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800F3E58 000EED58  7C 08 02 A6 */	mflr r0
/* 800F3E5C 000EED5C  90 01 00 14 */	stw r0, 0x14(r1)
/* 800F3E60 000EED60  93 E1 00 0C */	stw r31, 0xc(r1)
/* 800F3E64 000EED64  93 C1 00 08 */	stw r30, 8(r1)
/* 800F3E68 000EED68  7C 7E 1B 78 */	mr r30, r3
/* 800F3E6C 000EED6C  4B FF DA 55 */	bl OSDisableInterrupts
/* 800F3E70 000EED70  2C 1E 00 00 */	cmpwi r30, 0
/* 800F3E74 000EED74  83 ED 83 90 */	lwz r31, SwitchThreadCallback-_SDA_BASE_(r13)
/* 800F3E78 000EED78  41 82 00 08 */	beq lbl_800F3E80
/* 800F3E7C 000EED7C  48 00 00 0C */	b lbl_800F3E88
lbl_800F3E80:
/* 800F3E80 000EED80  3F C0 80 0F */	lis r30, DefaultSwitchThreadCallback@ha
/* 800F3E84 000EED84  3B DE 3E 50 */	addi r30, r30, DefaultSwitchThreadCallback@l
lbl_800F3E88:
/* 800F3E88 000EED88  93 CD 83 90 */	stw r30, SwitchThreadCallback-_SDA_BASE_(r13)
/* 800F3E8C 000EED8C  4B FF DA 5D */	bl OSRestoreInterrupts
/* 800F3E90 000EED90  3C 60 80 0F */	lis r3, DefaultSwitchThreadCallback@ha
/* 800F3E94 000EED94  38 63 3E 50 */	addi r3, r3, DefaultSwitchThreadCallback@l
/* 800F3E98 000EED98  7C 1F 18 40 */	cmplw r31, r3
/* 800F3E9C 000EED9C  40 82 00 0C */	bne lbl_800F3EA8
/* 800F3EA0 000EEDA0  38 60 00 00 */	li r3, 0
/* 800F3EA4 000EEDA4  48 00 00 08 */	b lbl_800F3EAC
lbl_800F3EA8:
/* 800F3EA8 000EEDA8  7F E3 FB 78 */	mr r3, r31
lbl_800F3EAC:
/* 800F3EAC 000EEDAC  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800F3EB0 000EEDB0  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 800F3EB4 000EEDB4  83 C1 00 08 */	lwz r30, 8(r1)
/* 800F3EB8 000EEDB8  7C 08 03 A6 */	mtlr r0
/* 800F3EBC 000EEDBC  38 21 00 10 */	addi r1, r1, 0x10
/* 800F3EC0 000EEDC0  4E 80 00 20 */	blr 

.global __OSThreadInit
__OSThreadInit:
/* 800F3EC4 000EEDC4  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800F3EC8 000EEDC8  7C 08 02 A6 */	mflr r0
/* 800F3ECC 000EEDCC  38 60 00 02 */	li r3, 2
/* 800F3ED0 000EEDD0  38 C0 00 01 */	li r6, 1
/* 800F3ED4 000EEDD4  90 01 00 24 */	stw r0, 0x24(r1)
/* 800F3ED8 000EEDD8  38 80 00 00 */	li r4, 0
/* 800F3EDC 000EEDDC  38 A0 00 10 */	li r5, 0x10
/* 800F3EE0 000EEDE0  38 00 FF FF */	li r0, -1
/* 800F3EE4 000EEDE4  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 800F3EE8 000EEDE8  3F E0 80 42 */	lis r31, DefaultThread@ha
/* 800F3EEC 000EEDEC  3B FF 01 F8 */	addi r31, r31, DefaultThread@l
/* 800F3EF0 000EEDF0  93 C1 00 18 */	stw r30, 0x18(r1)
/* 800F3EF4 000EEDF4  3B DF 00 00 */	addi r30, r31, 0
/* 800F3EF8 000EEDF8  93 A1 00 14 */	stw r29, 0x14(r1)
/* 800F3EFC 000EEDFC  3F A0 80 00 */	lis r29, 0x800000D8@ha
/* 800F3F00 000EEE00  B0 7E 02 C8 */	sth r3, 0x2c8(r30)
/* 800F3F04 000EEE04  7F C3 F3 78 */	mr r3, r30
/* 800F3F08 000EEE08  B0 DE 02 CA */	sth r6, 0x2ca(r30)
/* 800F3F0C 000EEE0C  90 BE 02 D4 */	stw r5, 0x2d4(r30)
/* 800F3F10 000EEE10  90 BE 02 D0 */	stw r5, 0x2d0(r30)
/* 800F3F14 000EEE14  90 9E 02 CC */	stw r4, 0x2cc(r30)
/* 800F3F18 000EEE18  90 1E 02 D8 */	stw r0, 0x2d8(r30)
/* 800F3F1C 000EEE1C  90 9E 02 F0 */	stw r4, 0x2f0(r30)
/* 800F3F20 000EEE20  90 9E 02 EC */	stw r4, 0x2ec(r30)
/* 800F3F24 000EEE24  90 9E 02 E8 */	stw r4, 0x2e8(r30)
/* 800F3F28 000EEE28  90 9E 02 F8 */	stw r4, 0x2f8(r30)
/* 800F3F2C 000EEE2C  90 9E 02 F4 */	stw r4, 0x2f4(r30)
/* 800F3F30 000EEE30  93 DD 00 D8 */	stw r30, 0x800000D8@l(r29)
/* 800F3F34 000EEE34  4B FF AC 69 */	bl OSClearContext
/* 800F3F38 000EEE38  7F C3 F3 78 */	mr r3, r30
/* 800F3F3C 000EEE3C  4B FF AA 39 */	bl OSSetCurrentContext
/* 800F3F40 000EEE40  3C 80 80 4D */	lis r4, 0x804D6A20@ha
/* 800F3F44 000EEE44  3C A0 80 4C */	lis r5, 0x804C6A1C@ha
/* 800F3F48 000EEE48  38 84 6A 20 */	addi r4, r4, 0x804D6A20@l
/* 800F3F4C 000EEE4C  3C 60 DE AE */	lis r3, 0xDEADBABE@ha
/* 800F3F50 000EEE50  38 A5 6A 1C */	addi r5, r5, 0x804C6A1C@l
/* 800F3F54 000EEE54  90 9E 03 04 */	stw r4, 0x304(r30)
/* 800F3F58 000EEE58  38 03 BA BE */	addi r0, r3, 0xDEADBABE@l
/* 800F3F5C 000EEE5C  7F C4 F3 78 */	mr r4, r30
/* 800F3F60 000EEE60  90 BE 03 08 */	stw r5, 0x308(r30)
/* 800F3F64 000EEE64  90 05 00 00 */	stw r0, 0(r5)
/* 800F3F68 000EEE68  81 8D 83 90 */	lwz r12, SwitchThreadCallback-_SDA_BASE_(r13)
/* 800F3F6C 000EEE6C  80 7D 00 E4 */	lwz r3, 0xe4(r29)
/* 800F3F70 000EEE70  7D 89 03 A6 */	mtctr r12
/* 800F3F74 000EEE74  4E 80 04 21 */	bctrl 
/* 800F3F78 000EEE78  93 DD 00 E4 */	stw r30, 0xe4(r29)
/* 800F3F7C 000EEE7C  4B FF AB B9 */	bl OSGetStackPointer
/* 800F3F80 000EEE80  80 9D 00 E4 */	lwz r4, 0xe4(r29)
/* 800F3F84 000EEE84  80 84 03 08 */	lwz r4, 0x308(r4)
/* 800F3F88 000EEE88  39 04 00 04 */	addi r8, r4, 4
/* 800F3F8C 000EEE8C  7C 88 18 40 */	cmplw cr1, r8, r3
/* 800F3F90 000EEE90  40 84 00 C0 */	bge cr1, lbl_800F4050
/* 800F3F94 000EEE94  7C A8 18 50 */	subf r5, r8, r3
/* 800F3F98 000EEE98  38 C3 FF E0 */	addi r6, r3, -32
/* 800F3F9C 000EEE9C  38 85 00 03 */	addi r4, r5, 3
/* 800F3FA0 000EEEA0  7C 80 16 70 */	srawi r0, r4, 2
/* 800F3FA4 000EEEA4  7C 00 01 94 */	addze r0, r0
/* 800F3FA8 000EEEA8  2C 00 00 08 */	cmpwi r0, 8
/* 800F3FAC 000EEEAC  40 81 00 7C */	ble lbl_800F4028
/* 800F3FB0 000EEEB0  38 E0 00 00 */	li r7, 0
/* 800F3FB4 000EEEB4  41 85 00 28 */	bgt cr1, lbl_800F3FDC
/* 800F3FB8 000EEEB8  54 A0 00 01 */	rlwinm. r0, r5, 0, 0, 0
/* 800F3FBC 000EEEBC  38 A0 00 01 */	li r5, 1
/* 800F3FC0 000EEEC0  40 82 00 10 */	bne lbl_800F3FD0
/* 800F3FC4 000EEEC4  54 80 00 01 */	rlwinm. r0, r4, 0, 0, 0
/* 800F3FC8 000EEEC8  41 82 00 08 */	beq lbl_800F3FD0
/* 800F3FCC 000EEECC  38 A0 00 00 */	li r5, 0
lbl_800F3FD0:
/* 800F3FD0 000EEED0  2C 05 00 00 */	cmpwi r5, 0
/* 800F3FD4 000EEED4  41 82 00 08 */	beq lbl_800F3FDC
/* 800F3FD8 000EEED8  38 E0 00 01 */	li r7, 1
lbl_800F3FDC:
/* 800F3FDC 000EEEDC  2C 07 00 00 */	cmpwi r7, 0
/* 800F3FE0 000EEEE0  41 82 00 48 */	beq lbl_800F4028
/* 800F3FE4 000EEEE4  38 06 00 1F */	addi r0, r6, 0x1f
/* 800F3FE8 000EEEE8  38 80 00 00 */	li r4, 0
/* 800F3FEC 000EEEEC  7C 08 00 50 */	subf r0, r8, r0
/* 800F3FF0 000EEEF0  54 00 D9 7E */	srwi r0, r0, 5
/* 800F3FF4 000EEEF4  7C 09 03 A6 */	mtctr r0
/* 800F3FF8 000EEEF8  7C 08 30 40 */	cmplw r8, r6
/* 800F3FFC 000EEEFC  40 80 00 2C */	bge lbl_800F4028
lbl_800F4000:
/* 800F4000 000EEF00  90 88 00 00 */	stw r4, 0(r8)
/* 800F4004 000EEF04  90 88 00 04 */	stw r4, 4(r8)
/* 800F4008 000EEF08  90 88 00 08 */	stw r4, 8(r8)
/* 800F400C 000EEF0C  90 88 00 0C */	stw r4, 0xc(r8)
/* 800F4010 000EEF10  90 88 00 10 */	stw r4, 0x10(r8)
/* 800F4014 000EEF14  90 88 00 14 */	stw r4, 0x14(r8)
/* 800F4018 000EEF18  90 88 00 18 */	stw r4, 0x18(r8)
/* 800F401C 000EEF1C  90 88 00 1C */	stw r4, 0x1c(r8)
/* 800F4020 000EEF20  39 08 00 20 */	addi r8, r8, 0x20
/* 800F4024 000EEF24  42 00 FF DC */	bdnz lbl_800F4000
lbl_800F4028:
/* 800F4028 000EEF28  38 03 00 03 */	addi r0, r3, 3
/* 800F402C 000EEF2C  38 80 00 00 */	li r4, 0
/* 800F4030 000EEF30  7C 08 00 50 */	subf r0, r8, r0
/* 800F4034 000EEF34  54 00 F0 BE */	srwi r0, r0, 2
/* 800F4038 000EEF38  7C 09 03 A6 */	mtctr r0
/* 800F403C 000EEF3C  7C 08 18 40 */	cmplw r8, r3
/* 800F4040 000EEF40  40 80 00 10 */	bge lbl_800F4050
lbl_800F4044:
/* 800F4044 000EEF44  90 88 00 00 */	stw r4, 0(r8)
/* 800F4048 000EEF48  39 08 00 04 */	addi r8, r8, 4
/* 800F404C 000EEF4C  42 00 FF F8 */	bdnz lbl_800F4044
lbl_800F4050:
/* 800F4050 000EEF50  38 60 00 00 */	li r3, 0
/* 800F4054 000EEF54  38 00 00 02 */	li r0, 2
/* 800F4058 000EEF58  90 6D 9C 30 */	stw r3, RunQueueBits-_SDA_BASE_(r13)
/* 800F405C 000EEF5C  38 9F 03 18 */	addi r4, r31, 0x318
/* 800F4060 000EEF60  90 6D 9C 2C */	stw r3, RunQueueHint-_SDA_BASE_(r13)
/* 800F4064 000EEF64  7C 09 03 A6 */	mtctr r0
lbl_800F4068:
/* 800F4068 000EEF68  90 64 00 04 */	stw r3, 4(r4)
/* 800F406C 000EEF6C  90 64 00 00 */	stw r3, 0(r4)
/* 800F4070 000EEF70  90 64 00 0C */	stw r3, 0xc(r4)
/* 800F4074 000EEF74  90 64 00 08 */	stw r3, 8(r4)
/* 800F4078 000EEF78  90 64 00 14 */	stw r3, 0x14(r4)
/* 800F407C 000EEF7C  90 64 00 10 */	stw r3, 0x10(r4)
/* 800F4080 000EEF80  90 64 00 1C */	stw r3, 0x1c(r4)
/* 800F4084 000EEF84  90 64 00 18 */	stw r3, 0x18(r4)
/* 800F4088 000EEF88  90 64 00 24 */	stw r3, 0x24(r4)
/* 800F408C 000EEF8C  90 64 00 20 */	stw r3, 0x20(r4)
/* 800F4090 000EEF90  90 64 00 2C */	stw r3, 0x2c(r4)
/* 800F4094 000EEF94  90 64 00 28 */	stw r3, 0x28(r4)
/* 800F4098 000EEF98  90 64 00 34 */	stw r3, 0x34(r4)
/* 800F409C 000EEF9C  90 64 00 30 */	stw r3, 0x30(r4)
/* 800F40A0 000EEFA0  90 64 00 3C */	stw r3, 0x3c(r4)
/* 800F40A4 000EEFA4  90 64 00 38 */	stw r3, 0x38(r4)
/* 800F40A8 000EEFA8  90 64 00 44 */	stw r3, 0x44(r4)
/* 800F40AC 000EEFAC  90 64 00 40 */	stw r3, 0x40(r4)
/* 800F40B0 000EEFB0  90 64 00 4C */	stw r3, 0x4c(r4)
/* 800F40B4 000EEFB4  90 64 00 48 */	stw r3, 0x48(r4)
/* 800F40B8 000EEFB8  90 64 00 54 */	stw r3, 0x54(r4)
/* 800F40BC 000EEFBC  90 64 00 50 */	stw r3, 0x50(r4)
/* 800F40C0 000EEFC0  90 64 00 5C */	stw r3, 0x5c(r4)
/* 800F40C4 000EEFC4  90 64 00 58 */	stw r3, 0x58(r4)
/* 800F40C8 000EEFC8  90 64 00 64 */	stw r3, 0x64(r4)
/* 800F40CC 000EEFCC  90 64 00 60 */	stw r3, 0x60(r4)
/* 800F40D0 000EEFD0  90 64 00 6C */	stw r3, 0x6c(r4)
/* 800F40D4 000EEFD4  90 64 00 68 */	stw r3, 0x68(r4)
/* 800F40D8 000EEFD8  90 64 00 74 */	stw r3, 0x74(r4)
/* 800F40DC 000EEFDC  90 64 00 70 */	stw r3, 0x70(r4)
/* 800F40E0 000EEFE0  90 64 00 7C */	stw r3, 0x7c(r4)
/* 800F40E4 000EEFE4  90 64 00 78 */	stw r3, 0x78(r4)
/* 800F40E8 000EEFE8  38 84 00 80 */	addi r4, r4, 0x80
/* 800F40EC 000EEFEC  42 00 FF 7C */	bdnz lbl_800F4068
/* 800F40F0 000EEFF0  38 80 00 00 */	li r4, 0
/* 800F40F4 000EEFF4  3C 60 80 00 */	lis r3, 0x800000E0@ha
/* 800F40F8 000EEFF8  90 83 00 E0 */	stw r4, 0x800000E0@l(r3)
/* 800F40FC 000EEFFC  90 83 00 DC */	stw r4, 0xdc(r3)
/* 800F4100 000EF000  93 C3 00 DC */	stw r30, 0xdc(r3)
/* 800F4104 000EF004  48 00 00 08 */	b lbl_800F410C
/* 800F4108 000EF008  93 C4 02 FC */	stw r30, 0x2fc(r4)
lbl_800F410C:
/* 800F410C 000EF00C  3B A0 00 00 */	li r29, 0
/* 800F4110 000EF010  90 9E 03 00 */	stw r4, 0x300(r30)
/* 800F4114 000EF014  3C 80 80 00 */	lis r4, 0x800000E0@ha
/* 800F4118 000EF018  38 7F 04 18 */	addi r3, r31, 0x418
/* 800F411C 000EF01C  93 BE 02 FC */	stw r29, 0x2fc(r30)
/* 800F4120 000EF020  93 C4 00 E0 */	stw r30, 0x800000E0@l(r4)
/* 800F4124 000EF024  4B FF AA 79 */	bl OSClearContext
/* 800F4128 000EF028  93 AD 9C 28 */	stw r29, Reschedule-_SDA_BASE_(r13)
/* 800F412C 000EF02C  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800F4130 000EF030  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 800F4134 000EF034  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 800F4138 000EF038  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 800F413C 000EF03C  7C 08 03 A6 */	mtlr r0
/* 800F4140 000EF040  38 21 00 20 */	addi r1, r1, 0x20
/* 800F4144 000EF044  4E 80 00 20 */	blr 

.global OSInitThreadQueue
OSInitThreadQueue:
/* 800F4148 000EF048  38 00 00 00 */	li r0, 0
/* 800F414C 000EF04C  90 03 00 04 */	stw r0, 4(r3)
/* 800F4150 000EF050  90 03 00 00 */	stw r0, 0(r3)
/* 800F4154 000EF054  4E 80 00 20 */	blr 

.global OSGetCurrentThread
OSGetCurrentThread:
/* 800F4158 000EF058  3C 60 80 00 */	lis r3, 0x800000E4@ha
/* 800F415C 000EF05C  80 63 00 E4 */	lwz r3, 0x800000E4@l(r3)
/* 800F4160 000EF060  4E 80 00 20 */	blr 

.global OSIsThreadTerminated
OSIsThreadTerminated:
/* 800F4164 000EF064  A0 03 02 C8 */	lhz r0, 0x2c8(r3)
/* 800F4168 000EF068  38 60 00 01 */	li r3, 1
/* 800F416C 000EF06C  28 00 00 08 */	cmplwi r0, 8
/* 800F4170 000EF070  41 82 00 10 */	beq lbl_800F4180
/* 800F4174 000EF074  2C 00 00 00 */	cmpwi r0, 0
/* 800F4178 000EF078  41 82 00 08 */	beq lbl_800F4180
/* 800F417C 000EF07C  38 60 00 00 */	li r3, 0
lbl_800F4180:
/* 800F4180 000EF080  7C 03 00 D0 */	neg r0, r3
/* 800F4184 000EF084  7C 00 1B 78 */	or r0, r0, r3
/* 800F4188 000EF088  54 03 0F FE */	srwi r3, r0, 0x1f
/* 800F418C 000EF08C  4E 80 00 20 */	blr 

.global OSDisableScheduler
OSDisableScheduler:
/* 800F4190 000EF090  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800F4194 000EF094  7C 08 02 A6 */	mflr r0
/* 800F4198 000EF098  90 01 00 14 */	stw r0, 0x14(r1)
/* 800F419C 000EF09C  93 E1 00 0C */	stw r31, 0xc(r1)
/* 800F41A0 000EF0A0  4B FF D7 21 */	bl OSDisableInterrupts
/* 800F41A4 000EF0A4  83 ED 9C 28 */	lwz r31, Reschedule-_SDA_BASE_(r13)
/* 800F41A8 000EF0A8  38 1F 00 01 */	addi r0, r31, 1
/* 800F41AC 000EF0AC  90 0D 9C 28 */	stw r0, Reschedule-_SDA_BASE_(r13)
/* 800F41B0 000EF0B0  4B FF D7 39 */	bl OSRestoreInterrupts
/* 800F41B4 000EF0B4  7F E3 FB 78 */	mr r3, r31
/* 800F41B8 000EF0B8  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 800F41BC 000EF0BC  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800F41C0 000EF0C0  7C 08 03 A6 */	mtlr r0
/* 800F41C4 000EF0C4  38 21 00 10 */	addi r1, r1, 0x10
/* 800F41C8 000EF0C8  4E 80 00 20 */	blr 

.global OSEnableScheduler
OSEnableScheduler:
/* 800F41CC 000EF0CC  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800F41D0 000EF0D0  7C 08 02 A6 */	mflr r0
/* 800F41D4 000EF0D4  90 01 00 14 */	stw r0, 0x14(r1)
/* 800F41D8 000EF0D8  93 E1 00 0C */	stw r31, 0xc(r1)
/* 800F41DC 000EF0DC  4B FF D6 E5 */	bl OSDisableInterrupts
/* 800F41E0 000EF0E0  83 ED 9C 28 */	lwz r31, Reschedule-_SDA_BASE_(r13)
/* 800F41E4 000EF0E4  38 1F FF FF */	addi r0, r31, -1
/* 800F41E8 000EF0E8  90 0D 9C 28 */	stw r0, Reschedule-_SDA_BASE_(r13)
/* 800F41EC 000EF0EC  4B FF D6 FD */	bl OSRestoreInterrupts
/* 800F41F0 000EF0F0  7F E3 FB 78 */	mr r3, r31
/* 800F41F4 000EF0F4  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 800F41F8 000EF0F8  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800F41FC 000EF0FC  7C 08 03 A6 */	mtlr r0
/* 800F4200 000EF100  38 21 00 10 */	addi r1, r1, 0x10
/* 800F4204 000EF104  4E 80 00 20 */	blr 

UnsetRun:
/* 800F4208 000EF108  80 A3 02 E0 */	lwz r5, 0x2e0(r3)
/* 800F420C 000EF10C  80 83 02 DC */	lwz r4, 0x2dc(r3)
/* 800F4210 000EF110  2C 05 00 00 */	cmpwi r5, 0
/* 800F4214 000EF114  80 C3 02 E4 */	lwz r6, 0x2e4(r3)
/* 800F4218 000EF118  40 82 00 0C */	bne lbl_800F4224
/* 800F421C 000EF11C  90 C4 00 04 */	stw r6, 4(r4)
/* 800F4220 000EF120  48 00 00 08 */	b lbl_800F4228
lbl_800F4224:
/* 800F4224 000EF124  90 C5 02 E4 */	stw r6, 0x2e4(r5)
lbl_800F4228:
/* 800F4228 000EF128  2C 06 00 00 */	cmpwi r6, 0
/* 800F422C 000EF12C  40 82 00 0C */	bne lbl_800F4238
/* 800F4230 000EF130  90 A4 00 00 */	stw r5, 0(r4)
/* 800F4234 000EF134  48 00 00 08 */	b lbl_800F423C
lbl_800F4238:
/* 800F4238 000EF138  90 A6 02 E0 */	stw r5, 0x2e0(r6)
lbl_800F423C:
/* 800F423C 000EF13C  80 04 00 00 */	lwz r0, 0(r4)
/* 800F4240 000EF140  2C 00 00 00 */	cmpwi r0, 0
/* 800F4244 000EF144  40 82 00 20 */	bne lbl_800F4264
/* 800F4248 000EF148  80 03 02 D0 */	lwz r0, 0x2d0(r3)
/* 800F424C 000EF14C  38 80 00 01 */	li r4, 1
/* 800F4250 000EF150  80 AD 9C 30 */	lwz r5, RunQueueBits-_SDA_BASE_(r13)
/* 800F4254 000EF154  20 00 00 1F */	subfic r0, r0, 0x1f
/* 800F4258 000EF158  7C 80 00 30 */	slw r0, r4, r0
/* 800F425C 000EF15C  7C A0 00 78 */	andc r0, r5, r0
/* 800F4260 000EF160  90 0D 9C 30 */	stw r0, RunQueueBits-_SDA_BASE_(r13)
lbl_800F4264:
/* 800F4264 000EF164  38 00 00 00 */	li r0, 0
/* 800F4268 000EF168  90 03 02 DC */	stw r0, 0x2dc(r3)
/* 800F426C 000EF16C  4E 80 00 20 */	blr 

.global __OSGetEffectivePriority
__OSGetEffectivePriority:
/* 800F4270 000EF170  80 83 02 D4 */	lwz r4, 0x2d4(r3)
/* 800F4274 000EF174  80 63 02 F4 */	lwz r3, 0x2f4(r3)
/* 800F4278 000EF178  48 00 00 24 */	b lbl_800F429C
lbl_800F427C:
/* 800F427C 000EF17C  80 A3 00 00 */	lwz r5, 0(r3)
/* 800F4280 000EF180  2C 05 00 00 */	cmpwi r5, 0
/* 800F4284 000EF184  41 82 00 14 */	beq lbl_800F4298
/* 800F4288 000EF188  80 05 02 D0 */	lwz r0, 0x2d0(r5)
/* 800F428C 000EF18C  7C 00 20 00 */	cmpw r0, r4
/* 800F4290 000EF190  40 80 00 08 */	bge lbl_800F4298
/* 800F4294 000EF194  7C 04 03 78 */	mr r4, r0
lbl_800F4298:
/* 800F4298 000EF198  80 63 00 10 */	lwz r3, 0x10(r3)
lbl_800F429C:
/* 800F429C 000EF19C  2C 03 00 00 */	cmpwi r3, 0
/* 800F42A0 000EF1A0  40 82 FF DC */	bne lbl_800F427C
/* 800F42A4 000EF1A4  7C 83 23 78 */	mr r3, r4
/* 800F42A8 000EF1A8  4E 80 00 20 */	blr 

SetEffectivePriority:
/* 800F42AC 000EF1AC  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800F42B0 000EF1B0  7C 08 02 A6 */	mflr r0
/* 800F42B4 000EF1B4  90 01 00 14 */	stw r0, 0x14(r1)
/* 800F42B8 000EF1B8  93 E1 00 0C */	stw r31, 0xc(r1)
/* 800F42BC 000EF1BC  7C 9F 23 78 */	mr r31, r4
/* 800F42C0 000EF1C0  93 C1 00 08 */	stw r30, 8(r1)
/* 800F42C4 000EF1C4  7C 7E 1B 78 */	mr r30, r3
/* 800F42C8 000EF1C8  A0 03 02 C8 */	lhz r0, 0x2c8(r3)
/* 800F42CC 000EF1CC  2C 00 00 03 */	cmpwi r0, 3
/* 800F42D0 000EF1D0  41 82 01 74 */	beq lbl_800F4444
/* 800F42D4 000EF1D4  40 80 00 14 */	bge lbl_800F42E8
/* 800F42D8 000EF1D8  2C 00 00 01 */	cmpwi r0, 1
/* 800F42DC 000EF1DC  41 82 00 18 */	beq lbl_800F42F4
/* 800F42E0 000EF1E0  40 80 01 58 */	bge lbl_800F4438
/* 800F42E4 000EF1E4  48 00 01 60 */	b lbl_800F4444
lbl_800F42E8:
/* 800F42E8 000EF1E8  2C 00 00 05 */	cmpwi r0, 5
/* 800F42EC 000EF1EC  40 80 01 58 */	bge lbl_800F4444
/* 800F42F0 000EF1F0  48 00 00 70 */	b lbl_800F4360
lbl_800F42F4:
/* 800F42F4 000EF1F4  4B FF FF 15 */	bl UnsetRun
/* 800F42F8 000EF1F8  3C 60 80 42 */	lis r3, RunQueue@ha
/* 800F42FC 000EF1FC  57 E0 18 38 */	slwi r0, r31, 3
/* 800F4300 000EF200  38 63 05 10 */	addi r3, r3, RunQueue@l
/* 800F4304 000EF204  93 FE 02 D0 */	stw r31, 0x2d0(r30)
/* 800F4308 000EF208  7C 63 02 14 */	add r3, r3, r0
/* 800F430C 000EF20C  90 7E 02 DC */	stw r3, 0x2dc(r30)
/* 800F4310 000EF210  80 83 00 04 */	lwz r4, 4(r3)
/* 800F4314 000EF214  2C 04 00 00 */	cmpwi r4, 0
/* 800F4318 000EF218  40 82 00 0C */	bne lbl_800F4324
/* 800F431C 000EF21C  93 C3 00 00 */	stw r30, 0(r3)
/* 800F4320 000EF220  48 00 00 08 */	b lbl_800F4328
lbl_800F4324:
/* 800F4324 000EF224  93 C4 02 E0 */	stw r30, 0x2e0(r4)
lbl_800F4328:
/* 800F4328 000EF228  38 00 00 00 */	li r0, 0
/* 800F432C 000EF22C  90 9E 02 E4 */	stw r4, 0x2e4(r30)
/* 800F4330 000EF230  80 9E 02 DC */	lwz r4, 0x2dc(r30)
/* 800F4334 000EF234  38 60 00 01 */	li r3, 1
/* 800F4338 000EF238  90 1E 02 E0 */	stw r0, 0x2e0(r30)
/* 800F433C 000EF23C  93 C4 00 04 */	stw r30, 4(r4)
/* 800F4340 000EF240  80 1E 02 D0 */	lwz r0, 0x2d0(r30)
/* 800F4344 000EF244  80 8D 9C 30 */	lwz r4, RunQueueBits-_SDA_BASE_(r13)
/* 800F4348 000EF248  20 00 00 1F */	subfic r0, r0, 0x1f
/* 800F434C 000EF24C  7C 60 00 30 */	slw r0, r3, r0
/* 800F4350 000EF250  7C 80 03 78 */	or r0, r4, r0
/* 800F4354 000EF254  90 0D 9C 30 */	stw r0, RunQueueBits-_SDA_BASE_(r13)
/* 800F4358 000EF258  90 6D 9C 2C */	stw r3, RunQueueHint-_SDA_BASE_(r13)
/* 800F435C 000EF25C  48 00 00 E8 */	b lbl_800F4444
lbl_800F4360:
/* 800F4360 000EF260  80 C3 02 E0 */	lwz r6, 0x2e0(r3)
/* 800F4364 000EF264  80 E3 02 E4 */	lwz r7, 0x2e4(r3)
/* 800F4368 000EF268  2C 06 00 00 */	cmpwi r6, 0
/* 800F436C 000EF26C  40 82 00 10 */	bne lbl_800F437C
/* 800F4370 000EF270  80 A3 02 DC */	lwz r5, 0x2dc(r3)
/* 800F4374 000EF274  90 E5 00 04 */	stw r7, 4(r5)
/* 800F4378 000EF278  48 00 00 08 */	b lbl_800F4380
lbl_800F437C:
/* 800F437C 000EF27C  90 E6 02 E4 */	stw r7, 0x2e4(r6)
lbl_800F4380:
/* 800F4380 000EF280  2C 07 00 00 */	cmpwi r7, 0
/* 800F4384 000EF284  40 82 00 10 */	bne lbl_800F4394
/* 800F4388 000EF288  80 A3 02 DC */	lwz r5, 0x2dc(r3)
/* 800F438C 000EF28C  90 C5 00 00 */	stw r6, 0(r5)
/* 800F4390 000EF290  48 00 00 08 */	b lbl_800F4398
lbl_800F4394:
/* 800F4394 000EF294  90 C7 02 E0 */	stw r6, 0x2e0(r7)
lbl_800F4398:
/* 800F4398 000EF298  90 83 02 D0 */	stw r4, 0x2d0(r3)
/* 800F439C 000EF29C  80 A3 02 DC */	lwz r5, 0x2dc(r3)
/* 800F43A0 000EF2A0  80 C5 00 00 */	lwz r6, 0(r5)
/* 800F43A4 000EF2A4  48 00 00 08 */	b lbl_800F43AC
lbl_800F43A8:
/* 800F43A8 000EF2A8  80 C6 02 E0 */	lwz r6, 0x2e0(r6)
lbl_800F43AC:
/* 800F43AC 000EF2AC  2C 06 00 00 */	cmpwi r6, 0
/* 800F43B0 000EF2B0  41 82 00 14 */	beq lbl_800F43C4
/* 800F43B4 000EF2B4  80 86 02 D0 */	lwz r4, 0x2d0(r6)
/* 800F43B8 000EF2B8  80 03 02 D0 */	lwz r0, 0x2d0(r3)
/* 800F43BC 000EF2BC  7C 04 00 00 */	cmpw r4, r0
/* 800F43C0 000EF2C0  40 81 FF E8 */	ble lbl_800F43A8
lbl_800F43C4:
/* 800F43C4 000EF2C4  2C 06 00 00 */	cmpwi r6, 0
/* 800F43C8 000EF2C8  40 82 00 34 */	bne lbl_800F43FC
/* 800F43CC 000EF2CC  80 85 00 04 */	lwz r4, 4(r5)
/* 800F43D0 000EF2D0  2C 04 00 00 */	cmpwi r4, 0
/* 800F43D4 000EF2D4  40 82 00 0C */	bne lbl_800F43E0
/* 800F43D8 000EF2D8  90 65 00 00 */	stw r3, 0(r5)
/* 800F43DC 000EF2DC  48 00 00 08 */	b lbl_800F43E4
lbl_800F43E0:
/* 800F43E0 000EF2E0  90 64 02 E0 */	stw r3, 0x2e0(r4)
lbl_800F43E4:
/* 800F43E4 000EF2E4  38 00 00 00 */	li r0, 0
/* 800F43E8 000EF2E8  90 83 02 E4 */	stw r4, 0x2e4(r3)
/* 800F43EC 000EF2EC  80 83 02 DC */	lwz r4, 0x2dc(r3)
/* 800F43F0 000EF2F0  90 03 02 E0 */	stw r0, 0x2e0(r3)
/* 800F43F4 000EF2F4  90 64 00 04 */	stw r3, 4(r4)
/* 800F43F8 000EF2F8  48 00 00 2C */	b lbl_800F4424
lbl_800F43FC:
/* 800F43FC 000EF2FC  90 C3 02 E0 */	stw r6, 0x2e0(r3)
/* 800F4400 000EF300  80 86 02 E4 */	lwz r4, 0x2e4(r6)
/* 800F4404 000EF304  90 66 02 E4 */	stw r3, 0x2e4(r6)
/* 800F4408 000EF308  2C 04 00 00 */	cmpwi r4, 0
/* 800F440C 000EF30C  90 83 02 E4 */	stw r4, 0x2e4(r3)
/* 800F4410 000EF310  40 82 00 10 */	bne lbl_800F4420
/* 800F4414 000EF314  80 83 02 DC */	lwz r4, 0x2dc(r3)
/* 800F4418 000EF318  90 64 00 00 */	stw r3, 0(r4)
/* 800F441C 000EF31C  48 00 00 08 */	b lbl_800F4424
lbl_800F4420:
/* 800F4420 000EF320  90 64 02 E0 */	stw r3, 0x2e0(r4)
lbl_800F4424:
/* 800F4424 000EF324  80 63 02 F0 */	lwz r3, 0x2f0(r3)
/* 800F4428 000EF328  2C 03 00 00 */	cmpwi r3, 0
/* 800F442C 000EF32C  41 82 00 18 */	beq lbl_800F4444
/* 800F4430 000EF330  80 63 00 08 */	lwz r3, 8(r3)
/* 800F4434 000EF334  48 00 00 14 */	b lbl_800F4448
lbl_800F4438:
/* 800F4438 000EF338  38 00 00 01 */	li r0, 1
/* 800F443C 000EF33C  90 0D 9C 2C */	stw r0, RunQueueHint-_SDA_BASE_(r13)
/* 800F4440 000EF340  90 83 02 D0 */	stw r4, 0x2d0(r3)
lbl_800F4444:
/* 800F4444 000EF344  38 60 00 00 */	li r3, 0
lbl_800F4448:
/* 800F4448 000EF348  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800F444C 000EF34C  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 800F4450 000EF350  83 C1 00 08 */	lwz r30, 8(r1)
/* 800F4454 000EF354  7C 08 03 A6 */	mtlr r0
/* 800F4458 000EF358  38 21 00 10 */	addi r1, r1, 0x10
/* 800F445C 000EF35C  4E 80 00 20 */	blr 

.global __OSPromoteThread
__OSPromoteThread:
/* 800F4460 000EF360  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800F4464 000EF364  7C 08 02 A6 */	mflr r0
/* 800F4468 000EF368  90 01 00 14 */	stw r0, 0x14(r1)
/* 800F446C 000EF36C  93 E1 00 0C */	stw r31, 0xc(r1)
/* 800F4470 000EF370  7C 9F 23 78 */	mr r31, r4
lbl_800F4474:
/* 800F4474 000EF374  80 03 02 CC */	lwz r0, 0x2cc(r3)
/* 800F4478 000EF378  2C 00 00 00 */	cmpwi r0, 0
/* 800F447C 000EF37C  41 81 00 20 */	bgt lbl_800F449C
/* 800F4480 000EF380  80 03 02 D0 */	lwz r0, 0x2d0(r3)
/* 800F4484 000EF384  7C 00 F8 00 */	cmpw r0, r31
/* 800F4488 000EF388  40 81 00 14 */	ble lbl_800F449C
/* 800F448C 000EF38C  7F E4 FB 78 */	mr r4, r31
/* 800F4490 000EF390  4B FF FE 1D */	bl SetEffectivePriority
/* 800F4494 000EF394  2C 03 00 00 */	cmpwi r3, 0
/* 800F4498 000EF398  40 82 FF DC */	bne lbl_800F4474
lbl_800F449C:
/* 800F449C 000EF39C  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800F44A0 000EF3A0  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 800F44A4 000EF3A4  7C 08 03 A6 */	mtlr r0
/* 800F44A8 000EF3A8  38 21 00 10 */	addi r1, r1, 0x10
/* 800F44AC 000EF3AC  4E 80 00 20 */	blr 

SelectThread:
/* 800F44B0 000EF3B0  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800F44B4 000EF3B4  7C 08 02 A6 */	mflr r0
/* 800F44B8 000EF3B8  90 01 00 14 */	stw r0, 0x14(r1)
/* 800F44BC 000EF3BC  93 E1 00 0C */	stw r31, 0xc(r1)
/* 800F44C0 000EF3C0  93 C1 00 08 */	stw r30, 8(r1)
/* 800F44C4 000EF3C4  7C 7E 1B 78 */	mr r30, r3
/* 800F44C8 000EF3C8  80 0D 9C 28 */	lwz r0, Reschedule-_SDA_BASE_(r13)
/* 800F44CC 000EF3CC  2C 00 00 00 */	cmpwi r0, 0
/* 800F44D0 000EF3D0  40 81 00 0C */	ble lbl_800F44DC
/* 800F44D4 000EF3D4  38 60 00 00 */	li r3, 0
/* 800F44D8 000EF3D8  48 00 01 E8 */	b lbl_800F46C0
lbl_800F44DC:
/* 800F44DC 000EF3DC  4B FF A4 F5 */	bl OSGetCurrentContext
/* 800F44E0 000EF3E0  3C 80 80 00 */	lis r4, 0x800000E4@ha
/* 800F44E4 000EF3E4  80 A4 00 E4 */	lwz r5, 0x800000E4@l(r4)
/* 800F44E8 000EF3E8  7C 03 28 40 */	cmplw r3, r5
/* 800F44EC 000EF3EC  41 82 00 0C */	beq lbl_800F44F8
/* 800F44F0 000EF3F0  38 60 00 00 */	li r3, 0
/* 800F44F4 000EF3F4  48 00 01 CC */	b lbl_800F46C0
lbl_800F44F8:
/* 800F44F8 000EF3F8  2C 05 00 00 */	cmpwi r5, 0
/* 800F44FC 000EF3FC  41 82 00 C4 */	beq lbl_800F45C0
/* 800F4500 000EF400  A0 05 02 C8 */	lhz r0, 0x2c8(r5)
/* 800F4504 000EF404  28 00 00 02 */	cmplwi r0, 2
/* 800F4508 000EF408  40 82 00 94 */	bne lbl_800F459C
/* 800F450C 000EF40C  2C 1E 00 00 */	cmpwi r30, 0
/* 800F4510 000EF410  40 82 00 20 */	bne lbl_800F4530
/* 800F4514 000EF414  80 6D 9C 30 */	lwz r3, RunQueueBits-_SDA_BASE_(r13)
/* 800F4518 000EF418  80 05 02 D0 */	lwz r0, 0x2d0(r5)
/* 800F451C 000EF41C  7C 63 00 34 */	cntlzw r3, r3
/* 800F4520 000EF420  7C 00 18 00 */	cmpw r0, r3
/* 800F4524 000EF424  41 81 00 0C */	bgt lbl_800F4530
/* 800F4528 000EF428  38 60 00 00 */	li r3, 0
/* 800F452C 000EF42C  48 00 01 94 */	b lbl_800F46C0
lbl_800F4530:
/* 800F4530 000EF430  38 00 00 01 */	li r0, 1
/* 800F4534 000EF434  3C 60 80 42 */	lis r3, RunQueue@ha
/* 800F4538 000EF438  B0 05 02 C8 */	sth r0, 0x2c8(r5)
/* 800F453C 000EF43C  38 63 05 10 */	addi r3, r3, RunQueue@l
/* 800F4540 000EF440  80 05 02 D0 */	lwz r0, 0x2d0(r5)
/* 800F4544 000EF444  54 00 18 38 */	slwi r0, r0, 3
/* 800F4548 000EF448  7C 63 02 14 */	add r3, r3, r0
/* 800F454C 000EF44C  90 65 02 DC */	stw r3, 0x2dc(r5)
/* 800F4550 000EF450  80 83 00 04 */	lwz r4, 4(r3)
/* 800F4554 000EF454  2C 04 00 00 */	cmpwi r4, 0
/* 800F4558 000EF458  40 82 00 0C */	bne lbl_800F4564
/* 800F455C 000EF45C  90 A3 00 00 */	stw r5, 0(r3)
/* 800F4560 000EF460  48 00 00 08 */	b lbl_800F4568
lbl_800F4564:
/* 800F4564 000EF464  90 A4 02 E0 */	stw r5, 0x2e0(r4)
lbl_800F4568:
/* 800F4568 000EF468  90 85 02 E4 */	stw r4, 0x2e4(r5)
/* 800F456C 000EF46C  38 00 00 00 */	li r0, 0
/* 800F4570 000EF470  38 60 00 01 */	li r3, 1
/* 800F4574 000EF474  90 05 02 E0 */	stw r0, 0x2e0(r5)
/* 800F4578 000EF478  80 85 02 DC */	lwz r4, 0x2dc(r5)
/* 800F457C 000EF47C  90 A4 00 04 */	stw r5, 4(r4)
/* 800F4580 000EF480  80 05 02 D0 */	lwz r0, 0x2d0(r5)
/* 800F4584 000EF484  80 8D 9C 30 */	lwz r4, RunQueueBits-_SDA_BASE_(r13)
/* 800F4588 000EF488  20 00 00 1F */	subfic r0, r0, 0x1f
/* 800F458C 000EF48C  7C 60 00 30 */	slw r0, r3, r0
/* 800F4590 000EF490  7C 80 03 78 */	or r0, r4, r0
/* 800F4594 000EF494  90 0D 9C 30 */	stw r0, RunQueueBits-_SDA_BASE_(r13)
/* 800F4598 000EF498  90 6D 9C 2C */	stw r3, RunQueueHint-_SDA_BASE_(r13)
lbl_800F459C:
/* 800F459C 000EF49C  A0 05 01 A2 */	lhz r0, 0x1a2(r5)
/* 800F45A0 000EF4A0  54 00 07 BD */	rlwinm. r0, r0, 0, 0x1e, 0x1e
/* 800F45A4 000EF4A4  40 82 00 1C */	bne lbl_800F45C0
/* 800F45A8 000EF4A8  7C A3 2B 78 */	mr r3, r5
/* 800F45AC 000EF4AC  4B FF A4 31 */	bl OSSaveContext
/* 800F45B0 000EF4B0  2C 03 00 00 */	cmpwi r3, 0
/* 800F45B4 000EF4B4  41 82 00 0C */	beq lbl_800F45C0
/* 800F45B8 000EF4B8  38 60 00 00 */	li r3, 0
/* 800F45BC 000EF4BC  48 00 01 04 */	b lbl_800F46C0
lbl_800F45C0:
/* 800F45C0 000EF4C0  80 0D 9C 30 */	lwz r0, RunQueueBits-_SDA_BASE_(r13)
/* 800F45C4 000EF4C4  2C 00 00 00 */	cmpwi r0, 0
/* 800F45C8 000EF4C8  40 82 00 5C */	bne lbl_800F4624
/* 800F45CC 000EF4CC  81 8D 83 90 */	lwz r12, SwitchThreadCallback-_SDA_BASE_(r13)
/* 800F45D0 000EF4D0  3F E0 80 00 */	lis r31, 0x800000E4@ha
/* 800F45D4 000EF4D4  80 7F 00 E4 */	lwz r3, 0x800000E4@l(r31)
/* 800F45D8 000EF4D8  38 80 00 00 */	li r4, 0
/* 800F45DC 000EF4DC  7D 89 03 A6 */	mtctr r12
/* 800F45E0 000EF4E0  4E 80 04 21 */	bctrl 
/* 800F45E4 000EF4E4  38 00 00 00 */	li r0, 0
/* 800F45E8 000EF4E8  3C 60 80 42 */	lis r3, IdleContext@ha
/* 800F45EC 000EF4EC  90 1F 00 E4 */	stw r0, 0xe4(r31)
/* 800F45F0 000EF4F0  38 63 06 10 */	addi r3, r3, IdleContext@l
/* 800F45F4 000EF4F4  4B FF A3 81 */	bl OSSetCurrentContext
lbl_800F45F8:
/* 800F45F8 000EF4F8  4B FF D2 DD */	bl OSEnableInterrupts
lbl_800F45FC:
/* 800F45FC 000EF4FC  80 0D 9C 30 */	lwz r0, RunQueueBits-_SDA_BASE_(r13)
/* 800F4600 000EF500  2C 00 00 00 */	cmpwi r0, 0
/* 800F4604 000EF504  41 82 FF F8 */	beq lbl_800F45FC
/* 800F4608 000EF508  4B FF D2 B9 */	bl OSDisableInterrupts
/* 800F460C 000EF50C  80 0D 9C 30 */	lwz r0, RunQueueBits-_SDA_BASE_(r13)
/* 800F4610 000EF510  2C 00 00 00 */	cmpwi r0, 0
/* 800F4614 000EF514  41 82 FF E4 */	beq lbl_800F45F8
/* 800F4618 000EF518  3C 60 80 42 */	lis r3, IdleContext@ha
/* 800F461C 000EF51C  38 63 06 10 */	addi r3, r3, IdleContext@l
/* 800F4620 000EF520  4B FF A5 7D */	bl OSClearContext
lbl_800F4624:
/* 800F4624 000EF524  38 80 00 00 */	li r4, 0
/* 800F4628 000EF528  3C 60 80 42 */	lis r3, RunQueue@ha
/* 800F462C 000EF52C  90 8D 9C 2C */	stw r4, RunQueueHint-_SDA_BASE_(r13)
/* 800F4630 000EF530  38 63 05 10 */	addi r3, r3, RunQueue@l
/* 800F4634 000EF534  80 0D 9C 30 */	lwz r0, RunQueueBits-_SDA_BASE_(r13)
/* 800F4638 000EF538  7C 05 00 34 */	cntlzw r5, r0
/* 800F463C 000EF53C  54 A0 18 38 */	slwi r0, r5, 3
/* 800F4640 000EF540  7F C3 00 6E */	lwzux r30, r3, r0
/* 800F4644 000EF544  80 DE 02 E0 */	lwz r6, 0x2e0(r30)
/* 800F4648 000EF548  2C 06 00 00 */	cmpwi r6, 0
/* 800F464C 000EF54C  40 82 00 0C */	bne lbl_800F4658
/* 800F4650 000EF550  90 83 00 04 */	stw r4, 4(r3)
/* 800F4654 000EF554  48 00 00 08 */	b lbl_800F465C
lbl_800F4658:
/* 800F4658 000EF558  90 86 02 E4 */	stw r4, 0x2e4(r6)
lbl_800F465C:
/* 800F465C 000EF55C  2C 06 00 00 */	cmpwi r6, 0
/* 800F4660 000EF560  90 C3 00 00 */	stw r6, 0(r3)
/* 800F4664 000EF564  40 82 00 1C */	bne lbl_800F4680
/* 800F4668 000EF568  20 05 00 1F */	subfic r0, r5, 0x1f
/* 800F466C 000EF56C  38 60 00 01 */	li r3, 1
/* 800F4670 000EF570  80 8D 9C 30 */	lwz r4, RunQueueBits-_SDA_BASE_(r13)
/* 800F4674 000EF574  7C 60 00 30 */	slw r0, r3, r0
/* 800F4678 000EF578  7C 80 00 78 */	andc r0, r4, r0
/* 800F467C 000EF57C  90 0D 9C 30 */	stw r0, RunQueueBits-_SDA_BASE_(r13)
lbl_800F4680:
/* 800F4680 000EF580  38 60 00 00 */	li r3, 0
/* 800F4684 000EF584  38 00 00 02 */	li r0, 2
/* 800F4688 000EF588  90 7E 02 DC */	stw r3, 0x2dc(r30)
/* 800F468C 000EF58C  3F E0 80 00 */	lis r31, 0x800000E4@ha
/* 800F4690 000EF590  7F C4 F3 78 */	mr r4, r30
/* 800F4694 000EF594  B0 1E 02 C8 */	sth r0, 0x2c8(r30)
/* 800F4698 000EF598  81 8D 83 90 */	lwz r12, SwitchThreadCallback-_SDA_BASE_(r13)
/* 800F469C 000EF59C  80 7F 00 E4 */	lwz r3, 0x800000E4@l(r31)
/* 800F46A0 000EF5A0  7D 89 03 A6 */	mtctr r12
/* 800F46A4 000EF5A4  4E 80 04 21 */	bctrl 
/* 800F46A8 000EF5A8  93 DF 00 E4 */	stw r30, 0xe4(r31)
/* 800F46AC 000EF5AC  7F C3 F3 78 */	mr r3, r30
/* 800F46B0 000EF5B0  4B FF A2 C5 */	bl OSSetCurrentContext
/* 800F46B4 000EF5B4  7F C3 F3 78 */	mr r3, r30
/* 800F46B8 000EF5B8  4B FF A3 A5 */	bl OSLoadContext
/* 800F46BC 000EF5BC  7F C3 F3 78 */	mr r3, r30
lbl_800F46C0:
/* 800F46C0 000EF5C0  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800F46C4 000EF5C4  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 800F46C8 000EF5C8  83 C1 00 08 */	lwz r30, 8(r1)
/* 800F46CC 000EF5CC  7C 08 03 A6 */	mtlr r0
/* 800F46D0 000EF5D0  38 21 00 10 */	addi r1, r1, 0x10
/* 800F46D4 000EF5D4  4E 80 00 20 */	blr 

.global __OSReschedule
__OSReschedule:
/* 800F46D8 000EF5D8  80 0D 9C 2C */	lwz r0, RunQueueHint-_SDA_BASE_(r13)
/* 800F46DC 000EF5DC  2C 00 00 00 */	cmpwi r0, 0
/* 800F46E0 000EF5E0  4D 82 00 20 */	beqlr 
/* 800F46E4 000EF5E4  38 60 00 00 */	li r3, 0
/* 800F46E8 000EF5E8  4B FF FD C8 */	b SelectThread
/* 800F46EC 000EF5EC  4E 80 00 20 */	blr 

.global OSYieldThread
OSYieldThread:
/* 800F46F0 000EF5F0  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800F46F4 000EF5F4  7C 08 02 A6 */	mflr r0
/* 800F46F8 000EF5F8  90 01 00 14 */	stw r0, 0x14(r1)
/* 800F46FC 000EF5FC  93 E1 00 0C */	stw r31, 0xc(r1)
/* 800F4700 000EF600  4B FF D1 C1 */	bl OSDisableInterrupts
/* 800F4704 000EF604  7C 7F 1B 78 */	mr r31, r3
/* 800F4708 000EF608  38 60 00 01 */	li r3, 1
/* 800F470C 000EF60C  4B FF FD A5 */	bl SelectThread
/* 800F4710 000EF610  7F E3 FB 78 */	mr r3, r31
/* 800F4714 000EF614  4B FF D1 D5 */	bl OSRestoreInterrupts
/* 800F4718 000EF618  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800F471C 000EF61C  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 800F4720 000EF620  7C 08 03 A6 */	mtlr r0
/* 800F4724 000EF624  38 21 00 10 */	addi r1, r1, 0x10
/* 800F4728 000EF628  4E 80 00 20 */	blr 

.global OSCreateThread
OSCreateThread:
/* 800F472C 000EF62C  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800F4730 000EF630  7C 08 02 A6 */	mflr r0
/* 800F4734 000EF634  90 01 00 24 */	stw r0, 0x24(r1)
/* 800F4738 000EF638  39 61 00 20 */	addi r11, r1, 0x20
/* 800F473C 000EF63C  4B FB D6 05 */	bl _savegpr_26
/* 800F4740 000EF640  2C 08 00 00 */	cmpwi r8, 0
/* 800F4744 000EF644  7C 7F 1B 78 */	mr r31, r3
/* 800F4748 000EF648  7C BA 2B 78 */	mr r26, r5
/* 800F474C 000EF64C  7C DB 33 78 */	mr r27, r6
/* 800F4750 000EF650  7C FC 3B 78 */	mr r28, r7
/* 800F4754 000EF654  41 80 00 0C */	blt lbl_800F4760
/* 800F4758 000EF658  2C 08 00 1F */	cmpwi r8, 0x1f
/* 800F475C 000EF65C  40 81 00 0C */	ble lbl_800F4768
lbl_800F4760:
/* 800F4760 000EF660  38 60 00 00 */	li r3, 0
/* 800F4764 000EF664  48 00 02 1C */	b lbl_800F4980
lbl_800F4768:
/* 800F4768 000EF668  3B C0 00 00 */	li r30, 0
/* 800F476C 000EF66C  38 E0 00 01 */	li r7, 1
/* 800F4770 000EF670  55 20 07 FE */	clrlwi r0, r9, 0x1f
/* 800F4774 000EF674  3B A0 FF FF */	li r29, -1
/* 800F4778 000EF678  54 C6 00 38 */	rlwinm r6, r6, 0, 0, 0x1c
/* 800F477C 000EF67C  B0 E3 02 C8 */	sth r7, 0x2c8(r3)
/* 800F4780 000EF680  38 A6 FF F8 */	addi r5, r6, -8
/* 800F4784 000EF684  B0 03 02 CA */	sth r0, 0x2ca(r3)
/* 800F4788 000EF688  91 03 02 D4 */	stw r8, 0x2d4(r3)
/* 800F478C 000EF68C  91 03 02 D0 */	stw r8, 0x2d0(r3)
/* 800F4790 000EF690  90 E3 02 CC */	stw r7, 0x2cc(r3)
/* 800F4794 000EF694  93 A3 02 D8 */	stw r29, 0x2d8(r3)
/* 800F4798 000EF698  93 C3 02 F0 */	stw r30, 0x2f0(r3)
/* 800F479C 000EF69C  93 C3 02 EC */	stw r30, 0x2ec(r3)
/* 800F47A0 000EF6A0  93 C3 02 E8 */	stw r30, 0x2e8(r3)
/* 800F47A4 000EF6A4  93 C3 02 F8 */	stw r30, 0x2f8(r3)
/* 800F47A8 000EF6A8  93 C3 02 F4 */	stw r30, 0x2f4(r3)
/* 800F47AC 000EF6AC  93 C6 FF F8 */	stw r30, -8(r6)
/* 800F47B0 000EF6B0  93 C6 FF FC */	stw r30, -4(r6)
/* 800F47B4 000EF6B4  4B FF A4 0D */	bl OSInitContext
/* 800F47B8 000EF6B8  3C A0 80 0F */	lis r5, OSExitThread@ha
/* 800F47BC 000EF6BC  7C 9C D8 50 */	subf r4, r28, r27
/* 800F47C0 000EF6C0  38 A5 49 98 */	addi r5, r5, OSExitThread@l
/* 800F47C4 000EF6C4  3C 60 DE AE */	lis r3, 0xDEADBABE@ha
/* 800F47C8 000EF6C8  90 BF 00 84 */	stw r5, 0x84(r31)
/* 800F47CC 000EF6CC  38 03 BA BE */	addi r0, r3, 0xDEADBABE@l
/* 800F47D0 000EF6D0  93 5F 00 0C */	stw r26, 0xc(r31)
/* 800F47D4 000EF6D4  93 7F 03 04 */	stw r27, 0x304(r31)
/* 800F47D8 000EF6D8  90 9F 03 08 */	stw r4, 0x308(r31)
/* 800F47DC 000EF6DC  90 04 00 00 */	stw r0, 0(r4)
/* 800F47E0 000EF6E0  93 DF 03 0C */	stw r30, 0x30c(r31)
/* 800F47E4 000EF6E4  93 DF 03 10 */	stw r30, 0x310(r31)
/* 800F47E8 000EF6E8  93 DF 03 14 */	stw r30, 0x314(r31)
/* 800F47EC 000EF6EC  4B FF D0 D5 */	bl OSDisableInterrupts
/* 800F47F0 000EF6F0  3C 80 80 41 */	lis r4, __OSErrorTable@ha
/* 800F47F4 000EF6F4  38 84 41 50 */	addi r4, r4, __OSErrorTable@l
/* 800F47F8 000EF6F8  80 04 00 40 */	lwz r0, 0x40(r4)
/* 800F47FC 000EF6FC  2C 00 00 00 */	cmpwi r0, 0
/* 800F4800 000EF700  41 82 01 48 */	beq lbl_800F4948
/* 800F4804 000EF704  80 BF 01 9C */	lwz r5, 0x19c(r31)
/* 800F4808 000EF708  38 00 00 02 */	li r0, 2
/* 800F480C 000EF70C  A0 9F 01 A2 */	lhz r4, 0x1a2(r31)
/* 800F4810 000EF710  38 DF 00 90 */	addi r6, r31, 0x90
/* 800F4814 000EF714  60 A5 09 00 */	ori r5, r5, 0x900
/* 800F4818 000EF718  38 FF 01 C8 */	addi r7, r31, 0x1c8
/* 800F481C 000EF71C  60 84 00 01 */	ori r4, r4, 1
/* 800F4820 000EF720  90 BF 01 9C */	stw r5, 0x19c(r31)
/* 800F4824 000EF724  B0 9F 01 A2 */	sth r4, 0x1a2(r31)
/* 800F4828 000EF728  80 8D 83 70 */	lwz r4, __OSFpscrEnableBits-_SDA_BASE_(r13)
/* 800F482C 000EF72C  54 84 06 38 */	rlwinm r4, r4, 0, 0x18, 0x1c
/* 800F4830 000EF730  60 84 00 04 */	ori r4, r4, 4
/* 800F4834 000EF734  90 9F 01 94 */	stw r4, 0x194(r31)
/* 800F4838 000EF738  7C 09 03 A6 */	mtctr r0
lbl_800F483C:
/* 800F483C 000EF73C  93 A6 00 04 */	stw r29, 4(r6)
/* 800F4840 000EF740  93 A6 00 00 */	stw r29, 0(r6)
/* 800F4844 000EF744  93 A7 00 04 */	stw r29, 4(r7)
/* 800F4848 000EF748  93 A7 00 00 */	stw r29, 0(r7)
/* 800F484C 000EF74C  93 A6 00 0C */	stw r29, 0xc(r6)
/* 800F4850 000EF750  93 A6 00 08 */	stw r29, 8(r6)
/* 800F4854 000EF754  93 A7 00 0C */	stw r29, 0xc(r7)
/* 800F4858 000EF758  93 A7 00 08 */	stw r29, 8(r7)
/* 800F485C 000EF75C  93 A6 00 14 */	stw r29, 0x14(r6)
/* 800F4860 000EF760  93 A6 00 10 */	stw r29, 0x10(r6)
/* 800F4864 000EF764  93 A7 00 14 */	stw r29, 0x14(r7)
/* 800F4868 000EF768  93 A7 00 10 */	stw r29, 0x10(r7)
/* 800F486C 000EF76C  93 A6 00 1C */	stw r29, 0x1c(r6)
/* 800F4870 000EF770  93 A6 00 18 */	stw r29, 0x18(r6)
/* 800F4874 000EF774  93 A7 00 1C */	stw r29, 0x1c(r7)
/* 800F4878 000EF778  93 A7 00 18 */	stw r29, 0x18(r7)
/* 800F487C 000EF77C  93 A6 00 24 */	stw r29, 0x24(r6)
/* 800F4880 000EF780  93 A6 00 20 */	stw r29, 0x20(r6)
/* 800F4884 000EF784  93 A7 00 24 */	stw r29, 0x24(r7)
/* 800F4888 000EF788  93 A7 00 20 */	stw r29, 0x20(r7)
/* 800F488C 000EF78C  93 A6 00 2C */	stw r29, 0x2c(r6)
/* 800F4890 000EF790  93 A6 00 28 */	stw r29, 0x28(r6)
/* 800F4894 000EF794  93 A7 00 2C */	stw r29, 0x2c(r7)
/* 800F4898 000EF798  93 A7 00 28 */	stw r29, 0x28(r7)
/* 800F489C 000EF79C  93 A6 00 34 */	stw r29, 0x34(r6)
/* 800F48A0 000EF7A0  93 A6 00 30 */	stw r29, 0x30(r6)
/* 800F48A4 000EF7A4  93 A7 00 34 */	stw r29, 0x34(r7)
/* 800F48A8 000EF7A8  93 A7 00 30 */	stw r29, 0x30(r7)
/* 800F48AC 000EF7AC  93 A6 00 3C */	stw r29, 0x3c(r6)
/* 800F48B0 000EF7B0  93 A6 00 38 */	stw r29, 0x38(r6)
/* 800F48B4 000EF7B4  93 A7 00 3C */	stw r29, 0x3c(r7)
/* 800F48B8 000EF7B8  93 A7 00 38 */	stw r29, 0x38(r7)
/* 800F48BC 000EF7BC  93 A6 00 44 */	stw r29, 0x44(r6)
/* 800F48C0 000EF7C0  93 A6 00 40 */	stw r29, 0x40(r6)
/* 800F48C4 000EF7C4  93 A7 00 44 */	stw r29, 0x44(r7)
/* 800F48C8 000EF7C8  93 A7 00 40 */	stw r29, 0x40(r7)
/* 800F48CC 000EF7CC  93 A6 00 4C */	stw r29, 0x4c(r6)
/* 800F48D0 000EF7D0  93 A6 00 48 */	stw r29, 0x48(r6)
/* 800F48D4 000EF7D4  93 A7 00 4C */	stw r29, 0x4c(r7)
/* 800F48D8 000EF7D8  93 A7 00 48 */	stw r29, 0x48(r7)
/* 800F48DC 000EF7DC  93 A6 00 54 */	stw r29, 0x54(r6)
/* 800F48E0 000EF7E0  93 A6 00 50 */	stw r29, 0x50(r6)
/* 800F48E4 000EF7E4  93 A7 00 54 */	stw r29, 0x54(r7)
/* 800F48E8 000EF7E8  93 A7 00 50 */	stw r29, 0x50(r7)
/* 800F48EC 000EF7EC  93 A6 00 5C */	stw r29, 0x5c(r6)
/* 800F48F0 000EF7F0  93 A6 00 58 */	stw r29, 0x58(r6)
/* 800F48F4 000EF7F4  93 A7 00 5C */	stw r29, 0x5c(r7)
/* 800F48F8 000EF7F8  93 A7 00 58 */	stw r29, 0x58(r7)
/* 800F48FC 000EF7FC  93 A6 00 64 */	stw r29, 0x64(r6)
/* 800F4900 000EF800  93 A6 00 60 */	stw r29, 0x60(r6)
/* 800F4904 000EF804  93 A7 00 64 */	stw r29, 0x64(r7)
/* 800F4908 000EF808  93 A7 00 60 */	stw r29, 0x60(r7)
/* 800F490C 000EF80C  93 A6 00 6C */	stw r29, 0x6c(r6)
/* 800F4910 000EF810  93 A6 00 68 */	stw r29, 0x68(r6)
/* 800F4914 000EF814  93 A7 00 6C */	stw r29, 0x6c(r7)
/* 800F4918 000EF818  93 A7 00 68 */	stw r29, 0x68(r7)
/* 800F491C 000EF81C  93 A6 00 74 */	stw r29, 0x74(r6)
/* 800F4920 000EF820  93 A6 00 70 */	stw r29, 0x70(r6)
/* 800F4924 000EF824  93 A7 00 74 */	stw r29, 0x74(r7)
/* 800F4928 000EF828  93 A7 00 70 */	stw r29, 0x70(r7)
/* 800F492C 000EF82C  93 A6 00 7C */	stw r29, 0x7c(r6)
/* 800F4930 000EF830  93 A6 00 78 */	stw r29, 0x78(r6)
/* 800F4934 000EF834  38 C6 00 80 */	addi r6, r6, 0x80
/* 800F4938 000EF838  93 A7 00 7C */	stw r29, 0x7c(r7)
/* 800F493C 000EF83C  93 A7 00 78 */	stw r29, 0x78(r7)
/* 800F4940 000EF840  38 E7 00 80 */	addi r7, r7, 0x80
/* 800F4944 000EF844  42 00 FE F8 */	bdnz lbl_800F483C
lbl_800F4948:
/* 800F4948 000EF848  3C 80 80 00 */	lis r4, 0x800000E0@ha
/* 800F494C 000EF84C  80 A4 00 E0 */	lwz r5, 0x800000E0@l(r4)
/* 800F4950 000EF850  2C 05 00 00 */	cmpwi r5, 0
/* 800F4954 000EF854  40 82 00 0C */	bne lbl_800F4960
/* 800F4958 000EF858  93 E4 00 DC */	stw r31, 0xdc(r4)
/* 800F495C 000EF85C  48 00 00 08 */	b lbl_800F4964
lbl_800F4960:
/* 800F4960 000EF860  93 E5 02 FC */	stw r31, 0x2fc(r5)
lbl_800F4964:
/* 800F4964 000EF864  38 00 00 00 */	li r0, 0
/* 800F4968 000EF868  90 BF 03 00 */	stw r5, 0x300(r31)
/* 800F496C 000EF86C  3C 80 80 00 */	lis r4, 0x800000E0@ha
/* 800F4970 000EF870  90 1F 02 FC */	stw r0, 0x2fc(r31)
/* 800F4974 000EF874  93 E4 00 E0 */	stw r31, 0x800000E0@l(r4)
/* 800F4978 000EF878  4B FF CF 71 */	bl OSRestoreInterrupts
/* 800F497C 000EF87C  38 60 00 01 */	li r3, 1
lbl_800F4980:
/* 800F4980 000EF880  39 61 00 20 */	addi r11, r1, 0x20
/* 800F4984 000EF884  4B FB D4 09 */	bl _restgpr_26
/* 800F4988 000EF888  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800F498C 000EF88C  7C 08 03 A6 */	mtlr r0
/* 800F4990 000EF890  38 21 00 20 */	addi r1, r1, 0x20
/* 800F4994 000EF894  4E 80 00 20 */	blr 

.global OSExitThread
OSExitThread:
/* 800F4998 000EF898  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800F499C 000EF89C  7C 08 02 A6 */	mflr r0
/* 800F49A0 000EF8A0  90 01 00 24 */	stw r0, 0x24(r1)
/* 800F49A4 000EF8A4  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 800F49A8 000EF8A8  93 C1 00 18 */	stw r30, 0x18(r1)
/* 800F49AC 000EF8AC  93 A1 00 14 */	stw r29, 0x14(r1)
/* 800F49B0 000EF8B0  93 81 00 10 */	stw r28, 0x10(r1)
/* 800F49B4 000EF8B4  7C 7C 1B 78 */	mr r28, r3
/* 800F49B8 000EF8B8  4B FF CF 09 */	bl OSDisableInterrupts
/* 800F49BC 000EF8BC  3F E0 80 00 */	lis r31, 0x800000E4@ha
/* 800F49C0 000EF8C0  7C 7D 1B 78 */	mr r29, r3
/* 800F49C4 000EF8C4  83 DF 00 E4 */	lwz r30, 0x800000E4@l(r31)
/* 800F49C8 000EF8C8  7F C3 F3 78 */	mr r3, r30
/* 800F49CC 000EF8CC  4B FF A1 D1 */	bl OSClearContext
/* 800F49D0 000EF8D0  A0 1E 02 CA */	lhz r0, 0x2ca(r30)
/* 800F49D4 000EF8D4  54 00 07 FF */	clrlwi. r0, r0, 0x1f
/* 800F49D8 000EF8D8  41 82 00 44 */	beq lbl_800F4A1C
/* 800F49DC 000EF8DC  80 9E 02 FC */	lwz r4, 0x2fc(r30)
/* 800F49E0 000EF8E0  80 7E 03 00 */	lwz r3, 0x300(r30)
/* 800F49E4 000EF8E4  2C 04 00 00 */	cmpwi r4, 0
/* 800F49E8 000EF8E8  40 82 00 0C */	bne lbl_800F49F4
/* 800F49EC 000EF8EC  90 7F 00 E0 */	stw r3, 0xe0(r31)
/* 800F49F0 000EF8F0  48 00 00 08 */	b lbl_800F49F8
lbl_800F49F4:
/* 800F49F4 000EF8F4  90 64 03 00 */	stw r3, 0x300(r4)
lbl_800F49F8:
/* 800F49F8 000EF8F8  2C 03 00 00 */	cmpwi r3, 0
/* 800F49FC 000EF8FC  40 82 00 10 */	bne lbl_800F4A0C
/* 800F4A00 000EF900  3C 60 80 00 */	lis r3, 0x800000DC@ha
/* 800F4A04 000EF904  90 83 00 DC */	stw r4, 0x800000DC@l(r3)
/* 800F4A08 000EF908  48 00 00 08 */	b lbl_800F4A10
lbl_800F4A0C:
/* 800F4A0C 000EF90C  90 83 02 FC */	stw r4, 0x2fc(r3)
lbl_800F4A10:
/* 800F4A10 000EF910  38 00 00 00 */	li r0, 0
/* 800F4A14 000EF914  B0 1E 02 C8 */	sth r0, 0x2c8(r30)
/* 800F4A18 000EF918  48 00 00 10 */	b lbl_800F4A28
lbl_800F4A1C:
/* 800F4A1C 000EF91C  38 00 00 08 */	li r0, 8
/* 800F4A20 000EF920  B0 1E 02 C8 */	sth r0, 0x2c8(r30)
/* 800F4A24 000EF924  93 9E 02 D8 */	stw r28, 0x2d8(r30)
lbl_800F4A28:
/* 800F4A28 000EF928  7F C3 F3 78 */	mr r3, r30
/* 800F4A2C 000EF92C  4B FF E2 F5 */	bl __OSUnlockAllMutex
/* 800F4A30 000EF930  38 7E 02 E8 */	addi r3, r30, 0x2e8
/* 800F4A34 000EF934  48 00 09 19 */	bl OSWakeupThread
/* 800F4A38 000EF938  38 00 00 01 */	li r0, 1
/* 800F4A3C 000EF93C  90 0D 9C 2C */	stw r0, RunQueueHint-_SDA_BASE_(r13)
/* 800F4A40 000EF940  80 0D 9C 2C */	lwz r0, RunQueueHint-_SDA_BASE_(r13)
/* 800F4A44 000EF944  2C 00 00 00 */	cmpwi r0, 0
/* 800F4A48 000EF948  41 82 00 0C */	beq lbl_800F4A54
/* 800F4A4C 000EF94C  38 60 00 00 */	li r3, 0
/* 800F4A50 000EF950  4B FF FA 61 */	bl SelectThread
lbl_800F4A54:
/* 800F4A54 000EF954  7F A3 EB 78 */	mr r3, r29
/* 800F4A58 000EF958  4B FF CE 91 */	bl OSRestoreInterrupts
/* 800F4A5C 000EF95C  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800F4A60 000EF960  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 800F4A64 000EF964  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 800F4A68 000EF968  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 800F4A6C 000EF96C  83 81 00 10 */	lwz r28, 0x10(r1)
/* 800F4A70 000EF970  7C 08 03 A6 */	mtlr r0
/* 800F4A74 000EF974  38 21 00 20 */	addi r1, r1, 0x20
/* 800F4A78 000EF978  4E 80 00 20 */	blr 

.global OSCancelThread
OSCancelThread:
/* 800F4A7C 000EF97C  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800F4A80 000EF980  7C 08 02 A6 */	mflr r0
/* 800F4A84 000EF984  90 01 00 14 */	stw r0, 0x14(r1)
/* 800F4A88 000EF988  93 E1 00 0C */	stw r31, 0xc(r1)
/* 800F4A8C 000EF98C  93 C1 00 08 */	stw r30, 8(r1)
/* 800F4A90 000EF990  7C 7E 1B 78 */	mr r30, r3
/* 800F4A94 000EF994  4B FF CE 2D */	bl OSDisableInterrupts
/* 800F4A98 000EF998  A0 1E 02 C8 */	lhz r0, 0x2c8(r30)
/* 800F4A9C 000EF99C  7C 7F 1B 78 */	mr r31, r3
/* 800F4AA0 000EF9A0  2C 00 00 03 */	cmpwi r0, 3
/* 800F4AA4 000EF9A4  41 82 01 00 */	beq lbl_800F4BA4
/* 800F4AA8 000EF9A8  40 80 00 14 */	bge lbl_800F4ABC
/* 800F4AAC 000EF9AC  2C 00 00 01 */	cmpwi r0, 1
/* 800F4AB0 000EF9B0  41 82 00 18 */	beq lbl_800F4AC8
/* 800F4AB4 000EF9B4  40 80 00 2C */	bge lbl_800F4AE0
/* 800F4AB8 000EF9B8  48 00 00 EC */	b lbl_800F4BA4
lbl_800F4ABC:
/* 800F4ABC 000EF9BC  2C 00 00 05 */	cmpwi r0, 5
/* 800F4AC0 000EF9C0  40 80 00 E4 */	bge lbl_800F4BA4
/* 800F4AC4 000EF9C4  48 00 00 28 */	b lbl_800F4AEC
lbl_800F4AC8:
/* 800F4AC8 000EF9C8  80 1E 02 CC */	lwz r0, 0x2cc(r30)
/* 800F4ACC 000EF9CC  2C 00 00 00 */	cmpwi r0, 0
/* 800F4AD0 000EF9D0  41 81 00 E0 */	bgt lbl_800F4BB0
/* 800F4AD4 000EF9D4  7F C3 F3 78 */	mr r3, r30
/* 800F4AD8 000EF9D8  4B FF F7 31 */	bl UnsetRun
/* 800F4ADC 000EF9DC  48 00 00 D4 */	b lbl_800F4BB0
lbl_800F4AE0:
/* 800F4AE0 000EF9E0  38 00 00 01 */	li r0, 1
/* 800F4AE4 000EF9E4  90 0D 9C 2C */	stw r0, RunQueueHint-_SDA_BASE_(r13)
/* 800F4AE8 000EF9E8  48 00 00 C8 */	b lbl_800F4BB0
lbl_800F4AEC:
/* 800F4AEC 000EF9EC  80 9E 02 E0 */	lwz r4, 0x2e0(r30)
/* 800F4AF0 000EF9F0  80 BE 02 E4 */	lwz r5, 0x2e4(r30)
/* 800F4AF4 000EF9F4  2C 04 00 00 */	cmpwi r4, 0
/* 800F4AF8 000EF9F8  40 82 00 10 */	bne lbl_800F4B08
/* 800F4AFC 000EF9FC  80 7E 02 DC */	lwz r3, 0x2dc(r30)
/* 800F4B00 000EFA00  90 A3 00 04 */	stw r5, 4(r3)
/* 800F4B04 000EFA04  48 00 00 08 */	b lbl_800F4B0C
lbl_800F4B08:
/* 800F4B08 000EFA08  90 A4 02 E4 */	stw r5, 0x2e4(r4)
lbl_800F4B0C:
/* 800F4B0C 000EFA0C  2C 05 00 00 */	cmpwi r5, 0
/* 800F4B10 000EFA10  40 82 00 10 */	bne lbl_800F4B20
/* 800F4B14 000EFA14  80 7E 02 DC */	lwz r3, 0x2dc(r30)
/* 800F4B18 000EFA18  90 83 00 00 */	stw r4, 0(r3)
/* 800F4B1C 000EFA1C  48 00 00 08 */	b lbl_800F4B24
lbl_800F4B20:
/* 800F4B20 000EFA20  90 85 02 E0 */	stw r4, 0x2e0(r5)
lbl_800F4B24:
/* 800F4B24 000EFA24  80 1E 02 CC */	lwz r0, 0x2cc(r30)
/* 800F4B28 000EFA28  38 60 00 00 */	li r3, 0
/* 800F4B2C 000EFA2C  90 7E 02 DC */	stw r3, 0x2dc(r30)
/* 800F4B30 000EFA30  2C 00 00 00 */	cmpwi r0, 0
/* 800F4B34 000EFA34  41 81 00 7C */	bgt lbl_800F4BB0
/* 800F4B38 000EFA38  80 7E 02 F0 */	lwz r3, 0x2f0(r30)
/* 800F4B3C 000EFA3C  2C 03 00 00 */	cmpwi r3, 0
/* 800F4B40 000EFA40  41 82 00 70 */	beq lbl_800F4BB0
/* 800F4B44 000EFA44  80 63 00 08 */	lwz r3, 8(r3)
lbl_800F4B48:
/* 800F4B48 000EFA48  80 03 02 CC */	lwz r0, 0x2cc(r3)
/* 800F4B4C 000EFA4C  2C 00 00 00 */	cmpwi r0, 0
/* 800F4B50 000EFA50  41 81 00 60 */	bgt lbl_800F4BB0
/* 800F4B54 000EFA54  80 83 02 D4 */	lwz r4, 0x2d4(r3)
/* 800F4B58 000EFA58  80 A3 02 F4 */	lwz r5, 0x2f4(r3)
/* 800F4B5C 000EFA5C  48 00 00 24 */	b lbl_800F4B80
lbl_800F4B60:
/* 800F4B60 000EFA60  80 C5 00 00 */	lwz r6, 0(r5)
/* 800F4B64 000EFA64  2C 06 00 00 */	cmpwi r6, 0
/* 800F4B68 000EFA68  41 82 00 14 */	beq lbl_800F4B7C
/* 800F4B6C 000EFA6C  80 06 02 D0 */	lwz r0, 0x2d0(r6)
/* 800F4B70 000EFA70  7C 00 20 00 */	cmpw r0, r4
/* 800F4B74 000EFA74  40 80 00 08 */	bge lbl_800F4B7C
/* 800F4B78 000EFA78  7C 04 03 78 */	mr r4, r0
lbl_800F4B7C:
/* 800F4B7C 000EFA7C  80 A5 00 10 */	lwz r5, 0x10(r5)
lbl_800F4B80:
/* 800F4B80 000EFA80  2C 05 00 00 */	cmpwi r5, 0
/* 800F4B84 000EFA84  40 82 FF DC */	bne lbl_800F4B60
/* 800F4B88 000EFA88  80 03 02 D0 */	lwz r0, 0x2d0(r3)
/* 800F4B8C 000EFA8C  7C 00 20 00 */	cmpw r0, r4
/* 800F4B90 000EFA90  41 82 00 20 */	beq lbl_800F4BB0
/* 800F4B94 000EFA94  4B FF F7 19 */	bl SetEffectivePriority
/* 800F4B98 000EFA98  2C 03 00 00 */	cmpwi r3, 0
/* 800F4B9C 000EFA9C  40 82 FF AC */	bne lbl_800F4B48
/* 800F4BA0 000EFAA0  48 00 00 10 */	b lbl_800F4BB0
lbl_800F4BA4:
/* 800F4BA4 000EFAA4  7F E3 FB 78 */	mr r3, r31
/* 800F4BA8 000EFAA8  4B FF CD 41 */	bl OSRestoreInterrupts
/* 800F4BAC 000EFAAC  48 00 00 90 */	b lbl_800F4C3C
lbl_800F4BB0:
/* 800F4BB0 000EFAB0  7F C3 F3 78 */	mr r3, r30
/* 800F4BB4 000EFAB4  4B FF 9F E9 */	bl OSClearContext
/* 800F4BB8 000EFAB8  A0 1E 02 CA */	lhz r0, 0x2ca(r30)
/* 800F4BBC 000EFABC  54 00 07 FF */	clrlwi. r0, r0, 0x1f
/* 800F4BC0 000EFAC0  41 82 00 48 */	beq lbl_800F4C08
/* 800F4BC4 000EFAC4  80 9E 02 FC */	lwz r4, 0x2fc(r30)
/* 800F4BC8 000EFAC8  80 BE 03 00 */	lwz r5, 0x300(r30)
/* 800F4BCC 000EFACC  2C 04 00 00 */	cmpwi r4, 0
/* 800F4BD0 000EFAD0  40 82 00 10 */	bne lbl_800F4BE0
/* 800F4BD4 000EFAD4  3C 60 80 00 */	lis r3, 0x800000E0@ha
/* 800F4BD8 000EFAD8  90 A3 00 E0 */	stw r5, 0x800000E0@l(r3)
/* 800F4BDC 000EFADC  48 00 00 08 */	b lbl_800F4BE4
lbl_800F4BE0:
/* 800F4BE0 000EFAE0  90 A4 03 00 */	stw r5, 0x300(r4)
lbl_800F4BE4:
/* 800F4BE4 000EFAE4  2C 05 00 00 */	cmpwi r5, 0
/* 800F4BE8 000EFAE8  40 82 00 10 */	bne lbl_800F4BF8
/* 800F4BEC 000EFAEC  3C 60 80 00 */	lis r3, 0x800000DC@ha
/* 800F4BF0 000EFAF0  90 83 00 DC */	stw r4, 0x800000DC@l(r3)
/* 800F4BF4 000EFAF4  48 00 00 08 */	b lbl_800F4BFC
lbl_800F4BF8:
/* 800F4BF8 000EFAF8  90 85 02 FC */	stw r4, 0x2fc(r5)
lbl_800F4BFC:
/* 800F4BFC 000EFAFC  38 00 00 00 */	li r0, 0
/* 800F4C00 000EFB00  B0 1E 02 C8 */	sth r0, 0x2c8(r30)
/* 800F4C04 000EFB04  48 00 00 0C */	b lbl_800F4C10
lbl_800F4C08:
/* 800F4C08 000EFB08  38 00 00 08 */	li r0, 8
/* 800F4C0C 000EFB0C  B0 1E 02 C8 */	sth r0, 0x2c8(r30)
lbl_800F4C10:
/* 800F4C10 000EFB10  7F C3 F3 78 */	mr r3, r30
/* 800F4C14 000EFB14  4B FF E1 0D */	bl __OSUnlockAllMutex
/* 800F4C18 000EFB18  38 7E 02 E8 */	addi r3, r30, 0x2e8
/* 800F4C1C 000EFB1C  48 00 07 31 */	bl OSWakeupThread
/* 800F4C20 000EFB20  80 0D 9C 2C */	lwz r0, RunQueueHint-_SDA_BASE_(r13)
/* 800F4C24 000EFB24  2C 00 00 00 */	cmpwi r0, 0
/* 800F4C28 000EFB28  41 82 00 0C */	beq lbl_800F4C34
/* 800F4C2C 000EFB2C  38 60 00 00 */	li r3, 0
/* 800F4C30 000EFB30  4B FF F8 81 */	bl SelectThread
lbl_800F4C34:
/* 800F4C34 000EFB34  7F E3 FB 78 */	mr r3, r31
/* 800F4C38 000EFB38  4B FF CC B1 */	bl OSRestoreInterrupts
lbl_800F4C3C:
/* 800F4C3C 000EFB3C  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800F4C40 000EFB40  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 800F4C44 000EFB44  83 C1 00 08 */	lwz r30, 8(r1)
/* 800F4C48 000EFB48  7C 08 03 A6 */	mtlr r0
/* 800F4C4C 000EFB4C  38 21 00 10 */	addi r1, r1, 0x10
/* 800F4C50 000EFB50  4E 80 00 20 */	blr 

.global OSJoinThread
OSJoinThread:
/* 800F4C54 000EFB54  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800F4C58 000EFB58  7C 08 02 A6 */	mflr r0
/* 800F4C5C 000EFB5C  90 01 00 24 */	stw r0, 0x24(r1)
/* 800F4C60 000EFB60  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 800F4C64 000EFB64  7C 7F 1B 78 */	mr r31, r3
/* 800F4C68 000EFB68  93 C1 00 18 */	stw r30, 0x18(r1)
/* 800F4C6C 000EFB6C  93 A1 00 14 */	stw r29, 0x14(r1)
/* 800F4C70 000EFB70  7C 9D 23 78 */	mr r29, r4
/* 800F4C74 000EFB74  4B FF CC 4D */	bl OSDisableInterrupts
/* 800F4C78 000EFB78  A0 1F 02 CA */	lhz r0, 0x2ca(r31)
/* 800F4C7C 000EFB7C  7C 7E 1B 78 */	mr r30, r3
/* 800F4C80 000EFB80  54 00 07 FF */	clrlwi. r0, r0, 0x1f
/* 800F4C84 000EFB84  40 82 00 7C */	bne lbl_800F4D00
/* 800F4C88 000EFB88  A0 1F 02 C8 */	lhz r0, 0x2c8(r31)
/* 800F4C8C 000EFB8C  28 00 00 08 */	cmplwi r0, 8
/* 800F4C90 000EFB90  41 82 00 70 */	beq lbl_800F4D00
/* 800F4C94 000EFB94  80 1F 02 E8 */	lwz r0, 0x2e8(r31)
/* 800F4C98 000EFB98  2C 00 00 00 */	cmpwi r0, 0
/* 800F4C9C 000EFB9C  40 82 00 64 */	bne lbl_800F4D00
/* 800F4CA0 000EFBA0  38 7F 02 E8 */	addi r3, r31, 0x2e8
/* 800F4CA4 000EFBA4  48 00 05 BD */	bl OSSleepThread
/* 800F4CA8 000EFBA8  A0 1F 02 C8 */	lhz r0, 0x2c8(r31)
/* 800F4CAC 000EFBAC  2C 00 00 00 */	cmpwi r0, 0
/* 800F4CB0 000EFBB0  40 82 00 0C */	bne lbl_800F4CBC
/* 800F4CB4 000EFBB4  38 00 00 00 */	li r0, 0
/* 800F4CB8 000EFBB8  48 00 00 30 */	b lbl_800F4CE8
lbl_800F4CBC:
/* 800F4CBC 000EFBBC  3C 60 80 00 */	lis r3, 0x800000DC@ha
/* 800F4CC0 000EFBC0  80 63 00 DC */	lwz r3, 0x800000DC@l(r3)
/* 800F4CC4 000EFBC4  48 00 00 18 */	b lbl_800F4CDC
lbl_800F4CC8:
/* 800F4CC8 000EFBC8  7C 1F 18 40 */	cmplw r31, r3
/* 800F4CCC 000EFBCC  40 82 00 0C */	bne lbl_800F4CD8
/* 800F4CD0 000EFBD0  38 00 00 01 */	li r0, 1
/* 800F4CD4 000EFBD4  48 00 00 14 */	b lbl_800F4CE8
lbl_800F4CD8:
/* 800F4CD8 000EFBD8  80 63 02 FC */	lwz r3, 0x2fc(r3)
lbl_800F4CDC:
/* 800F4CDC 000EFBDC  2C 03 00 00 */	cmpwi r3, 0
/* 800F4CE0 000EFBE0  40 82 FF E8 */	bne lbl_800F4CC8
/* 800F4CE4 000EFBE4  38 00 00 00 */	li r0, 0
lbl_800F4CE8:
/* 800F4CE8 000EFBE8  2C 00 00 00 */	cmpwi r0, 0
/* 800F4CEC 000EFBEC  40 82 00 14 */	bne lbl_800F4D00
/* 800F4CF0 000EFBF0  7F C3 F3 78 */	mr r3, r30
/* 800F4CF4 000EFBF4  4B FF CB F5 */	bl OSRestoreInterrupts
/* 800F4CF8 000EFBF8  38 60 00 00 */	li r3, 0
/* 800F4CFC 000EFBFC  48 00 00 7C */	b lbl_800F4D78
lbl_800F4D00:
/* 800F4D00 000EFC00  A0 1F 02 C8 */	lhz r0, 0x2c8(r31)
/* 800F4D04 000EFC04  28 00 00 08 */	cmplwi r0, 8
/* 800F4D08 000EFC08  40 82 00 64 */	bne lbl_800F4D6C
/* 800F4D0C 000EFC0C  2C 1D 00 00 */	cmpwi r29, 0
/* 800F4D10 000EFC10  41 82 00 0C */	beq lbl_800F4D1C
/* 800F4D14 000EFC14  80 1F 02 D8 */	lwz r0, 0x2d8(r31)
/* 800F4D18 000EFC18  90 1D 00 00 */	stw r0, 0(r29)
lbl_800F4D1C:
/* 800F4D1C 000EFC1C  80 9F 02 FC */	lwz r4, 0x2fc(r31)
/* 800F4D20 000EFC20  80 BF 03 00 */	lwz r5, 0x300(r31)
/* 800F4D24 000EFC24  2C 04 00 00 */	cmpwi r4, 0
/* 800F4D28 000EFC28  40 82 00 10 */	bne lbl_800F4D38
/* 800F4D2C 000EFC2C  3C 60 80 00 */	lis r3, 0x800000E0@ha
/* 800F4D30 000EFC30  90 A3 00 E0 */	stw r5, 0x800000E0@l(r3)
/* 800F4D34 000EFC34  48 00 00 08 */	b lbl_800F4D3C
lbl_800F4D38:
/* 800F4D38 000EFC38  90 A4 03 00 */	stw r5, 0x300(r4)
lbl_800F4D3C:
/* 800F4D3C 000EFC3C  2C 05 00 00 */	cmpwi r5, 0
/* 800F4D40 000EFC40  40 82 00 10 */	bne lbl_800F4D50
/* 800F4D44 000EFC44  3C 60 80 00 */	lis r3, 0x800000DC@ha
/* 800F4D48 000EFC48  90 83 00 DC */	stw r4, 0x800000DC@l(r3)
/* 800F4D4C 000EFC4C  48 00 00 08 */	b lbl_800F4D54
lbl_800F4D50:
/* 800F4D50 000EFC50  90 85 02 FC */	stw r4, 0x2fc(r5)
lbl_800F4D54:
/* 800F4D54 000EFC54  38 00 00 00 */	li r0, 0
/* 800F4D58 000EFC58  7F C3 F3 78 */	mr r3, r30
/* 800F4D5C 000EFC5C  B0 1F 02 C8 */	sth r0, 0x2c8(r31)
/* 800F4D60 000EFC60  4B FF CB 89 */	bl OSRestoreInterrupts
/* 800F4D64 000EFC64  38 60 00 01 */	li r3, 1
/* 800F4D68 000EFC68  48 00 00 10 */	b lbl_800F4D78
lbl_800F4D6C:
/* 800F4D6C 000EFC6C  7F C3 F3 78 */	mr r3, r30
/* 800F4D70 000EFC70  4B FF CB 79 */	bl OSRestoreInterrupts
/* 800F4D74 000EFC74  38 60 00 00 */	li r3, 0
lbl_800F4D78:
/* 800F4D78 000EFC78  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800F4D7C 000EFC7C  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 800F4D80 000EFC80  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 800F4D84 000EFC84  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 800F4D88 000EFC88  7C 08 03 A6 */	mtlr r0
/* 800F4D8C 000EFC8C  38 21 00 20 */	addi r1, r1, 0x20
/* 800F4D90 000EFC90  4E 80 00 20 */	blr 

.global OSDetachThread
OSDetachThread:
/* 800F4D94 000EFC94  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800F4D98 000EFC98  7C 08 02 A6 */	mflr r0
/* 800F4D9C 000EFC9C  90 01 00 14 */	stw r0, 0x14(r1)
/* 800F4DA0 000EFCA0  93 E1 00 0C */	stw r31, 0xc(r1)
/* 800F4DA4 000EFCA4  93 C1 00 08 */	stw r30, 8(r1)
/* 800F4DA8 000EFCA8  7C 7E 1B 78 */	mr r30, r3
/* 800F4DAC 000EFCAC  4B FF CB 15 */	bl OSDisableInterrupts
/* 800F4DB0 000EFCB0  A0 1E 02 C8 */	lhz r0, 0x2c8(r30)
/* 800F4DB4 000EFCB4  7C 7F 1B 78 */	mr r31, r3
/* 800F4DB8 000EFCB8  A0 9E 02 CA */	lhz r4, 0x2ca(r30)
/* 800F4DBC 000EFCBC  28 00 00 08 */	cmplwi r0, 8
/* 800F4DC0 000EFCC0  60 83 00 01 */	ori r3, r4, 1
/* 800F4DC4 000EFCC4  B0 7E 02 CA */	sth r3, 0x2ca(r30)
/* 800F4DC8 000EFCC8  40 82 00 44 */	bne lbl_800F4E0C
/* 800F4DCC 000EFCCC  80 9E 02 FC */	lwz r4, 0x2fc(r30)
/* 800F4DD0 000EFCD0  80 BE 03 00 */	lwz r5, 0x300(r30)
/* 800F4DD4 000EFCD4  2C 04 00 00 */	cmpwi r4, 0
/* 800F4DD8 000EFCD8  40 82 00 10 */	bne lbl_800F4DE8
/* 800F4DDC 000EFCDC  3C 60 80 00 */	lis r3, 0x800000E0@ha
/* 800F4DE0 000EFCE0  90 A3 00 E0 */	stw r5, 0x800000E0@l(r3)
/* 800F4DE4 000EFCE4  48 00 00 08 */	b lbl_800F4DEC
lbl_800F4DE8:
/* 800F4DE8 000EFCE8  90 A4 03 00 */	stw r5, 0x300(r4)
lbl_800F4DEC:
/* 800F4DEC 000EFCEC  2C 05 00 00 */	cmpwi r5, 0
/* 800F4DF0 000EFCF0  40 82 00 10 */	bne lbl_800F4E00
/* 800F4DF4 000EFCF4  3C 60 80 00 */	lis r3, 0x800000DC@ha
/* 800F4DF8 000EFCF8  90 83 00 DC */	stw r4, 0x800000DC@l(r3)
/* 800F4DFC 000EFCFC  48 00 00 08 */	b lbl_800F4E04
lbl_800F4E00:
/* 800F4E00 000EFD00  90 85 02 FC */	stw r4, 0x2fc(r5)
lbl_800F4E04:
/* 800F4E04 000EFD04  38 00 00 00 */	li r0, 0
/* 800F4E08 000EFD08  B0 1E 02 C8 */	sth r0, 0x2c8(r30)
lbl_800F4E0C:
/* 800F4E0C 000EFD0C  38 7E 02 E8 */	addi r3, r30, 0x2e8
/* 800F4E10 000EFD10  48 00 05 3D */	bl OSWakeupThread
/* 800F4E14 000EFD14  7F E3 FB 78 */	mr r3, r31
/* 800F4E18 000EFD18  4B FF CA D1 */	bl OSRestoreInterrupts
/* 800F4E1C 000EFD1C  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800F4E20 000EFD20  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 800F4E24 000EFD24  83 C1 00 08 */	lwz r30, 8(r1)
/* 800F4E28 000EFD28  7C 08 03 A6 */	mtlr r0
/* 800F4E2C 000EFD2C  38 21 00 10 */	addi r1, r1, 0x10
/* 800F4E30 000EFD30  4E 80 00 20 */	blr 

.global OSResumeThread
OSResumeThread:
/* 800F4E34 000EFD34  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800F4E38 000EFD38  7C 08 02 A6 */	mflr r0
/* 800F4E3C 000EFD3C  90 01 00 24 */	stw r0, 0x24(r1)
/* 800F4E40 000EFD40  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 800F4E44 000EFD44  93 C1 00 18 */	stw r30, 0x18(r1)
/* 800F4E48 000EFD48  93 A1 00 14 */	stw r29, 0x14(r1)
/* 800F4E4C 000EFD4C  7C 7D 1B 78 */	mr r29, r3
/* 800F4E50 000EFD50  4B FF CA 71 */	bl OSDisableInterrupts
/* 800F4E54 000EFD54  83 DD 02 CC */	lwz r30, 0x2cc(r29)
/* 800F4E58 000EFD58  7C 7F 1B 78 */	mr r31, r3
/* 800F4E5C 000EFD5C  34 1E FF FF */	addic. r0, r30, -1
/* 800F4E60 000EFD60  90 1D 02 CC */	stw r0, 0x2cc(r29)
/* 800F4E64 000EFD64  40 80 00 10 */	bge lbl_800F4E74
/* 800F4E68 000EFD68  38 00 00 00 */	li r0, 0
/* 800F4E6C 000EFD6C  90 1D 02 CC */	stw r0, 0x2cc(r29)
/* 800F4E70 000EFD70  48 00 02 34 */	b lbl_800F50A4
lbl_800F4E74:
/* 800F4E74 000EFD74  40 82 02 30 */	bne lbl_800F50A4
/* 800F4E78 000EFD78  A0 1D 02 C8 */	lhz r0, 0x2c8(r29)
/* 800F4E7C 000EFD7C  2C 00 00 04 */	cmpwi r0, 4
/* 800F4E80 000EFD80  41 82 00 B0 */	beq lbl_800F4F30
/* 800F4E84 000EFD84  40 80 02 0C */	bge lbl_800F5090
/* 800F4E88 000EFD88  2C 00 00 01 */	cmpwi r0, 1
/* 800F4E8C 000EFD8C  41 82 00 08 */	beq lbl_800F4E94
/* 800F4E90 000EFD90  48 00 02 00 */	b lbl_800F5090
lbl_800F4E94:
/* 800F4E94 000EFD94  80 BD 02 D4 */	lwz r5, 0x2d4(r29)
/* 800F4E98 000EFD98  80 9D 02 F4 */	lwz r4, 0x2f4(r29)
/* 800F4E9C 000EFD9C  48 00 00 24 */	b lbl_800F4EC0
lbl_800F4EA0:
/* 800F4EA0 000EFDA0  80 64 00 00 */	lwz r3, 0(r4)
/* 800F4EA4 000EFDA4  2C 03 00 00 */	cmpwi r3, 0
/* 800F4EA8 000EFDA8  41 82 00 14 */	beq lbl_800F4EBC
/* 800F4EAC 000EFDAC  80 03 02 D0 */	lwz r0, 0x2d0(r3)
/* 800F4EB0 000EFDB0  7C 00 28 00 */	cmpw r0, r5
/* 800F4EB4 000EFDB4  40 80 00 08 */	bge lbl_800F4EBC
/* 800F4EB8 000EFDB8  7C 05 03 78 */	mr r5, r0
lbl_800F4EBC:
/* 800F4EBC 000EFDBC  80 84 00 10 */	lwz r4, 0x10(r4)
lbl_800F4EC0:
/* 800F4EC0 000EFDC0  2C 04 00 00 */	cmpwi r4, 0
/* 800F4EC4 000EFDC4  40 82 FF DC */	bne lbl_800F4EA0
/* 800F4EC8 000EFDC8  3C 60 80 42 */	lis r3, RunQueue@ha
/* 800F4ECC 000EFDCC  54 A0 18 38 */	slwi r0, r5, 3
/* 800F4ED0 000EFDD0  38 63 05 10 */	addi r3, r3, RunQueue@l
/* 800F4ED4 000EFDD4  90 BD 02 D0 */	stw r5, 0x2d0(r29)
/* 800F4ED8 000EFDD8  7C 63 02 14 */	add r3, r3, r0
/* 800F4EDC 000EFDDC  90 7D 02 DC */	stw r3, 0x2dc(r29)
/* 800F4EE0 000EFDE0  80 83 00 04 */	lwz r4, 4(r3)
/* 800F4EE4 000EFDE4  2C 04 00 00 */	cmpwi r4, 0
/* 800F4EE8 000EFDE8  40 82 00 0C */	bne lbl_800F4EF4
/* 800F4EEC 000EFDEC  93 A3 00 00 */	stw r29, 0(r3)
/* 800F4EF0 000EFDF0  48 00 00 08 */	b lbl_800F4EF8
lbl_800F4EF4:
/* 800F4EF4 000EFDF4  93 A4 02 E0 */	stw r29, 0x2e0(r4)
lbl_800F4EF8:
/* 800F4EF8 000EFDF8  38 00 00 00 */	li r0, 0
/* 800F4EFC 000EFDFC  90 9D 02 E4 */	stw r4, 0x2e4(r29)
/* 800F4F00 000EFE00  80 9D 02 DC */	lwz r4, 0x2dc(r29)
/* 800F4F04 000EFE04  38 60 00 01 */	li r3, 1
/* 800F4F08 000EFE08  90 1D 02 E0 */	stw r0, 0x2e0(r29)
/* 800F4F0C 000EFE0C  93 A4 00 04 */	stw r29, 4(r4)
/* 800F4F10 000EFE10  80 1D 02 D0 */	lwz r0, 0x2d0(r29)
/* 800F4F14 000EFE14  80 8D 9C 30 */	lwz r4, RunQueueBits-_SDA_BASE_(r13)
/* 800F4F18 000EFE18  20 00 00 1F */	subfic r0, r0, 0x1f
/* 800F4F1C 000EFE1C  7C 60 00 30 */	slw r0, r3, r0
/* 800F4F20 000EFE20  7C 80 03 78 */	or r0, r4, r0
/* 800F4F24 000EFE24  90 0D 9C 30 */	stw r0, RunQueueBits-_SDA_BASE_(r13)
/* 800F4F28 000EFE28  90 6D 9C 2C */	stw r3, RunQueueHint-_SDA_BASE_(r13)
/* 800F4F2C 000EFE2C  48 00 01 64 */	b lbl_800F5090
lbl_800F4F30:
/* 800F4F30 000EFE30  80 9D 02 E0 */	lwz r4, 0x2e0(r29)
/* 800F4F34 000EFE34  80 BD 02 E4 */	lwz r5, 0x2e4(r29)
/* 800F4F38 000EFE38  2C 04 00 00 */	cmpwi r4, 0
/* 800F4F3C 000EFE3C  40 82 00 10 */	bne lbl_800F4F4C
/* 800F4F40 000EFE40  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 800F4F44 000EFE44  90 A3 00 04 */	stw r5, 4(r3)
/* 800F4F48 000EFE48  48 00 00 08 */	b lbl_800F4F50
lbl_800F4F4C:
/* 800F4F4C 000EFE4C  90 A4 02 E4 */	stw r5, 0x2e4(r4)
lbl_800F4F50:
/* 800F4F50 000EFE50  2C 05 00 00 */	cmpwi r5, 0
/* 800F4F54 000EFE54  40 82 00 10 */	bne lbl_800F4F64
/* 800F4F58 000EFE58  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 800F4F5C 000EFE5C  90 83 00 00 */	stw r4, 0(r3)
/* 800F4F60 000EFE60  48 00 00 08 */	b lbl_800F4F68
lbl_800F4F64:
/* 800F4F64 000EFE64  90 85 02 E0 */	stw r4, 0x2e0(r5)
lbl_800F4F68:
/* 800F4F68 000EFE68  80 1D 02 D4 */	lwz r0, 0x2d4(r29)
/* 800F4F6C 000EFE6C  80 9D 02 F4 */	lwz r4, 0x2f4(r29)
/* 800F4F70 000EFE70  48 00 00 24 */	b lbl_800F4F94
lbl_800F4F74:
/* 800F4F74 000EFE74  80 64 00 00 */	lwz r3, 0(r4)
/* 800F4F78 000EFE78  2C 03 00 00 */	cmpwi r3, 0
/* 800F4F7C 000EFE7C  41 82 00 14 */	beq lbl_800F4F90
/* 800F4F80 000EFE80  80 63 02 D0 */	lwz r3, 0x2d0(r3)
/* 800F4F84 000EFE84  7C 03 00 00 */	cmpw r3, r0
/* 800F4F88 000EFE88  40 80 00 08 */	bge lbl_800F4F90
/* 800F4F8C 000EFE8C  7C 60 1B 78 */	mr r0, r3
lbl_800F4F90:
/* 800F4F90 000EFE90  80 84 00 10 */	lwz r4, 0x10(r4)
lbl_800F4F94:
/* 800F4F94 000EFE94  2C 04 00 00 */	cmpwi r4, 0
/* 800F4F98 000EFE98  40 82 FF DC */	bne lbl_800F4F74
/* 800F4F9C 000EFE9C  90 1D 02 D0 */	stw r0, 0x2d0(r29)
/* 800F4FA0 000EFEA0  80 9D 02 DC */	lwz r4, 0x2dc(r29)
/* 800F4FA4 000EFEA4  80 A4 00 00 */	lwz r5, 0(r4)
/* 800F4FA8 000EFEA8  48 00 00 08 */	b lbl_800F4FB0
lbl_800F4FAC:
/* 800F4FAC 000EFEAC  80 A5 02 E0 */	lwz r5, 0x2e0(r5)
lbl_800F4FB0:
/* 800F4FB0 000EFEB0  2C 05 00 00 */	cmpwi r5, 0
/* 800F4FB4 000EFEB4  41 82 00 14 */	beq lbl_800F4FC8
/* 800F4FB8 000EFEB8  80 65 02 D0 */	lwz r3, 0x2d0(r5)
/* 800F4FBC 000EFEBC  80 1D 02 D0 */	lwz r0, 0x2d0(r29)
/* 800F4FC0 000EFEC0  7C 03 00 00 */	cmpw r3, r0
/* 800F4FC4 000EFEC4  40 81 FF E8 */	ble lbl_800F4FAC
lbl_800F4FC8:
/* 800F4FC8 000EFEC8  2C 05 00 00 */	cmpwi r5, 0
/* 800F4FCC 000EFECC  40 82 00 34 */	bne lbl_800F5000
/* 800F4FD0 000EFED0  80 64 00 04 */	lwz r3, 4(r4)
/* 800F4FD4 000EFED4  2C 03 00 00 */	cmpwi r3, 0
/* 800F4FD8 000EFED8  40 82 00 0C */	bne lbl_800F4FE4
/* 800F4FDC 000EFEDC  93 A4 00 00 */	stw r29, 0(r4)
/* 800F4FE0 000EFEE0  48 00 00 08 */	b lbl_800F4FE8
lbl_800F4FE4:
/* 800F4FE4 000EFEE4  93 A3 02 E0 */	stw r29, 0x2e0(r3)
lbl_800F4FE8:
/* 800F4FE8 000EFEE8  38 00 00 00 */	li r0, 0
/* 800F4FEC 000EFEEC  90 7D 02 E4 */	stw r3, 0x2e4(r29)
/* 800F4FF0 000EFEF0  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 800F4FF4 000EFEF4  90 1D 02 E0 */	stw r0, 0x2e0(r29)
/* 800F4FF8 000EFEF8  93 A3 00 04 */	stw r29, 4(r3)
/* 800F4FFC 000EFEFC  48 00 00 2C */	b lbl_800F5028
lbl_800F5000:
/* 800F5000 000EFF00  90 BD 02 E0 */	stw r5, 0x2e0(r29)
/* 800F5004 000EFF04  80 65 02 E4 */	lwz r3, 0x2e4(r5)
/* 800F5008 000EFF08  93 A5 02 E4 */	stw r29, 0x2e4(r5)
/* 800F500C 000EFF0C  2C 03 00 00 */	cmpwi r3, 0
/* 800F5010 000EFF10  90 7D 02 E4 */	stw r3, 0x2e4(r29)
/* 800F5014 000EFF14  40 82 00 10 */	bne lbl_800F5024
/* 800F5018 000EFF18  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 800F501C 000EFF1C  93 A3 00 00 */	stw r29, 0(r3)
/* 800F5020 000EFF20  48 00 00 08 */	b lbl_800F5028
lbl_800F5024:
/* 800F5024 000EFF24  93 A3 02 E0 */	stw r29, 0x2e0(r3)
lbl_800F5028:
/* 800F5028 000EFF28  80 7D 02 F0 */	lwz r3, 0x2f0(r29)
/* 800F502C 000EFF2C  2C 03 00 00 */	cmpwi r3, 0
/* 800F5030 000EFF30  41 82 00 60 */	beq lbl_800F5090
/* 800F5034 000EFF34  80 63 00 08 */	lwz r3, 8(r3)
lbl_800F5038:
/* 800F5038 000EFF38  80 03 02 CC */	lwz r0, 0x2cc(r3)
/* 800F503C 000EFF3C  2C 00 00 00 */	cmpwi r0, 0
/* 800F5040 000EFF40  41 81 00 50 */	bgt lbl_800F5090
/* 800F5044 000EFF44  80 83 02 D4 */	lwz r4, 0x2d4(r3)
/* 800F5048 000EFF48  80 A3 02 F4 */	lwz r5, 0x2f4(r3)
/* 800F504C 000EFF4C  48 00 00 24 */	b lbl_800F5070
lbl_800F5050:
/* 800F5050 000EFF50  80 C5 00 00 */	lwz r6, 0(r5)
/* 800F5054 000EFF54  2C 06 00 00 */	cmpwi r6, 0
/* 800F5058 000EFF58  41 82 00 14 */	beq lbl_800F506C
/* 800F505C 000EFF5C  80 06 02 D0 */	lwz r0, 0x2d0(r6)
/* 800F5060 000EFF60  7C 00 20 00 */	cmpw r0, r4
/* 800F5064 000EFF64  40 80 00 08 */	bge lbl_800F506C
/* 800F5068 000EFF68  7C 04 03 78 */	mr r4, r0
lbl_800F506C:
/* 800F506C 000EFF6C  80 A5 00 10 */	lwz r5, 0x10(r5)
lbl_800F5070:
/* 800F5070 000EFF70  2C 05 00 00 */	cmpwi r5, 0
/* 800F5074 000EFF74  40 82 FF DC */	bne lbl_800F5050
/* 800F5078 000EFF78  80 03 02 D0 */	lwz r0, 0x2d0(r3)
/* 800F507C 000EFF7C  7C 00 20 00 */	cmpw r0, r4
/* 800F5080 000EFF80  41 82 00 10 */	beq lbl_800F5090
/* 800F5084 000EFF84  4B FF F2 29 */	bl SetEffectivePriority
/* 800F5088 000EFF88  2C 03 00 00 */	cmpwi r3, 0
/* 800F508C 000EFF8C  40 82 FF AC */	bne lbl_800F5038
lbl_800F5090:
/* 800F5090 000EFF90  80 0D 9C 2C */	lwz r0, RunQueueHint-_SDA_BASE_(r13)
/* 800F5094 000EFF94  2C 00 00 00 */	cmpwi r0, 0
/* 800F5098 000EFF98  41 82 00 0C */	beq lbl_800F50A4
/* 800F509C 000EFF9C  38 60 00 00 */	li r3, 0
/* 800F50A0 000EFFA0  4B FF F4 11 */	bl SelectThread
lbl_800F50A4:
/* 800F50A4 000EFFA4  7F E3 FB 78 */	mr r3, r31
/* 800F50A8 000EFFA8  4B FF C8 41 */	bl OSRestoreInterrupts
/* 800F50AC 000EFFAC  7F C3 F3 78 */	mr r3, r30
/* 800F50B0 000EFFB0  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 800F50B4 000EFFB4  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 800F50B8 000EFFB8  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 800F50BC 000EFFBC  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800F50C0 000EFFC0  7C 08 03 A6 */	mtlr r0
/* 800F50C4 000EFFC4  38 21 00 20 */	addi r1, r1, 0x20
/* 800F50C8 000EFFC8  4E 80 00 20 */	blr 

.global OSSuspendThread
OSSuspendThread:
/* 800F50CC 000EFFCC  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800F50D0 000EFFD0  7C 08 02 A6 */	mflr r0
/* 800F50D4 000EFFD4  90 01 00 24 */	stw r0, 0x24(r1)
/* 800F50D8 000EFFD8  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 800F50DC 000EFFDC  93 C1 00 18 */	stw r30, 0x18(r1)
/* 800F50E0 000EFFE0  93 A1 00 14 */	stw r29, 0x14(r1)
/* 800F50E4 000EFFE4  7C 7D 1B 78 */	mr r29, r3
/* 800F50E8 000EFFE8  4B FF C7 D9 */	bl OSDisableInterrupts
/* 800F50EC 000EFFEC  83 DD 02 CC */	lwz r30, 0x2cc(r29)
/* 800F50F0 000EFFF0  7C 7F 1B 78 */	mr r31, r3
/* 800F50F4 000EFFF4  38 1E 00 01 */	addi r0, r30, 1
/* 800F50F8 000EFFF8  2C 1E 00 00 */	cmpwi r30, 0
/* 800F50FC 000EFFFC  90 1D 02 CC */	stw r0, 0x2cc(r29)
/* 800F5100 000F0000  40 82 01 38 */	bne lbl_800F5238
/* 800F5104 000F0004  A0 1D 02 C8 */	lhz r0, 0x2c8(r29)
/* 800F5108 000F0008  2C 00 00 03 */	cmpwi r0, 3
/* 800F510C 000F000C  41 82 01 18 */	beq lbl_800F5224
/* 800F5110 000F0010  40 80 00 14 */	bge lbl_800F5124
/* 800F5114 000F0014  2C 00 00 01 */	cmpwi r0, 1
/* 800F5118 000F0018  41 82 00 28 */	beq lbl_800F5140
/* 800F511C 000F001C  40 80 00 14 */	bge lbl_800F5130
/* 800F5120 000F0020  48 00 01 04 */	b lbl_800F5224
lbl_800F5124:
/* 800F5124 000F0024  2C 00 00 05 */	cmpwi r0, 5
/* 800F5128 000F0028  40 80 00 FC */	bge lbl_800F5224
/* 800F512C 000F002C  48 00 00 20 */	b lbl_800F514C
lbl_800F5130:
/* 800F5130 000F0030  38 00 00 01 */	li r0, 1
/* 800F5134 000F0034  90 0D 9C 2C */	stw r0, RunQueueHint-_SDA_BASE_(r13)
/* 800F5138 000F0038  B0 1D 02 C8 */	sth r0, 0x2c8(r29)
/* 800F513C 000F003C  48 00 00 E8 */	b lbl_800F5224
lbl_800F5140:
/* 800F5140 000F0040  7F A3 EB 78 */	mr r3, r29
/* 800F5144 000F0044  4B FF F0 C5 */	bl UnsetRun
/* 800F5148 000F0048  48 00 00 DC */	b lbl_800F5224
lbl_800F514C:
/* 800F514C 000F004C  80 9D 02 E0 */	lwz r4, 0x2e0(r29)
/* 800F5150 000F0050  80 BD 02 E4 */	lwz r5, 0x2e4(r29)
/* 800F5154 000F0054  2C 04 00 00 */	cmpwi r4, 0
/* 800F5158 000F0058  40 82 00 10 */	bne lbl_800F5168
/* 800F515C 000F005C  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 800F5160 000F0060  90 A3 00 04 */	stw r5, 4(r3)
/* 800F5164 000F0064  48 00 00 08 */	b lbl_800F516C
lbl_800F5168:
/* 800F5168 000F0068  90 A4 02 E4 */	stw r5, 0x2e4(r4)
lbl_800F516C:
/* 800F516C 000F006C  2C 05 00 00 */	cmpwi r5, 0
/* 800F5170 000F0070  40 82 00 10 */	bne lbl_800F5180
/* 800F5174 000F0074  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 800F5178 000F0078  90 83 00 00 */	stw r4, 0(r3)
/* 800F517C 000F007C  48 00 00 08 */	b lbl_800F5184
lbl_800F5180:
/* 800F5180 000F0080  90 85 02 E0 */	stw r4, 0x2e0(r5)
lbl_800F5184:
/* 800F5184 000F0084  38 00 00 20 */	li r0, 0x20
/* 800F5188 000F0088  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 800F518C 000F008C  90 1D 02 D0 */	stw r0, 0x2d0(r29)
/* 800F5190 000F0090  80 83 00 04 */	lwz r4, 4(r3)
/* 800F5194 000F0094  2C 04 00 00 */	cmpwi r4, 0
/* 800F5198 000F0098  40 82 00 0C */	bne lbl_800F51A4
/* 800F519C 000F009C  93 A3 00 00 */	stw r29, 0(r3)
/* 800F51A0 000F00A0  48 00 00 08 */	b lbl_800F51A8
lbl_800F51A4:
/* 800F51A4 000F00A4  93 A4 02 E0 */	stw r29, 0x2e0(r4)
lbl_800F51A8:
/* 800F51A8 000F00A8  38 00 00 00 */	li r0, 0
/* 800F51AC 000F00AC  90 9D 02 E4 */	stw r4, 0x2e4(r29)
/* 800F51B0 000F00B0  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 800F51B4 000F00B4  90 1D 02 E0 */	stw r0, 0x2e0(r29)
/* 800F51B8 000F00B8  93 A3 00 04 */	stw r29, 4(r3)
/* 800F51BC 000F00BC  80 7D 02 F0 */	lwz r3, 0x2f0(r29)
/* 800F51C0 000F00C0  2C 03 00 00 */	cmpwi r3, 0
/* 800F51C4 000F00C4  41 82 00 60 */	beq lbl_800F5224
/* 800F51C8 000F00C8  80 63 00 08 */	lwz r3, 8(r3)
lbl_800F51CC:
/* 800F51CC 000F00CC  80 03 02 CC */	lwz r0, 0x2cc(r3)
/* 800F51D0 000F00D0  2C 00 00 00 */	cmpwi r0, 0
/* 800F51D4 000F00D4  41 81 00 50 */	bgt lbl_800F5224
/* 800F51D8 000F00D8  80 83 02 D4 */	lwz r4, 0x2d4(r3)
/* 800F51DC 000F00DC  80 A3 02 F4 */	lwz r5, 0x2f4(r3)
/* 800F51E0 000F00E0  48 00 00 24 */	b lbl_800F5204
lbl_800F51E4:
/* 800F51E4 000F00E4  80 C5 00 00 */	lwz r6, 0(r5)
/* 800F51E8 000F00E8  2C 06 00 00 */	cmpwi r6, 0
/* 800F51EC 000F00EC  41 82 00 14 */	beq lbl_800F5200
/* 800F51F0 000F00F0  80 06 02 D0 */	lwz r0, 0x2d0(r6)
/* 800F51F4 000F00F4  7C 00 20 00 */	cmpw r0, r4
/* 800F51F8 000F00F8  40 80 00 08 */	bge lbl_800F5200
/* 800F51FC 000F00FC  7C 04 03 78 */	mr r4, r0
lbl_800F5200:
/* 800F5200 000F0100  80 A5 00 10 */	lwz r5, 0x10(r5)
lbl_800F5204:
/* 800F5204 000F0104  2C 05 00 00 */	cmpwi r5, 0
/* 800F5208 000F0108  40 82 FF DC */	bne lbl_800F51E4
/* 800F520C 000F010C  80 03 02 D0 */	lwz r0, 0x2d0(r3)
/* 800F5210 000F0110  7C 00 20 00 */	cmpw r0, r4
/* 800F5214 000F0114  41 82 00 10 */	beq lbl_800F5224
/* 800F5218 000F0118  4B FF F0 95 */	bl SetEffectivePriority
/* 800F521C 000F011C  2C 03 00 00 */	cmpwi r3, 0
/* 800F5220 000F0120  40 82 FF AC */	bne lbl_800F51CC
lbl_800F5224:
/* 800F5224 000F0124  80 0D 9C 2C */	lwz r0, RunQueueHint-_SDA_BASE_(r13)
/* 800F5228 000F0128  2C 00 00 00 */	cmpwi r0, 0
/* 800F522C 000F012C  41 82 00 0C */	beq lbl_800F5238
/* 800F5230 000F0130  38 60 00 00 */	li r3, 0
/* 800F5234 000F0134  4B FF F2 7D */	bl SelectThread
lbl_800F5238:
/* 800F5238 000F0138  7F E3 FB 78 */	mr r3, r31
/* 800F523C 000F013C  4B FF C6 AD */	bl OSRestoreInterrupts
/* 800F5240 000F0140  7F C3 F3 78 */	mr r3, r30
/* 800F5244 000F0144  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 800F5248 000F0148  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 800F524C 000F014C  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 800F5250 000F0150  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800F5254 000F0154  7C 08 03 A6 */	mtlr r0
/* 800F5258 000F0158  38 21 00 20 */	addi r1, r1, 0x20
/* 800F525C 000F015C  4E 80 00 20 */	blr 

.global OSSleepThread
OSSleepThread:
/* 800F5260 000F0160  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800F5264 000F0164  7C 08 02 A6 */	mflr r0
/* 800F5268 000F0168  90 01 00 14 */	stw r0, 0x14(r1)
/* 800F526C 000F016C  93 E1 00 0C */	stw r31, 0xc(r1)
/* 800F5270 000F0170  93 C1 00 08 */	stw r30, 8(r1)
/* 800F5274 000F0174  7C 7E 1B 78 */	mr r30, r3
/* 800F5278 000F0178  4B FF C6 49 */	bl OSDisableInterrupts
/* 800F527C 000F017C  3C 80 80 00 */	lis r4, 0x800000E4@ha
/* 800F5280 000F0180  38 00 00 04 */	li r0, 4
/* 800F5284 000F0184  80 84 00 E4 */	lwz r4, 0x800000E4@l(r4)
/* 800F5288 000F0188  7C 7F 1B 78 */	mr r31, r3
/* 800F528C 000F018C  B0 04 02 C8 */	sth r0, 0x2c8(r4)
/* 800F5290 000F0190  93 C4 02 DC */	stw r30, 0x2dc(r4)
/* 800F5294 000F0194  80 BE 00 00 */	lwz r5, 0(r30)
/* 800F5298 000F0198  48 00 00 08 */	b lbl_800F52A0
lbl_800F529C:
/* 800F529C 000F019C  80 A5 02 E0 */	lwz r5, 0x2e0(r5)
lbl_800F52A0:
/* 800F52A0 000F01A0  2C 05 00 00 */	cmpwi r5, 0
/* 800F52A4 000F01A4  41 82 00 14 */	beq lbl_800F52B8
/* 800F52A8 000F01A8  80 65 02 D0 */	lwz r3, 0x2d0(r5)
/* 800F52AC 000F01AC  80 04 02 D0 */	lwz r0, 0x2d0(r4)
/* 800F52B0 000F01B0  7C 03 00 00 */	cmpw r3, r0
/* 800F52B4 000F01B4  40 81 FF E8 */	ble lbl_800F529C
lbl_800F52B8:
/* 800F52B8 000F01B8  2C 05 00 00 */	cmpwi r5, 0
/* 800F52BC 000F01BC  40 82 00 30 */	bne lbl_800F52EC
/* 800F52C0 000F01C0  80 7E 00 04 */	lwz r3, 4(r30)
/* 800F52C4 000F01C4  2C 03 00 00 */	cmpwi r3, 0
/* 800F52C8 000F01C8  40 82 00 0C */	bne lbl_800F52D4
/* 800F52CC 000F01CC  90 9E 00 00 */	stw r4, 0(r30)
/* 800F52D0 000F01D0  48 00 00 08 */	b lbl_800F52D8
lbl_800F52D4:
/* 800F52D4 000F01D4  90 83 02 E0 */	stw r4, 0x2e0(r3)
lbl_800F52D8:
/* 800F52D8 000F01D8  90 64 02 E4 */	stw r3, 0x2e4(r4)
/* 800F52DC 000F01DC  38 00 00 00 */	li r0, 0
/* 800F52E0 000F01E0  90 04 02 E0 */	stw r0, 0x2e0(r4)
/* 800F52E4 000F01E4  90 9E 00 04 */	stw r4, 4(r30)
/* 800F52E8 000F01E8  48 00 00 28 */	b lbl_800F5310
lbl_800F52EC:
/* 800F52EC 000F01EC  90 A4 02 E0 */	stw r5, 0x2e0(r4)
/* 800F52F0 000F01F0  80 65 02 E4 */	lwz r3, 0x2e4(r5)
/* 800F52F4 000F01F4  90 85 02 E4 */	stw r4, 0x2e4(r5)
/* 800F52F8 000F01F8  2C 03 00 00 */	cmpwi r3, 0
/* 800F52FC 000F01FC  90 64 02 E4 */	stw r3, 0x2e4(r4)
/* 800F5300 000F0200  40 82 00 0C */	bne lbl_800F530C
/* 800F5304 000F0204  90 9E 00 00 */	stw r4, 0(r30)
/* 800F5308 000F0208  48 00 00 08 */	b lbl_800F5310
lbl_800F530C:
/* 800F530C 000F020C  90 83 02 E0 */	stw r4, 0x2e0(r3)
lbl_800F5310:
/* 800F5310 000F0210  38 00 00 01 */	li r0, 1
/* 800F5314 000F0214  90 0D 9C 2C */	stw r0, RunQueueHint-_SDA_BASE_(r13)
/* 800F5318 000F0218  80 0D 9C 2C */	lwz r0, RunQueueHint-_SDA_BASE_(r13)
/* 800F531C 000F021C  2C 00 00 00 */	cmpwi r0, 0
/* 800F5320 000F0220  41 82 00 0C */	beq lbl_800F532C
/* 800F5324 000F0224  38 60 00 00 */	li r3, 0
/* 800F5328 000F0228  4B FF F1 89 */	bl SelectThread
lbl_800F532C:
/* 800F532C 000F022C  7F E3 FB 78 */	mr r3, r31
/* 800F5330 000F0230  4B FF C5 B9 */	bl OSRestoreInterrupts
/* 800F5334 000F0234  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800F5338 000F0238  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 800F533C 000F023C  83 C1 00 08 */	lwz r30, 8(r1)
/* 800F5340 000F0240  7C 08 03 A6 */	mtlr r0
/* 800F5344 000F0244  38 21 00 10 */	addi r1, r1, 0x10
/* 800F5348 000F0248  4E 80 00 20 */	blr 

.global OSWakeupThread
OSWakeupThread:
/* 800F534C 000F024C  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800F5350 000F0250  7C 08 02 A6 */	mflr r0
/* 800F5354 000F0254  90 01 00 14 */	stw r0, 0x14(r1)
/* 800F5358 000F0258  93 E1 00 0C */	stw r31, 0xc(r1)
/* 800F535C 000F025C  93 C1 00 08 */	stw r30, 8(r1)
/* 800F5360 000F0260  7C 7E 1B 78 */	mr r30, r3
/* 800F5364 000F0264  4B FF C5 5D */	bl OSDisableInterrupts
/* 800F5368 000F0268  3C A0 80 42 */	lis r5, RunQueue@ha
/* 800F536C 000F026C  7C 7F 1B 78 */	mr r31, r3
/* 800F5370 000F0270  38 A5 05 10 */	addi r5, r5, RunQueue@l
/* 800F5374 000F0274  38 C0 00 00 */	li r6, 0
/* 800F5378 000F0278  38 60 00 01 */	li r3, 1
/* 800F537C 000F027C  48 00 00 84 */	b lbl_800F5400
lbl_800F5380:
/* 800F5380 000F0280  80 88 02 E0 */	lwz r4, 0x2e0(r8)
/* 800F5384 000F0284  2C 04 00 00 */	cmpwi r4, 0
/* 800F5388 000F0288  40 82 00 0C */	bne lbl_800F5394
/* 800F538C 000F028C  90 DE 00 04 */	stw r6, 4(r30)
/* 800F5390 000F0290  48 00 00 08 */	b lbl_800F5398
lbl_800F5394:
/* 800F5394 000F0294  90 C4 02 E4 */	stw r6, 0x2e4(r4)
lbl_800F5398:
/* 800F5398 000F0298  90 9E 00 00 */	stw r4, 0(r30)
/* 800F539C 000F029C  B0 68 02 C8 */	sth r3, 0x2c8(r8)
/* 800F53A0 000F02A0  80 08 02 CC */	lwz r0, 0x2cc(r8)
/* 800F53A4 000F02A4  2C 00 00 00 */	cmpwi r0, 0
/* 800F53A8 000F02A8  41 81 00 58 */	bgt lbl_800F5400
/* 800F53AC 000F02AC  80 08 02 D0 */	lwz r0, 0x2d0(r8)
/* 800F53B0 000F02B0  54 00 18 38 */	slwi r0, r0, 3
/* 800F53B4 000F02B4  7C 85 02 14 */	add r4, r5, r0
/* 800F53B8 000F02B8  90 88 02 DC */	stw r4, 0x2dc(r8)
/* 800F53BC 000F02BC  80 E4 00 04 */	lwz r7, 4(r4)
/* 800F53C0 000F02C0  2C 07 00 00 */	cmpwi r7, 0
/* 800F53C4 000F02C4  40 82 00 0C */	bne lbl_800F53D0
/* 800F53C8 000F02C8  91 04 00 00 */	stw r8, 0(r4)
/* 800F53CC 000F02CC  48 00 00 08 */	b lbl_800F53D4
lbl_800F53D0:
/* 800F53D0 000F02D0  91 07 02 E0 */	stw r8, 0x2e0(r7)
lbl_800F53D4:
/* 800F53D4 000F02D4  90 E8 02 E4 */	stw r7, 0x2e4(r8)
/* 800F53D8 000F02D8  90 C8 02 E0 */	stw r6, 0x2e0(r8)
/* 800F53DC 000F02DC  80 88 02 DC */	lwz r4, 0x2dc(r8)
/* 800F53E0 000F02E0  91 04 00 04 */	stw r8, 4(r4)
/* 800F53E4 000F02E4  80 08 02 D0 */	lwz r0, 0x2d0(r8)
/* 800F53E8 000F02E8  80 8D 9C 30 */	lwz r4, RunQueueBits-_SDA_BASE_(r13)
/* 800F53EC 000F02EC  20 00 00 1F */	subfic r0, r0, 0x1f
/* 800F53F0 000F02F0  7C 60 00 30 */	slw r0, r3, r0
/* 800F53F4 000F02F4  7C 80 03 78 */	or r0, r4, r0
/* 800F53F8 000F02F8  90 0D 9C 30 */	stw r0, RunQueueBits-_SDA_BASE_(r13)
/* 800F53FC 000F02FC  90 6D 9C 2C */	stw r3, RunQueueHint-_SDA_BASE_(r13)
lbl_800F5400:
/* 800F5400 000F0300  81 1E 00 00 */	lwz r8, 0(r30)
/* 800F5404 000F0304  2C 08 00 00 */	cmpwi r8, 0
/* 800F5408 000F0308  40 82 FF 78 */	bne lbl_800F5380
/* 800F540C 000F030C  80 0D 9C 2C */	lwz r0, RunQueueHint-_SDA_BASE_(r13)
/* 800F5410 000F0310  2C 00 00 00 */	cmpwi r0, 0
/* 800F5414 000F0314  41 82 00 0C */	beq lbl_800F5420
/* 800F5418 000F0318  38 60 00 00 */	li r3, 0
/* 800F541C 000F031C  4B FF F0 95 */	bl SelectThread
lbl_800F5420:
/* 800F5420 000F0320  7F E3 FB 78 */	mr r3, r31
/* 800F5424 000F0324  4B FF C4 C5 */	bl OSRestoreInterrupts
/* 800F5428 000F0328  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800F542C 000F032C  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 800F5430 000F0330  83 C1 00 08 */	lwz r30, 8(r1)
/* 800F5434 000F0334  7C 08 03 A6 */	mtlr r0
/* 800F5438 000F0338  38 21 00 10 */	addi r1, r1, 0x10
/* 800F543C 000F033C  4E 80 00 20 */	blr 

.global OSSetThreadPriority
OSSetThreadPriority:
/* 800F5440 000F0340  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800F5444 000F0344  7C 08 02 A6 */	mflr r0
/* 800F5448 000F0348  2C 04 00 00 */	cmpwi r4, 0
/* 800F544C 000F034C  90 01 00 24 */	stw r0, 0x24(r1)
/* 800F5450 000F0350  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 800F5454 000F0354  93 C1 00 18 */	stw r30, 0x18(r1)
/* 800F5458 000F0358  7C 9E 23 78 */	mr r30, r4
/* 800F545C 000F035C  93 A1 00 14 */	stw r29, 0x14(r1)
/* 800F5460 000F0360  7C 7D 1B 78 */	mr r29, r3
/* 800F5464 000F0364  41 80 00 0C */	blt lbl_800F5470
/* 800F5468 000F0368  2C 04 00 1F */	cmpwi r4, 0x1f
/* 800F546C 000F036C  40 81 00 0C */	ble lbl_800F5478
lbl_800F5470:
/* 800F5470 000F0370  38 60 00 00 */	li r3, 0
/* 800F5474 000F0374  48 00 00 9C */	b lbl_800F5510
lbl_800F5478:
/* 800F5478 000F0378  4B FF C4 49 */	bl OSDisableInterrupts
/* 800F547C 000F037C  80 1D 02 D4 */	lwz r0, 0x2d4(r29)
/* 800F5480 000F0380  7C 7F 1B 78 */	mr r31, r3
/* 800F5484 000F0384  7C 00 F0 00 */	cmpw r0, r30
/* 800F5488 000F0388  41 82 00 7C */	beq lbl_800F5504
/* 800F548C 000F038C  93 DD 02 D4 */	stw r30, 0x2d4(r29)
lbl_800F5490:
/* 800F5490 000F0390  80 1D 02 CC */	lwz r0, 0x2cc(r29)
/* 800F5494 000F0394  2C 00 00 00 */	cmpwi r0, 0
/* 800F5498 000F0398  41 81 00 58 */	bgt lbl_800F54F0
/* 800F549C 000F039C  80 9D 02 D4 */	lwz r4, 0x2d4(r29)
/* 800F54A0 000F03A0  80 7D 02 F4 */	lwz r3, 0x2f4(r29)
/* 800F54A4 000F03A4  48 00 00 24 */	b lbl_800F54C8
lbl_800F54A8:
/* 800F54A8 000F03A8  80 A3 00 00 */	lwz r5, 0(r3)
/* 800F54AC 000F03AC  2C 05 00 00 */	cmpwi r5, 0
/* 800F54B0 000F03B0  41 82 00 14 */	beq lbl_800F54C4
/* 800F54B4 000F03B4  80 05 02 D0 */	lwz r0, 0x2d0(r5)
/* 800F54B8 000F03B8  7C 00 20 00 */	cmpw r0, r4
/* 800F54BC 000F03BC  40 80 00 08 */	bge lbl_800F54C4
/* 800F54C0 000F03C0  7C 04 03 78 */	mr r4, r0
lbl_800F54C4:
/* 800F54C4 000F03C4  80 63 00 10 */	lwz r3, 0x10(r3)
lbl_800F54C8:
/* 800F54C8 000F03C8  2C 03 00 00 */	cmpwi r3, 0
/* 800F54CC 000F03CC  40 82 FF DC */	bne lbl_800F54A8
/* 800F54D0 000F03D0  80 1D 02 D0 */	lwz r0, 0x2d0(r29)
/* 800F54D4 000F03D4  7C 00 20 00 */	cmpw r0, r4
/* 800F54D8 000F03D8  41 82 00 18 */	beq lbl_800F54F0
/* 800F54DC 000F03DC  7F A3 EB 78 */	mr r3, r29
/* 800F54E0 000F03E0  4B FF ED CD */	bl SetEffectivePriority
/* 800F54E4 000F03E4  2C 03 00 00 */	cmpwi r3, 0
/* 800F54E8 000F03E8  7C 7D 1B 78 */	mr r29, r3
/* 800F54EC 000F03EC  40 82 FF A4 */	bne lbl_800F5490
lbl_800F54F0:
/* 800F54F0 000F03F0  80 0D 9C 2C */	lwz r0, RunQueueHint-_SDA_BASE_(r13)
/* 800F54F4 000F03F4  2C 00 00 00 */	cmpwi r0, 0
/* 800F54F8 000F03F8  41 82 00 0C */	beq lbl_800F5504
/* 800F54FC 000F03FC  38 60 00 00 */	li r3, 0
/* 800F5500 000F0400  4B FF EF B1 */	bl SelectThread
lbl_800F5504:
/* 800F5504 000F0404  7F E3 FB 78 */	mr r3, r31
/* 800F5508 000F0408  4B FF C3 E1 */	bl OSRestoreInterrupts
/* 800F550C 000F040C  38 60 00 01 */	li r3, 1
lbl_800F5510:
/* 800F5510 000F0410  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800F5514 000F0414  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 800F5518 000F0418  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 800F551C 000F041C  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 800F5520 000F0420  7C 08 03 A6 */	mtlr r0
/* 800F5524 000F0424  38 21 00 20 */	addi r1, r1, 0x20
/* 800F5528 000F0428  4E 80 00 20 */	blr 

SleepAlarmHandler:
/* 800F552C 000F042C  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800F5530 000F0430  7C 08 02 A6 */	mflr r0
/* 800F5534 000F0434  90 01 00 14 */	stw r0, 0x14(r1)
/* 800F5538 000F0438  4B FF 83 61 */	bl OSGetAlarmUserData
/* 800F553C 000F043C  4B FF F8 F9 */	bl OSResumeThread
/* 800F5540 000F0440  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800F5544 000F0444  7C 08 03 A6 */	mtlr r0
/* 800F5548 000F0448  38 21 00 10 */	addi r1, r1, 0x10
/* 800F554C 000F044C  4E 80 00 20 */	blr 

.global OSSleepTicks
OSSleepTicks:
/* 800F5550 000F0450  94 21 FF B0 */	stwu r1, -0x50(r1)
/* 800F5554 000F0454  7C 08 02 A6 */	mflr r0
/* 800F5558 000F0458  90 01 00 54 */	stw r0, 0x54(r1)
/* 800F555C 000F045C  93 E1 00 4C */	stw r31, 0x4c(r1)
/* 800F5560 000F0460  93 C1 00 48 */	stw r30, 0x48(r1)
/* 800F5564 000F0464  93 A1 00 44 */	stw r29, 0x44(r1)
/* 800F5568 000F0468  7C 7D 1B 78 */	mr r29, r3
/* 800F556C 000F046C  93 81 00 40 */	stw r28, 0x40(r1)
/* 800F5570 000F0470  7C 9C 23 78 */	mr r28, r4
/* 800F5574 000F0474  4B FF C3 4D */	bl OSDisableInterrupts
/* 800F5578 000F0478  3C 80 80 00 */	lis r4, 0x800000E4@ha
/* 800F557C 000F047C  7C 7E 1B 78 */	mr r30, r3
/* 800F5580 000F0480  83 E4 00 E4 */	lwz r31, 0x800000E4@l(r4)
/* 800F5584 000F0484  2C 1F 00 00 */	cmpwi r31, 0
/* 800F5588 000F0488  40 82 00 0C */	bne lbl_800F5594
/* 800F558C 000F048C  4B FF C3 5D */	bl OSRestoreInterrupts
/* 800F5590 000F0490  48 00 00 54 */	b lbl_800F55E4
lbl_800F5594:
/* 800F5594 000F0494  38 61 00 08 */	addi r3, r1, 8
/* 800F5598 000F0498  4B FF 7B 7D */	bl OSCreateAlarm
/* 800F559C 000F049C  7F E4 FB 78 */	mr r4, r31
/* 800F55A0 000F04A0  38 61 00 08 */	addi r3, r1, 8
/* 800F55A4 000F04A4  4B FF 82 59 */	bl OSSetAlarmTag
/* 800F55A8 000F04A8  7F E4 FB 78 */	mr r4, r31
/* 800F55AC 000F04AC  38 61 00 08 */	addi r3, r1, 8
/* 800F55B0 000F04B0  4B FF 82 E1 */	bl OSSetAlarmUserData
/* 800F55B4 000F04B4  3C E0 80 0F */	lis r7, SleepAlarmHandler@ha
/* 800F55B8 000F04B8  7F 86 E3 78 */	mr r6, r28
/* 800F55BC 000F04BC  7F A5 EB 78 */	mr r5, r29
/* 800F55C0 000F04C0  38 61 00 08 */	addi r3, r1, 8
/* 800F55C4 000F04C4  38 E7 55 2C */	addi r7, r7, SleepAlarmHandler@l
/* 800F55C8 000F04C8  4B FF 7D AD */	bl OSSetAlarm
/* 800F55CC 000F04CC  7F E3 FB 78 */	mr r3, r31
/* 800F55D0 000F04D0  4B FF FA FD */	bl OSSuspendThread
/* 800F55D4 000F04D4  38 61 00 08 */	addi r3, r1, 8
/* 800F55D8 000F04D8  4B FF 7E 91 */	bl OSCancelAlarm
/* 800F55DC 000F04DC  7F C3 F3 78 */	mr r3, r30
/* 800F55E0 000F04E0  4B FF C3 09 */	bl OSRestoreInterrupts
lbl_800F55E4:
/* 800F55E4 000F04E4  80 01 00 54 */	lwz r0, 0x54(r1)
/* 800F55E8 000F04E8  83 E1 00 4C */	lwz r31, 0x4c(r1)
/* 800F55EC 000F04EC  83 C1 00 48 */	lwz r30, 0x48(r1)
/* 800F55F0 000F04F0  83 A1 00 44 */	lwz r29, 0x44(r1)
/* 800F55F4 000F04F4  83 81 00 40 */	lwz r28, 0x40(r1)
/* 800F55F8 000F04F8  7C 08 03 A6 */	mtlr r0
/* 800F55FC 000F04FC  38 21 00 50 */	addi r1, r1, 0x50
/* 800F5600 000F0500  4E 80 00 20 */	blr 
